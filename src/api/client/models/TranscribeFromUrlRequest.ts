/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranscribeFromUrlRequest
 */
export interface TranscribeFromUrlRequest {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof TranscribeFromUrlRequest
     */
    videoUrl: string;
    /**
     * 
     * @type {string}
     * @memberof TranscribeFromUrlRequest
     */
    platform?: TranscribeFromUrlRequestPlatformEnum;
    /**
     * 
     * @type {boolean}
     * @memberof TranscribeFromUrlRequest
     */
    preferAudioOnly?: boolean;
}


/**
 * @export
 */
export const TranscribeFromUrlRequestPlatformEnum = {
    Tiktok: 'tiktok',
    Instagram: 'instagram',
    Youtube: 'youtube'
} as const;
export type TranscribeFromUrlRequestPlatformEnum = typeof TranscribeFromUrlRequestPlatformEnum[keyof typeof TranscribeFromUrlRequestPlatformEnum];


/**
 * Check if a given object implements the TranscribeFromUrlRequest interface.
 */
export function instanceOfTranscribeFromUrlRequest(value: object): value is TranscribeFromUrlRequest {
    if (!('videoUrl' in value) || value['videoUrl'] === undefined) return false;
    return true;
}

export function TranscribeFromUrlRequestFromJSON(json: any): TranscribeFromUrlRequest {
    return TranscribeFromUrlRequestFromJSONTyped(json, false);
}

export function TranscribeFromUrlRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranscribeFromUrlRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'videoUrl': json['videoUrl'],
        'platform': json['platform'] == null ? undefined : json['platform'],
        'preferAudioOnly': json['preferAudioOnly'] == null ? undefined : json['preferAudioOnly'],
    };
}

export function TranscribeFromUrlRequestToJSON(json: any): TranscribeFromUrlRequest {
    return TranscribeFromUrlRequestToJSONTyped(json, false);
}

export function TranscribeFromUrlRequestToJSONTyped(value?: TranscribeFromUrlRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'videoUrl': value['videoUrl'],
        'platform': value['platform'],
        'preferAudioOnly': value['preferAudioOnly'],
    };
}


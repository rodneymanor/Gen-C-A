/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddVideoToCollectionRequest
 */
export interface AddVideoToCollectionRequest {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof AddVideoToCollectionRequest
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof AddVideoToCollectionRequest
     */
    collectionId: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof AddVideoToCollectionRequest
     */
    videoData: { [key: string]: any; };
}

/**
 * Check if a given object implements the AddVideoToCollectionRequest interface.
 */
export function instanceOfAddVideoToCollectionRequest(value: object): value is AddVideoToCollectionRequest {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('collectionId' in value) || value['collectionId'] === undefined) return false;
    if (!('videoData' in value) || value['videoData'] === undefined) return false;
    return true;
}

export function AddVideoToCollectionRequestFromJSON(json: any): AddVideoToCollectionRequest {
    return AddVideoToCollectionRequestFromJSONTyped(json, false);
}

export function AddVideoToCollectionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddVideoToCollectionRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'userId': json['userId'],
        'collectionId': json['collectionId'],
        'videoData': json['videoData'],
    };
}

export function AddVideoToCollectionRequestToJSON(json: any): AddVideoToCollectionRequest {
    return AddVideoToCollectionRequestToJSONTyped(json, false);
}

export function AddVideoToCollectionRequestToJSONTyped(value?: AddVideoToCollectionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'userId': value['userId'],
        'collectionId': value['collectionId'],
        'videoData': value['videoData'],
    };
}


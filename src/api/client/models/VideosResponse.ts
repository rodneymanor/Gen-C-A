/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VideosResponse
 */
export interface VideosResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {boolean}
     * @memberof VideosResponse
     */
    success: boolean;
    /**
     * 
     * @type {Array<{ [key: string]: any; }>}
     * @memberof VideosResponse
     */
    videos: Array<{ [key: string]: any; }>;
    /**
     * 
     * @type {number}
     * @memberof VideosResponse
     */
    totalCount?: number;
    /**
     * 
     * @type {string}
     * @memberof VideosResponse
     */
    lastDocId?: string;
}

/**
 * Check if a given object implements the VideosResponse interface.
 */
export function instanceOfVideosResponse(value: object): value is VideosResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('videos' in value) || value['videos'] === undefined) return false;
    return true;
}

export function VideosResponseFromJSON(json: any): VideosResponse {
    return VideosResponseFromJSONTyped(json, false);
}

export function VideosResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideosResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'success': json['success'],
        'videos': json['videos'],
        'totalCount': json['totalCount'] == null ? undefined : json['totalCount'],
        'lastDocId': json['lastDocId'] == null ? undefined : json['lastDocId'],
    };
}

export function VideosResponseToJSON(json: any): VideosResponse {
    return VideosResponseToJSONTyped(json, false);
}

export function VideosResponseToJSONTyped(value?: VideosResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'success': value['success'],
        'videos': value['videos'],
        'totalCount': value['totalCount'],
        'lastDocId': value['lastDocId'],
    };
}


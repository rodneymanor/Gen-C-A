/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranscriptChunk
 */
export interface TranscriptChunk {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof TranscriptChunk
     */
    text: string;
    /**
     * 
     * @type {number}
     * @memberof TranscriptChunk
     */
    start?: number;
    /**
     * 
     * @type {number}
     * @memberof TranscriptChunk
     */
    end?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof TranscriptChunk
     */
    timestamp?: Array<number>;
}

/**
 * Check if a given object implements the TranscriptChunk interface.
 */
export function instanceOfTranscriptChunk(value: object): value is TranscriptChunk {
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function TranscriptChunkFromJSON(json: any): TranscriptChunk {
    return TranscriptChunkFromJSONTyped(json, false);
}

export function TranscriptChunkFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranscriptChunk {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'text': json['text'],
        'start': json['start'] == null ? undefined : json['start'],
        'end': json['end'] == null ? undefined : json['end'],
        'timestamp': json['timestamp'] == null ? undefined : json['timestamp'],
    };
}

export function TranscriptChunkToJSON(json: any): TranscriptChunk {
    return TranscriptChunkToJSONTyped(json, false);
}

export function TranscriptChunkToJSONTyped(value?: TranscriptChunk | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'text': value['text'],
        'start': value['start'],
        'end': value['end'],
        'timestamp': value['timestamp'],
    };
}


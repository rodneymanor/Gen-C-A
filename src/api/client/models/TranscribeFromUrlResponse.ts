/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TranscribeFromUrlResponseMeta } from './TranscribeFromUrlResponseMeta';
import {
    TranscribeFromUrlResponseMetaFromJSON,
    TranscribeFromUrlResponseMetaFromJSONTyped,
    TranscribeFromUrlResponseMetaToJSON,
    TranscribeFromUrlResponseMetaToJSONTyped,
} from './TranscribeFromUrlResponseMeta';

/**
 * 
 * @export
 * @interface TranscribeFromUrlResponse
 */
export interface TranscribeFromUrlResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {boolean}
     * @memberof TranscribeFromUrlResponse
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof TranscribeFromUrlResponse
     */
    transcript?: string;
    /**
     * 
     * @type {TranscribeFromUrlResponseMeta}
     * @memberof TranscribeFromUrlResponse
     */
    meta?: TranscribeFromUrlResponseMeta;
}

/**
 * Check if a given object implements the TranscribeFromUrlResponse interface.
 */
export function instanceOfTranscribeFromUrlResponse(value: object): value is TranscribeFromUrlResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    return true;
}

export function TranscribeFromUrlResponseFromJSON(json: any): TranscribeFromUrlResponse {
    return TranscribeFromUrlResponseFromJSONTyped(json, false);
}

export function TranscribeFromUrlResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranscribeFromUrlResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'success': json['success'],
        'transcript': json['transcript'] == null ? undefined : json['transcript'],
        'meta': json['meta'] == null ? undefined : TranscribeFromUrlResponseMetaFromJSON(json['meta']),
    };
}

export function TranscribeFromUrlResponseToJSON(json: any): TranscribeFromUrlResponse {
    return TranscribeFromUrlResponseToJSONTyped(json, false);
}

export function TranscribeFromUrlResponseToJSONTyped(value?: TranscribeFromUrlResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'success': value['success'],
        'transcript': value['transcript'],
        'meta': TranscribeFromUrlResponseMetaToJSON(value['meta']),
    };
}


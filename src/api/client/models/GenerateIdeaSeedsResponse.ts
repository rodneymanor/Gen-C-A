/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GenerateIdeaSeedsResponseMeta } from './GenerateIdeaSeedsResponseMeta';
import {
    GenerateIdeaSeedsResponseMetaFromJSON,
    GenerateIdeaSeedsResponseMetaFromJSONTyped,
    GenerateIdeaSeedsResponseMetaToJSON,
    GenerateIdeaSeedsResponseMetaToJSONTyped,
} from './GenerateIdeaSeedsResponseMeta';
import type { IdeaSeed } from './IdeaSeed';
import {
    IdeaSeedFromJSON,
    IdeaSeedFromJSONTyped,
    IdeaSeedToJSON,
    IdeaSeedToJSONTyped,
} from './IdeaSeed';

/**
 * 
 * @export
 * @interface GenerateIdeaSeedsResponse
 */
export interface GenerateIdeaSeedsResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {boolean}
     * @memberof GenerateIdeaSeedsResponse
     */
    success: boolean;
    /**
     * 
     * @type {Array<IdeaSeed>}
     * @memberof GenerateIdeaSeedsResponse
     */
    ideas: Array<IdeaSeed>;
    /**
     * 
     * @type {GenerateIdeaSeedsResponseMeta}
     * @memberof GenerateIdeaSeedsResponse
     */
    meta?: GenerateIdeaSeedsResponseMeta;
}

/**
 * Check if a given object implements the GenerateIdeaSeedsResponse interface.
 */
export function instanceOfGenerateIdeaSeedsResponse(value: object): value is GenerateIdeaSeedsResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('ideas' in value) || value['ideas'] === undefined) return false;
    return true;
}

export function GenerateIdeaSeedsResponseFromJSON(json: any): GenerateIdeaSeedsResponse {
    return GenerateIdeaSeedsResponseFromJSONTyped(json, false);
}

export function GenerateIdeaSeedsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerateIdeaSeedsResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'success': json['success'],
        'ideas': ((json['ideas'] as Array<any>).map(IdeaSeedFromJSON)),
        'meta': json['meta'] == null ? undefined : GenerateIdeaSeedsResponseMetaFromJSON(json['meta']),
    };
}

export function GenerateIdeaSeedsResponseToJSON(json: any): GenerateIdeaSeedsResponse {
    return GenerateIdeaSeedsResponseToJSONTyped(json, false);
}

export function GenerateIdeaSeedsResponseToJSONTyped(value?: GenerateIdeaSeedsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'success': value['success'],
        'ideas': ((value['ideas'] as Array<any>).map(IdeaSeedToJSON)),
        'meta': GenerateIdeaSeedsResponseMetaToJSON(value['meta']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Note } from './Note';
import {
    NoteFromJSON,
    NoteFromJSONTyped,
    NoteToJSON,
    NoteToJSONTyped,
} from './Note';

/**
 * 
 * @export
 * @interface NotesResponse
 */
export interface NotesResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {boolean}
     * @memberof NotesResponse
     */
    success: boolean;
    /**
     * 
     * @type {Array<Note>}
     * @memberof NotesResponse
     */
    notes?: Array<Note>;
}

/**
 * Check if a given object implements the NotesResponse interface.
 */
export function instanceOfNotesResponse(value: object): value is NotesResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    return true;
}

export function NotesResponseFromJSON(json: any): NotesResponse {
    return NotesResponseFromJSONTyped(json, false);
}

export function NotesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotesResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'success': json['success'],
        'notes': json['notes'] == null ? undefined : ((json['notes'] as Array<any>).map(NoteFromJSON)),
    };
}

export function NotesResponseToJSON(json: any): NotesResponse {
    return NotesResponseToJSONTyped(json, false);
}

export function NotesResponseToJSONTyped(value?: NotesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'success': value['success'],
        'notes': value['notes'] == null ? undefined : ((value['notes'] as Array<any>).map(NoteToJSON)),
    };
}


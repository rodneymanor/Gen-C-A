/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Script } from './Script';
import {
    ScriptFromJSON,
    ScriptFromJSONTyped,
    ScriptToJSON,
    ScriptToJSONTyped,
} from './Script';

/**
 * 
 * @export
 * @interface ScriptResponse
 */
export interface ScriptResponse {
    [key: string]: any | any;
    /**
     * 
     * @type {boolean}
     * @memberof ScriptResponse
     */
    success: boolean;
    /**
     * 
     * @type {Script}
     * @memberof ScriptResponse
     */
    script?: Script;
}

/**
 * Check if a given object implements the ScriptResponse interface.
 */
export function instanceOfScriptResponse(value: object): value is ScriptResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    return true;
}

export function ScriptResponseFromJSON(json: any): ScriptResponse {
    return ScriptResponseFromJSONTyped(json, false);
}

export function ScriptResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScriptResponse {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'success': json['success'],
        'script': json['script'] == null ? undefined : ScriptFromJSON(json['script']),
    };
}

export function ScriptResponseToJSON(json: any): ScriptResponse {
    return ScriptResponseToJSONTyped(json, false);
}

export function ScriptResponseToJSONTyped(value?: ScriptResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'success': value['success'],
        'script': ScriptToJSON(value['script']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IdeaSeedScores
 */
export interface IdeaSeedScores {
    /**
     * 
     * @type {number}
     * @memberof IdeaSeedScores
     */
    hookPotential: number;
    /**
     * 
     * @type {number}
     * @memberof IdeaSeedScores
     */
    specificity: number;
    /**
     * 
     * @type {number}
     * @memberof IdeaSeedScores
     */
    actionability: number;
    /**
     * 
     * @type {number}
     * @memberof IdeaSeedScores
     */
    novelty: number;
    /**
     * 
     * @type {number}
     * @memberof IdeaSeedScores
     */
    overall: number;
}

/**
 * Check if a given object implements the IdeaSeedScores interface.
 */
export function instanceOfIdeaSeedScores(value: object): value is IdeaSeedScores {
    if (!('hookPotential' in value) || value['hookPotential'] === undefined) return false;
    if (!('specificity' in value) || value['specificity'] === undefined) return false;
    if (!('actionability' in value) || value['actionability'] === undefined) return false;
    if (!('novelty' in value) || value['novelty'] === undefined) return false;
    if (!('overall' in value) || value['overall'] === undefined) return false;
    return true;
}

export function IdeaSeedScoresFromJSON(json: any): IdeaSeedScores {
    return IdeaSeedScoresFromJSONTyped(json, false);
}

export function IdeaSeedScoresFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdeaSeedScores {
    if (json == null) {
        return json;
    }
    return {
        
        'hookPotential': json['hookPotential'],
        'specificity': json['specificity'],
        'actionability': json['actionability'],
        'novelty': json['novelty'],
        'overall': json['overall'],
    };
}

export function IdeaSeedScoresToJSON(json: any): IdeaSeedScores {
    return IdeaSeedScoresToJSONTyped(json, false);
}

export function IdeaSeedScoresToJSONTyped(value?: IdeaSeedScores | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hookPotential': value['hookPotential'],
        'specificity': value['specificity'],
        'actionability': value['actionability'],
        'novelty': value['novelty'],
        'overall': value['overall'],
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OrchestrateRequestOptions } from './OrchestrateRequestOptions';
import {
    OrchestrateRequestOptionsFromJSON,
    OrchestrateRequestOptionsFromJSONTyped,
    OrchestrateRequestOptionsToJSON,
    OrchestrateRequestOptionsToJSONTyped,
} from './OrchestrateRequestOptions';

/**
 * 
 * @export
 * @interface OrchestrateRequest
 */
export interface OrchestrateRequest {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof OrchestrateRequest
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof OrchestrateRequest
     */
    collectionId?: string;
    /**
     * 
     * @type {OrchestrateRequestOptions}
     * @memberof OrchestrateRequest
     */
    options?: OrchestrateRequestOptions;
}

/**
 * Check if a given object implements the OrchestrateRequest interface.
 */
export function instanceOfOrchestrateRequest(value: object): value is OrchestrateRequest {
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function OrchestrateRequestFromJSON(json: any): OrchestrateRequest {
    return OrchestrateRequestFromJSONTyped(json, false);
}

export function OrchestrateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrchestrateRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'url': json['url'],
        'collectionId': json['collectionId'] == null ? undefined : json['collectionId'],
        'options': json['options'] == null ? undefined : OrchestrateRequestOptionsFromJSON(json['options']),
    };
}

export function OrchestrateRequestToJSON(json: any): OrchestrateRequest {
    return OrchestrateRequestToJSONTyped(json, false);
}

export function OrchestrateRequestToJSONTyped(value?: OrchestrateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'url': value['url'],
        'collectionId': value['collectionId'],
        'options': OrchestrateRequestOptionsToJSON(value['options']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ApiVideoScrapeUrlPostRequest
 */
export interface ApiVideoScrapeUrlPostRequest {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof ApiVideoScrapeUrlPostRequest
     */
    url: string;
    /**
     * 
     * @type {boolean}
     * @memberof ApiVideoScrapeUrlPostRequest
     */
    preferAudioOnly?: boolean;
}

/**
 * Check if a given object implements the ApiVideoScrapeUrlPostRequest interface.
 */
export function instanceOfApiVideoScrapeUrlPostRequest(value: object): value is ApiVideoScrapeUrlPostRequest {
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function ApiVideoScrapeUrlPostRequestFromJSON(json: any): ApiVideoScrapeUrlPostRequest {
    return ApiVideoScrapeUrlPostRequestFromJSONTyped(json, false);
}

export function ApiVideoScrapeUrlPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApiVideoScrapeUrlPostRequest {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'url': json['url'],
        'preferAudioOnly': json['preferAudioOnly'] == null ? undefined : json['preferAudioOnly'],
    };
}

export function ApiVideoScrapeUrlPostRequestToJSON(json: any): ApiVideoScrapeUrlPostRequest {
    return ApiVideoScrapeUrlPostRequestToJSONTyped(json, false);
}

export function ApiVideoScrapeUrlPostRequestToJSONTyped(value?: ApiVideoScrapeUrlPostRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'url': value['url'],
        'preferAudioOnly': value['preferAudioOnly'],
    };
}


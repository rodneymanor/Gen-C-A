/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdeaSeedCtaTarget } from './IdeaSeedCtaTarget';
import {
    IdeaSeedCtaTargetFromJSON,
    IdeaSeedCtaTargetFromJSONTyped,
    IdeaSeedCtaTargetToJSON,
    IdeaSeedCtaTargetToJSONTyped,
} from './IdeaSeedCtaTarget';

/**
 * 
 * @export
 * @interface IdeaSeedCta
 */
export interface IdeaSeedCta {
    /**
     * 
     * @type {string}
     * @memberof IdeaSeedCta
     */
    type: IdeaSeedCtaTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof IdeaSeedCta
     */
    prompt: string;
    /**
     * 
     * @type {IdeaSeedCtaTarget}
     * @memberof IdeaSeedCta
     */
    target?: IdeaSeedCtaTarget;
}


/**
 * @export
 */
export const IdeaSeedCtaTypeEnum = {
    Comment: 'comment',
    WatchFull: 'watch_full',
    Subscribe: 'subscribe',
    Download: 'download',
    Signup: 'signup',
    Follow: 'follow',
    Buy: 'buy'
} as const;
export type IdeaSeedCtaTypeEnum = typeof IdeaSeedCtaTypeEnum[keyof typeof IdeaSeedCtaTypeEnum];


/**
 * Check if a given object implements the IdeaSeedCta interface.
 */
export function instanceOfIdeaSeedCta(value: object): value is IdeaSeedCta {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('prompt' in value) || value['prompt'] === undefined) return false;
    return true;
}

export function IdeaSeedCtaFromJSON(json: any): IdeaSeedCta {
    return IdeaSeedCtaFromJSONTyped(json, false);
}

export function IdeaSeedCtaFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdeaSeedCta {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'prompt': json['prompt'],
        'target': json['target'] == null ? undefined : IdeaSeedCtaTargetFromJSON(json['target']),
    };
}

export function IdeaSeedCtaToJSON(json: any): IdeaSeedCta {
    return IdeaSeedCtaToJSONTyped(json, false);
}

export function IdeaSeedCtaToJSONTyped(value?: IdeaSeedCta | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'prompt': value['prompt'],
        'target': IdeaSeedCtaTargetToJSON(value['target']),
    };
}


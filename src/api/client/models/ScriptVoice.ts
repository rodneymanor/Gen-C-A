/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScriptVoice
 */
export interface ScriptVoice {
    [key: string]: any | any;
    /**
     * 
     * @type {string}
     * @memberof ScriptVoice
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ScriptVoice
     */
    name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ScriptVoice
     */
    badges?: Array<string>;
}

/**
 * Check if a given object implements the ScriptVoice interface.
 */
export function instanceOfScriptVoice(value: object): value is ScriptVoice {
    return true;
}

export function ScriptVoiceFromJSON(json: any): ScriptVoice {
    return ScriptVoiceFromJSONTyped(json, false);
}

export function ScriptVoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScriptVoice {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'badges': json['badges'] == null ? undefined : json['badges'],
    };
}

export function ScriptVoiceToJSON(json: any): ScriptVoice {
    return ScriptVoiceToJSONTyped(json, false);
}

export function ScriptVoiceToJSONTyped(value?: ScriptVoice | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'id': value['id'],
        'name': value['name'],
        'badges': value['badges'],
    };
}


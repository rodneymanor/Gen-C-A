/* tslint:disable */
/* eslint-disable */
/**
 * Gen-C Scripts API
 * OpenAPI specification for key backend surfaces used by the dashboard. The documented endpoints power script CRUD flows in the dashboard and the YouTube idea seed generator. Responses follow the existing `{ success: ... }` envelope used by the legacy fetch helpers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IdeaSeedProof
 */
export interface IdeaSeedProof {
    /**
     * 
     * @type {string}
     * @memberof IdeaSeedProof
     */
    type: IdeaSeedProofTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof IdeaSeedProof
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof IdeaSeedProof
     */
    numbers?: string;
}


/**
 * @export
 */
export const IdeaSeedProofTypeEnum = {
    Stat: 'stat',
    Example: 'example',
    Quote: 'quote',
    Demo: 'demo'
} as const;
export type IdeaSeedProofTypeEnum = typeof IdeaSeedProofTypeEnum[keyof typeof IdeaSeedProofTypeEnum];


/**
 * Check if a given object implements the IdeaSeedProof interface.
 */
export function instanceOfIdeaSeedProof(value: object): value is IdeaSeedProof {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    return true;
}

export function IdeaSeedProofFromJSON(json: any): IdeaSeedProof {
    return IdeaSeedProofFromJSONTyped(json, false);
}

export function IdeaSeedProofFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdeaSeedProof {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'text': json['text'],
        'numbers': json['numbers'] == null ? undefined : json['numbers'],
    };
}

export function IdeaSeedProofToJSON(json: any): IdeaSeedProof {
    return IdeaSeedProofToJSONTyped(json, false);
}

export function IdeaSeedProofToJSONTyped(value?: IdeaSeedProof | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'text': value['text'],
        'numbers': value['numbers'],
    };
}


import {
  ASC,
  DESC,
  LARGE,
  LOADING_CONTENTS_OPACITY,
  SMALL,
  TableBodyCell,
  TableBodyRow,
  assertIsSortable,
  getPageRows,
  getTruncationStyleVars,
  inlineStylesIfRanking,
  reorderRows,
  validateSortKey,
  withDimensions,
  withSortedPageRows
} from "./chunk-AA7H4DCR.js";
import {
  button_default
} from "./chunk-GANZWA7J.js";
import "./chunk-TZAXJEG4.js";
import "./chunk-M7FNARKQ.js";
import {
  useControlled
} from "./chunk-IVKVPVL4.js";
import {
  memoizeOne
} from "./chunk-6X5WLL3E.js";
import {
  tooltip_default
} from "./chunk-ATV5ZQDH.js";
import "./chunk-HZIK6X6M.js";
import "./chunk-ORKNSTQ6.js";
import {
  spinner_default
} from "./chunk-PLHDLCB6.js";
import {
  box_default,
  flex_default,
  inline_default,
  pressable_default,
  text_default
} from "./chunk-VV6Z5BCY.js";
import "./chunk-XUSVWCLU.js";
import "./chunk-S2APNXGT.js";
import "./chunk-XXZRY3WL.js";
import "./chunk-CGH4DJNJ.js";
import {
  B100,
  B50,
  B75,
  N10,
  N300,
  N30A,
  N40
} from "./chunk-XIW5VD7B.js";
import {
  noop,
  visually_hidden_default
} from "./chunk-KXQMNIDH.js";
import "./chunk-ATF5PCW4.js";
import {
  usePlatformLeafEventHandler
} from "./chunk-63XL5HNI.js";
import {
  _toConsumableArray
} from "./chunk-3GZOTWFT.js";
import {
  base_new_exports,
  init_base_new
} from "./chunk-RYM5NJC5.js";
import {
  fg,
  init_esm
} from "./chunk-TU6YP6NE.js";
import {
  _objectWithoutProperties,
  _slicedToArray,
  init_objectWithoutProperties,
  init_slicedToArray
} from "./chunk-DVL37L2H.js";
import {
  _classCallCheck,
  _createClass,
  _getPrototypeOf,
  _inherits,
  _possibleConstructorReturn,
  init_classCallCheck,
  init_createClass,
  init_getPrototypeOf,
  init_inherits,
  init_possibleConstructorReturn
} from "./chunk-SHSMMZOB.js";
import {
  base_exports,
  init_base
} from "./chunk-6B65WPO5.js";
import {
  ax,
  cssCustomPropertyValue,
  init_runtime
} from "./chunk-ZNWH4LFA.js";
import {
  _defineProperty,
  _typeof,
  init_defineProperty,
  init_typeof
} from "./chunk-LBGAJG32.js";
import "./chunk-AAY5IJNO.js";
import {
  _extends,
  init_extends
} from "./chunk-64QIVKMX.js";
import "./chunk-G52XTN3B.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/icon/core/chevron-left.js
var require_chevron_left = __commonJS({
  "node_modules/@atlaskit/icon/core/chevron-left.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronLeftIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ChevronLeftIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" d="m9.97 1.47-6 6a.75.75 0 0 0-.052 1.004l.052.056 6 6 1.06-1.06L5.56 8l5.47-5.47z"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronLeftIcon.displayName = "ChevronLeftIcon";
    var _default = exports.default = ChevronLeftIcon;
  }
});

// node_modules/@atlaskit/icon/glyph/chevron-left-large.js
var require_chevron_left_large = __commonJS({
  "node_modules/@atlaskit/icon/glyph/chevron-left-large.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronLeftLargeIcon2 = (props) => _react.default.createElement(_base.Icon, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="m9.005 10.995 4.593-4.593a.99.99 0 1 1 1.4 1.4l-3.9 3.9 3.9 3.9a.99.99 0 0 1-1.4 1.4L9.005 12.41a1 1 0 0 1 0-1.414"/></svg>`
    }, props));
    ChevronLeftLargeIcon2.displayName = "ChevronLeftLargeIcon";
    var _default = exports.default = ChevronLeftLargeIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/chevron-left--chevron-left-large.js
var require_chevron_left_chevron_left_large = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/chevron-left--chevron-left-large.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _chevronLeft = _interopRequireDefault(require_chevron_left());
    var _chevronLeftLarge = _interopRequireDefault(require_chevron_left_large());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronLeftIcon = (props) => _react.default.createElement(_chevronLeft.default, Object.assign({
      name: "ChevronLeftIcon",
      LEGACY_fallbackIcon: _chevronLeftLarge.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronLeftIcon.displayName = "ChevronLeftIconMigration";
    var _default = exports.default = ChevronLeftIcon;
  }
});

// node_modules/@atlaskit/icon/core/chevron-right.js
var require_chevron_right = __commonJS({
  "node_modules/@atlaskit/icon/core/chevron-right.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronRightIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ChevronRightIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" d="m6.03 1.47 6 6a.75.75 0 0 1 .052 1.004l-.052.056-6 6-1.06-1.06L10.44 8 4.97 2.53z"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronRightIcon.displayName = "ChevronRightIcon";
    var _default = exports.default = ChevronRightIcon;
  }
});

// node_modules/@atlaskit/icon/glyph/chevron-right-large.js
var require_chevron_right_large = __commonJS({
  "node_modules/@atlaskit/icon/glyph/chevron-right-large.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronRightLargeIcon2 = (props) => _react.default.createElement(_base.Icon, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M14.995 10.995a1 1 0 0 1 0 1.414l-4.593 4.593a.99.99 0 0 1-1.4-1.4l3.9-3.9-3.9-3.9a.99.99 0 0 1 1.4-1.4z"/></svg>`
    }, props));
    ChevronRightLargeIcon2.displayName = "ChevronRightLargeIcon";
    var _default = exports.default = ChevronRightLargeIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/chevron-right--chevron-right-large.js
var require_chevron_right_chevron_right_large = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/chevron-right--chevron-right-large.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _chevronRight = _interopRequireDefault(require_chevron_right());
    var _chevronRightLarge = _interopRequireDefault(require_chevron_right_large());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronRightIcon = (props) => _react.default.createElement(_chevronRight.default, Object.assign({
      name: "ChevronRightIcon",
      LEGACY_fallbackIcon: _chevronRightLarge.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronRightIcon.displayName = "ChevronRightIconMigration";
    var _default = exports.default = ChevronRightIcon;
  }
});

// node_modules/@atlaskit/icon/core/arrow-down.js
var require_arrow_down = __commonJS({
  "node_modules/@atlaskit/icon/core/arrow-down.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ArrowDownIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ArrowDownIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8.75 1v11.44l3.72-3.72 1.06 1.06-5 5a.75.75 0 0 1-1.06 0l-5-5 1.06-1.06 3.72 3.72V1z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ArrowDownIcon2.displayName = "ArrowDownIcon";
    var _default = exports.default = ArrowDownIcon2;
  }
});

// node_modules/@atlaskit/icon/core/arrow-up.js
var require_arrow_up = __commonJS({
  "node_modules/@atlaskit/icon/core/arrow-up.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ArrowUpIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ArrowUpIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8.75 15V3.56l3.72 3.72 1.06-1.06-5-5a.75.75 0 0 0-1.06 0l-5 5 1.06 1.06 3.72-3.72V15z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ArrowUpIcon2.displayName = "ArrowUpIcon";
    var _default = exports.default = ArrowUpIcon2;
  }
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/stateful.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react20 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/components/stateless.js
init_extends();
init_objectWithoutProperties();
init_slicedToArray();
var import_react19 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/dynamic-table.js
init_extends();
init_defineProperty();
init_objectWithoutProperties();
var React = __toESM(require_react());
init_runtime();
var import_react = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/dynamic-table.compiled.css";
var _excluded = ["isFixedSize", "hasDataRow", "children", "testId", "isLoading"];
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var Table = (0, import_react.forwardRef)(function(_ref, ref) {
  var isFixedSize = _ref.isFixedSize, hasDataRow = _ref.hasDataRow, children = _ref.children, testId = _ref.testId, isLoading = _ref.isLoading, rest = _objectWithoutProperties(_ref, _excluded);
  return React.createElement("table", _extends({
    inert: isLoading ? "" : void 0,
    ref
  }, rest, {
    "data-testid": testId && "".concat(testId, "--table"),
    className: ax(["_1bsb1osq _yq5hus1c _btyzidpf _ect41gqc", isFixedSize && "_1kqm1n9t", hasDataRow && "_179rralu"]),
    style: _objectSpread(_objectSpread({}, {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      "--local-dynamic-table-hover-bg": "var(--ds-background-neutral-subtle-hovered, ".concat(N10, ")"),
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      "--local-dynamic-table-highlighted-bg": "var(--ds-background-selected, ".concat(B50, ")"),
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      "--local-dynamic-table-hover-highlighted-bg": "var(--ds-background-selected-hovered, ".concat(B75, ")"),
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      "--local-dynamic-table-row-focus-outline": "var(--ds-border-focused, ".concat(B100, ")")
    }), {}, {
      "--_k02y3n": cssCustomPropertyValue("2px solid ".concat("var(--ds-border, ".concat(N40, ")")))
    })
  }), children);
});
var Caption = function Caption2(_ref2) {
  var children = _ref2.children;
  return React.createElement("caption", {
    className: ax(["_11c8lodh _6rthu2gc _1pfh1ejb _m6k41e03"])
  }, children);
};
var PaginationWrapper = function PaginationWrapper2(_ref3) {
  var children = _ref3.children, testId = _ref3.testId;
  return React.createElement("div", {
    "data-testid": testId && "".concat(testId, "--pagination--container"),
    className: ax(["_1e0c1txw _1bah1h6o"])
  }, children);
};

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/empty-body.js
var React2 = __toESM(require_react());
init_runtime();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/empty-body.compiled.css";
var EmptyViewWithFixedHeight = function EmptyViewWithFixedHeight2(_ref) {
  var children = _ref.children, testId = _ref.testId;
  return React2.createElement("div", {
    "data-testid": testId && "".concat(testId, "--empty-view-with-fixed-height"),
    className: ax(["_4t3i1jdh"])
  }, children);
};
var EmptyViewContainer = function EmptyViewContainer2(props) {
  var children = props.children, testId = props.testId;
  return React2.createElement("div", {
    "data-testid": testId && "".concat(testId, "--empty-view-container"),
    className: ax(["_19pk1wug _2hwx1wug _otyr1wug _18u01wug _ca0q19bv _u5f319bv _n3td19bv _19bv19bv _1bsb1ssb _y3gn1h6o"])
  }, children);
};

// node_modules/@atlaskit/dynamic-table/dist/esm/components/body.js
init_extends();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react3 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-row.js
init_extends();
init_objectWithoutProperties();
var import_react2 = __toESM(require_react());
var _excluded2 = ["cells"];
var _excluded22 = ["content", "testId"];
var Row = function Row2(_ref) {
  var row = _ref.row, head = _ref.head, testId = _ref.testId, isFixedSize = _ref.isFixedSize, isHighlighted = _ref.isHighlighted;
  var cells = row.cells, restRowProps = _objectWithoutProperties(row, _excluded2);
  return import_react2.default.createElement(TableBodyRow, _extends({}, restRowProps, {
    isHighlighted
  }, isHighlighted ? {
    "data-ts--dynamic-table--table-row--highlighted": true
  } : null, {
    testId: row.testId || testId && "".concat(testId, "--row-").concat(restRowProps.key)
  }), cells.map(function(cell, cellIndex) {
    var content = cell.content, cellTestId = cell.testId, restCellProps = _objectWithoutProperties(cell, _excluded22);
    var _ref2 = (head || {
      cells: []
    }).cells[cellIndex] || {}, shouldTruncate = _ref2.shouldTruncate, width = _ref2.width;
    return import_react2.default.createElement(TableBodyCell, _extends({
      "data-testid": cellTestId || testId && "".concat(testId, "--cell-").concat(cellIndex)
    }, restCellProps, {
      isFixedSize,
      key: cellIndex,
      shouldTruncate,
      width
    }), content);
  }));
};
var table_row_default = Row;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/body.js
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var BodyComponent = function(_React$Component) {
  function BodyComponent2() {
    _classCallCheck(this, BodyComponent2);
    return _callSuper(this, BodyComponent2, arguments);
  }
  _inherits(BodyComponent2, _React$Component);
  return _createClass(BodyComponent2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, pageRows = _this$props.pageRows, head = _this$props.head, isFixedSize = _this$props.isFixedSize, highlightedRowIndex = _this$props.highlightedRowIndex, testId = _this$props.testId, forwardedRef = _this$props.forwardedRef;
      return import_react3.default.createElement("tbody", {
        "data-testid": testId && "".concat(testId, "--body"),
        ref: forwardedRef
      }, pageRows.map(function(row, rowIndex) {
        return import_react3.default.createElement(table_row_default, {
          head,
          isFixedSize,
          key: row.key || rowIndex,
          row,
          isHighlighted: row.isHighlighted || !!highlightedRowIndex && (typeof highlightedRowIndex === "number" ? highlightedRowIndex === rowIndex : highlightedRowIndex.indexOf(rowIndex) > -1),
          testId
        });
      }));
    }
  }]);
}(import_react3.default.Component);
var Body = withSortedPageRows(import_react3.default.forwardRef(function(props, ref) {
  return import_react3.default.createElement(BodyComponent, _extends({}, props, {
    forwardedRef: ref
  }));
}));
var body_default = Body;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/error-boundary.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react4 = __toESM(require_react());
function _callSuper2(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct2() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct2() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct2 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var ErrorBoundary = function(_React$Component) {
  function ErrorBoundary2(props) {
    var _this;
    _classCallCheck(this, ErrorBoundary2);
    _this = _callSuper2(this, ErrorBoundary2, [props]);
    _this.state = {
      hasError: false
    };
    return _this;
  }
  _inherits(ErrorBoundary2, _React$Component);
  return _createClass(ErrorBoundary2, [{
    key: "render",
    value: function render() {
      if (this.state.hasError) {
        return this.props.fallback;
      }
      return this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError() {
      return {
        hasError: true
      };
    }
  }]);
}(import_react4.default.Component);

// node_modules/@atlaskit/dynamic-table/dist/esm/components/loading-container.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react5 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/loading-container.js
init_defineProperty();
var React6 = __toESM(require_react());
init_runtime();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/loading-container.compiled.css";
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var CSS_VAR_CONTENTS_OPACITY = "--contents-opacity";
var Container = function Container2(_ref) {
  var children = _ref.children, testId = _ref.testId;
  return React6.createElement("div", {
    "data-testid": testId && "".concat(testId, "--container"),
    className: ax(["_kqswh2mm"])
  }, children);
};
var ContentsContainer = function ContentsContainer2(_ref2) {
  var children = _ref2.children, contentsOpacity = _ref2.contentsOpacity, testId = _ref2.testId;
  return React6.createElement("div", {
    "data-testid": testId && "".concat(testId, "--contents--container"),
    className: ax(["_tzy47hfw _lcxvglyw"]),
    style: _objectSpread2(_objectSpread2({}, _defineProperty({}, CSS_VAR_CONTENTS_OPACITY, contentsOpacity)), {}, {
      "--_cnddr8": cssCustomPropertyValue("var(".concat(CSS_VAR_CONTENTS_OPACITY, ")"))
    })
  }, children);
};
var SpinnerContainer = function SpinnerContainer2(_ref3) {
  var children = _ref3.children, testId = _ref3.testId;
  return React6.createElement("div", {
    "data-testid": testId && "".concat(testId, "--spinner--container"),
    className: ax(["_1r04idpf _1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o"])
  }, children);
};

// node_modules/@atlaskit/dynamic-table/dist/esm/components/loading-container.js
function _callSuper3(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct3() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct3() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct3 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var LoadingContainer = function(_React$Component) {
  function LoadingContainer2() {
    _classCallCheck(this, LoadingContainer2);
    return _callSuper3(this, LoadingContainer2, arguments);
  }
  _inherits(LoadingContainer2, _React$Component);
  return _createClass(LoadingContainer2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, children = _this$props.children, isLoading = _this$props.isLoading, spinnerSize = _this$props.spinnerSize, contentsOpacity = _this$props.contentsOpacity, testId = _this$props.testId, loadingLabel = _this$props.loadingLabel;
      return import_react5.default.createElement(Container, {
        testId
      }, !isLoading ? children : import_react5.default.createElement(ContentsContainer, {
        contentsOpacity,
        testId
      }, children), isLoading && import_react5.default.createElement(SpinnerContainer, {
        testId
      }, import_react5.default.createElement(spinner_default, {
        size: spinnerSize,
        testId: testId && "".concat(testId, "--loadingSpinner"),
        label: loadingLabel
      })));
    }
  }]);
}(import_react5.default.Component);
_defineProperty(LoadingContainer, "defaultProps", {
  isLoading: true,
  spinnerSize: LARGE,
  contentsOpacity: LOADING_CONTENTS_OPACITY,
  loadingLabel: "Loading table"
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/loading-container-advanced.js
init_typeof();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react7 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/loading-container-advanced.js
init_extends();
init_objectWithoutProperties();
var React8 = __toESM(require_react());
init_runtime();
var import_react6 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/loading-container-advanced.compiled.css";
var _excluded3 = ["children", "testId"];
var Container3 = (0, import_react6.forwardRef)(function(props, ref) {
  var children = props.children, testId = props.testId, rest = _objectWithoutProperties(props, _excluded3);
  return React8.createElement("div", _extends({}, rest, {
    "data-testid": testId,
    ref,
    className: ax(["_kqswh2mm _6rth1ejb"])
  }), children);
});
var SpinnerBackdrop = function SpinnerBackdrop2(_ref) {
  var children = _ref.children, testId = _ref.testId;
  return React8.createElement("div", {
    "data-testid": testId && "".concat(testId, "--spinner-backdrop"),
    className: ax(["_1r04idpf _1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o _lcxvglyw"])
  }, children);
};
var SpinnerContainer3 = (0, import_react6.forwardRef)(function(_ref2, ref) {
  var children = _ref2.children;
  return React8.createElement("div", {
    ref,
    className: ax(["_kqswh2mm _152tidpf"])
  }, children);
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/loading-container-advanced.js
function _callSuper4(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct4() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct4() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct4 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var LoadingContainerAdvanced = function(_React$Component) {
  function LoadingContainerAdvanced2() {
    var _this;
    _classCallCheck(this, LoadingContainerAdvanced2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper4(this, LoadingContainerAdvanced2, [].concat(args));
    _defineProperty(_this, "spinnerRef", import_react7.default.createRef());
    _defineProperty(_this, "containerRef", import_react7.default.createRef());
    _defineProperty(_this, "componentDidMount", function() {
      if (_this.props.isLoading && _this.hasTargetNode()) {
        _this.attachListeners();
        _this.updateTargetAppearance();
        _this.updateSpinnerPosition();
      }
    });
    _defineProperty(_this, "UNSAFE_componentWillReceiveProps", function(nextProps) {
      if (!nextProps.isLoading || !_this.hasTargetNode(nextProps)) {
        _this.detachListeners();
      } else if (!_this.props.isLoading) {
        _this.attachListeners();
      }
    });
    _defineProperty(_this, "componentDidUpdate", function() {
      if (_this.hasTargetNode()) {
        _this.updateTargetAppearance();
        if (_this.props.isLoading) {
          _this.updateSpinnerPosition();
        }
      }
    });
    _defineProperty(_this, "componentWillUnmount", function() {
      _this.detachListeners();
    });
    _defineProperty(_this, "getTargetNode", function() {
      var nextProps = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _this.props;
      var targetRef = nextProps.targetRef;
      var target = targetRef === null || targetRef === void 0 ? void 0 : targetRef();
      return target || _this.containerRef.current;
    });
    _defineProperty(_this, "hasTargetNode", function(nextProps) {
      return !!_this.getTargetNode(nextProps);
    });
    _defineProperty(_this, "isVerticallyVisible", function(elementRect, viewportHeight) {
      var top = elementRect.top, bottom = elementRect.bottom;
      if (bottom <= 0) {
        return false;
      }
      return top < viewportHeight;
    });
    _defineProperty(_this, "isFullyVerticallyVisible", function(elementRect, viewportHeight) {
      var top = elementRect.top, bottom = elementRect.bottom;
      return top >= 0 && bottom <= viewportHeight;
    });
    _defineProperty(_this, "handleResize", function() {
      _this.updateSpinnerPosition();
    });
    _defineProperty(_this, "handleScroll", function() {
      _this.updateSpinnerPosition();
    });
    _defineProperty(_this, "translateSpinner", function(spinnerNode, transformY, isFixed) {
      spinnerNode.style.position = isFixed ? "fixed" : "";
      spinnerNode.style.transform = transformY !== 0 ? "translate3d(0, ".concat(transformY, "px, 0)") : "";
    });
    _defineProperty(_this, "updateTargetAppearance", function() {
      var targetNode = _this.getTargetNode();
      var _this$props = _this.props, isLoading = _this$props.isLoading, contentsOpacity = _this$props.contentsOpacity;
      if (targetNode && targetNode.style && _typeof(targetNode.style) === "object") {
        targetNode.style.pointerEvents = isLoading ? "none" : "";
        targetNode.style.opacity = isLoading ? contentsOpacity.toString() : "";
      }
    });
    return _this;
  }
  _inherits(LoadingContainerAdvanced2, _React$Component);
  return _createClass(LoadingContainerAdvanced2, [{
    key: "attachListeners",
    value: function attachListeners() {
      window.addEventListener("scroll", this.handleScroll);
      window.addEventListener("resize", this.handleResize);
    }
  }, {
    key: "detachListeners",
    value: function detachListeners() {
      window.removeEventListener("scroll", this.handleScroll);
      window.removeEventListener("resize", this.handleResize);
    }
  }, {
    key: "updateSpinnerPosition",
    value: function updateSpinnerPosition() {
      var _this$spinnerRef, _this$containerRef;
      var viewportHeight = window.innerHeight;
      var targetNode = this.getTargetNode();
      var spinnerNode = (_this$spinnerRef = this.spinnerRef) === null || _this$spinnerRef === void 0 ? void 0 : _this$spinnerRef.current;
      if (!targetNode || typeof targetNode.getBoundingClientRect !== "function" || !spinnerNode) {
        return;
      }
      var targetRect = targetNode.getBoundingClientRect();
      var spinnerRect = spinnerNode.getBoundingClientRect();
      var spinnerHeight = spinnerRect.height;
      var isInViewport = this.isVerticallyVisible(targetRect, viewportHeight);
      var top = targetRect.top, bottom = targetRect.bottom, height = targetRect.height;
      if (isInViewport) {
        var canFollow = height >= spinnerHeight * 3;
        if (canFollow && !this.isFullyVerticallyVisible(targetRect, viewportHeight)) {
          if (top >= 0) {
            var viewportSpaceTakenByElement = viewportHeight - top;
            var diff = viewportSpaceTakenByElement / 2 + top - spinnerHeight / 2;
            var y = viewportSpaceTakenByElement < spinnerHeight * 3 ? top + spinnerHeight : diff;
            this.translateSpinner(spinnerNode, y, true);
          } else if (top < 0 && bottom > viewportHeight) {
            var _y = viewportHeight / 2 - spinnerHeight / 2;
            this.translateSpinner(spinnerNode, _y, true);
          } else {
            var _diff = bottom / 2 - spinnerHeight / 2;
            var _y2 = _diff < spinnerHeight ? _diff - (spinnerHeight - _diff) : _diff;
            this.translateSpinner(spinnerNode, _y2, true);
          }
          return;
        }
      } else {
        if (!this.isVerticallyVisible(spinnerRect, viewportHeight)) {
          return;
        }
      }
      var containerNode = (_this$containerRef = this.containerRef) === null || _this$containerRef === void 0 ? void 0 : _this$containerRef.current;
      if (containerNode && typeof containerNode.getBoundingClientRect === "function") {
        var thisTop = containerNode.getBoundingClientRect().top;
        var _y3 = (top - thisTop) / 2;
        this.translateSpinner(spinnerNode, _y3, false);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props, children = _this$props2.children, isLoading = _this$props2.isLoading, spinnerSize = _this$props2.spinnerSize, testId = _this$props2.testId, loadingLabel = _this$props2.loadingLabel;
      return import_react7.default.createElement(Container3, {
        testId: testId && "".concat(testId, "--loading--container--advanced"),
        ref: this.containerRef
      }, children, isLoading && import_react7.default.createElement(SpinnerBackdrop, {
        testId
      }, import_react7.default.createElement(SpinnerContainer3, {
        ref: this.spinnerRef
      }, import_react7.default.createElement(spinner_default, {
        size: spinnerSize,
        testId: testId && "".concat(testId, "--loadingSpinner"),
        label: loadingLabel
      }))));
    }
  }]);
}(import_react7.default.Component);
_defineProperty(LoadingContainerAdvanced, "defaultProps", {
  isLoading: true,
  spinnerSize: LARGE,
  contentsOpacity: "var(--ds-opacity-loading, ".concat("".concat(LOADING_CONTENTS_OPACITY), ")"),
  loadingLabel: "Loading table"
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/managed-pagination.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react12 = __toESM(require_react());

// node_modules/@atlaskit/pagination/dist/esm/pagination.js
init_defineProperty();
init_slicedToArray();
init_runtime();
var import_react11 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/pagination/dist/esm/pagination.compiled.css";
var import_chevron_left_chevron_left_large = __toESM(require_chevron_left_chevron_left_large());
var import_chevron_right_chevron_right_large = __toESM(require_chevron_right_chevron_right_large());

// node_modules/@atlaskit/pagination/dist/esm/internal/components/navigator.js
var import_react8 = __toESM(require_react());
function Navigator(props) {
  return import_react8.default.createElement(button_default, {
    "aria-label": props["aria-label"],
    isDisabled: props.isDisabled,
    iconBefore: props.iconBefore,
    testId: props.testId,
    onClick: props.onClick,
    component: props.component,
    appearance: "subtle"
  });
}

// node_modules/@atlaskit/pagination/dist/esm/internal/components/page.js
init_extends();
var import_react9 = __toESM(require_react());
function Page(props) {
  return import_react9.default.createElement(button_default, _extends({}, props, {
    appearance: "subtle"
  }));
}

// node_modules/@atlaskit/pagination/dist/esm/internal/components/render-ellipsis.js
init_runtime();
var import_react10 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/pagination/dist/esm/internal/components/render-ellipsis.compiled.css";
var styles = {
  container: "_1e0c1txw _kqswh2mm"
};
function renderEllipsis(_ref) {
  var key = _ref.key, testId = _ref.testId, from = _ref.from, to = _ref.to;
  return import_react10.default.createElement(box_default, {
    as: "li",
    testId,
    key,
    xcss: styles.container,
    paddingInline: "space.100"
  }, import_react10.default.createElement(text_default, {
    testId: testId && "".concat(testId, "-text")
  }, import_react10.default.createElement(visually_hidden_default, null, "Skipped pages from ", from, " to ", to), "…"));
}

// node_modules/@atlaskit/pagination/dist/esm/internal/constants.js
var emptyObject = {};

// node_modules/@atlaskit/pagination/dist/esm/internal/utils/collapse-range.js
var collapseRange = function collapseRange2(pages, current, _ref, testId) {
  var max = _ref.max, ellipsis = _ref.ellipsis, transform = _ref.transform;
  var total = pages.length;
  var needEllipsis = total > max;
  var hasStartEllipsis = needEllipsis && max - 4 < current;
  var hasEndEllipsis = needEllipsis && current < total - max + 3;
  var getPageComponents = memoizeOne(function() {
    var startIndex = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
    var lastIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : total;
    return pages.slice(startIndex, lastIndex).map(function(page, index) {
      return transform(page, startIndex + index, testId);
    });
  });
  if (!needEllipsis) {
    return getPageComponents(0, total);
  }
  if (hasStartEllipsis && !hasEndEllipsis) {
    var _pageCount = max - 2;
    return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({
      key: "ellipsis-1",
      testId: testId && "".concat(testId, "-ellipsis"),
      from: 2,
      to: total - _pageCount
    })], _toConsumableArray(getPageComponents(total - _pageCount)));
  }
  if (!hasStartEllipsis && hasEndEllipsis) {
    var _pageCount2 = max - 2;
    return [].concat(_toConsumableArray(getPageComponents(0, _pageCount2)), [ellipsis({
      key: "ellipsis-1",
      testId: testId && "".concat(testId, "-ellipsis"),
      from: _pageCount2 + 1,
      to: total - 1
    })], _toConsumableArray(getPageComponents(total - 1)));
  }
  var pageCount = max - 4;
  return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({
    key: "ellipsis-1",
    testId: testId && "".concat(testId, "-ellipsis"),
    from: 2,
    to: current - Math.floor(pageCount / 2)
  })], _toConsumableArray(getPageComponents(current - Math.floor(pageCount / 2), current + pageCount - 1)), [ellipsis({
    key: "ellipsis-2",
    testId: testId && "".concat(testId, "-ellipsis"),
    from: current + 3,
    to: total - 1
  })], _toConsumableArray(getPageComponents(total - 1)));
};
var collapse_range_default = collapseRange;

// node_modules/@atlaskit/pagination/dist/esm/pagination.js
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var styles2 = {
  paginationMenu: "_ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _19pkze3t _2hwxze3t _otyrze3t _18u0ze3t",
  paginationMenuItem: "_1pfhze3t _ect41gqc",
  navigatorIconWrapper: "_18zr12x7"
};
var analyticsAttributes = {
  componentName: "pagination",
  packageName: "@atlaskit/pagination",
  packageVersion: "16.1.11"
};
function NavigatorIcon(_ref) {
  var chevronDirection = _ref.chevronDirection;
  var Chevron = chevronDirection === "left" ? import_chevron_left_chevron_left_large.default : import_chevron_right_chevron_right_large.default;
  return import_react11.default.createElement(box_default, {
    as: "span",
    xcss: styles2.navigatorIconWrapper
  }, import_react11.default.createElement(Chevron, {
    label: "",
    LEGACY_margin: "0 ".concat("var(--ds-space-negative-075, -6px)"),
    color: "currentColor",
    size: "small"
  }));
}
function InnerPagination(_ref2, ref) {
  var _ref2$components = _ref2.components, components = _ref2$components === void 0 ? emptyObject : _ref2$components, _ref2$defaultSelected = _ref2.defaultSelectedIndex, defaultSelectedIndex = _ref2$defaultSelected === void 0 ? 0 : _ref2$defaultSelected, selectedIndex = _ref2.selectedIndex, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? "pagination" : _ref2$label, _ref2$pageLabel = _ref2.pageLabel, pageLabel = _ref2$pageLabel === void 0 ? "page" : _ref2$pageLabel, _ref2$previousLabel = _ref2.previousLabel, previousLabel = _ref2$previousLabel === void 0 ? "previous" : _ref2$previousLabel, _ref2$nextLabel = _ref2.nextLabel, nextLabel = _ref2$nextLabel === void 0 ? "next" : _ref2$nextLabel, _ref2$style = _ref2.style, style = _ref2$style === void 0 ? emptyObject : _ref2$style, _ref2$max = _ref2.max, max = _ref2$max === void 0 ? 7 : _ref2$max, _ref2$onChange = _ref2.onChange, onChange = _ref2$onChange === void 0 ? noop : _ref2$onChange, pages = _ref2.pages, getPageLabel = _ref2.getPageLabel, _ref2$renderEllipsis = _ref2.renderEllipsis, renderEllipsis2 = _ref2$renderEllipsis === void 0 ? renderEllipsis : _ref2$renderEllipsis, analyticsContext = _ref2.analyticsContext, testId = _ref2.testId, isDisabled = _ref2.isDisabled;
  var _useControlled = useControlled(selectedIndex, function() {
    return defaultSelectedIndex || 0;
  }), _useControlled2 = _slicedToArray(_useControlled, 2), selectedIndexValue = _useControlled2[0], setSelectedIndexValue = _useControlled2[1];
  var onChangeWithAnalytics = usePlatformLeafEventHandler(_objectSpread3({
    fn: function fn(value, analyticsEvent) {
      var event = value.event, selectedPageIndex = value.selectedPageIndex;
      if (selectedIndex === void 0) {
        setSelectedIndexValue(selectedPageIndex);
      }
      if (onChange) {
        onChange(event, pages[selectedPageIndex], analyticsEvent);
      }
    },
    action: "changed",
    actionSubject: "pageNumber",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var transform = function transform2(page, currPageIndex, testId2) {
    var selectedPage = pages[selectedIndexValue];
    var pageIndexLabel = "".concat(pageLabel, " ").concat(getPageLabel ? getPageLabel(page, currPageIndex) : page);
    var isCurrentPage = page === selectedPage;
    return import_react11.default.createElement(inline_default, {
      as: "li",
      xcss: styles2.paginationMenuItem,
      key: "page-".concat(getPageLabel ? getPageLabel(page, currPageIndex) : currPageIndex)
    }, import_react11.default.createElement(Page, {
      component: components.Page,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event,
          selectedPageIndex: currPageIndex
        });
      },
      "aria-current": isCurrentPage ? "page" : void 0,
      "aria-label": pageIndexLabel,
      isSelected: isCurrentPage,
      isDisabled,
      page,
      testId: testId2 && "".concat(testId2, "--").concat(isCurrentPage ? "current-" : "", "page-").concat(currPageIndex)
    }, getPageLabel ? getPageLabel(page, currPageIndex) : page));
  };
  return (
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    import_react11.default.createElement(box_default, {
      testId,
      style,
      ref,
      "aria-label": label,
      as: "nav"
    }, import_react11.default.createElement(inline_default, {
      space: "space.0",
      alignBlock: "center"
    }, import_react11.default.createElement(Navigator, {
      key: "left-navigator",
      component: components.Previous,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event,
          selectedPageIndex: selectedIndexValue - 1
        });
      },
      isDisabled: isDisabled || selectedIndexValue === 0,
      iconBefore: import_react11.default.createElement(NavigatorIcon, {
        chevronDirection: "left"
      }),
      "aria-label": previousLabel,
      testId: testId && "".concat(testId, "--left-navigator")
    }), import_react11.default.createElement(inline_default, {
      space: "space.0",
      alignBlock: "baseline",
      as: "ul",
      xcss: styles2.paginationMenu
    }, collapse_range_default(pages, selectedIndexValue, {
      max,
      ellipsis: renderEllipsis2,
      transform
    }, testId)), import_react11.default.createElement(Navigator, {
      key: "right-navigator",
      component: components.Next,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event,
          selectedPageIndex: selectedIndexValue + 1
        });
      },
      isDisabled: isDisabled || selectedIndexValue === pages.length - 1,
      iconBefore: import_react11.default.createElement(NavigatorIcon, {
        chevronDirection: "right"
      }),
      "aria-label": nextLabel,
      testId: testId && "".concat(testId, "--right-navigator")
    })))
  );
}
var Pagination = (0, import_react11.memo)((0, import_react11.forwardRef)(InnerPagination));
var pagination_default = Pagination;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/managed-pagination.js
function _callSuper5(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct5() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct5() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct5 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var ManagedPagination = function(_React$Component) {
  function ManagedPagination2() {
    var _this;
    _classCallCheck(this, ManagedPagination2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper5(this, ManagedPagination2, [].concat(args));
    _defineProperty(_this, "onChange", function(_event, newValue, analyticsEvent) {
      _this.props.onChange(newValue, analyticsEvent);
    });
    return _this;
  }
  _inherits(ManagedPagination2, _React$Component);
  return _createClass(ManagedPagination2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, total = _this$props.total, _this$props$value = _this$props.value, value = _this$props$value === void 0 ? 1 : _this$props$value, i18n = _this$props.i18n, testId = _this$props.testId, isDisabled = _this$props.isDisabled;
      var pages = _toConsumableArray(Array(total)).map(function(_, index) {
        return index + 1;
      });
      var selectedIndex = value - 1;
      return import_react12.default.createElement(pagination_default, {
        selectedIndex,
        isDisabled,
        label: i18n === null || i18n === void 0 ? void 0 : i18n.label,
        nextLabel: i18n === null || i18n === void 0 ? void 0 : i18n.next,
        previousLabel: i18n === null || i18n === void 0 ? void 0 : i18n.prev,
        pageLabel: i18n === null || i18n === void 0 ? void 0 : i18n.pageLabel,
        onChange: this.onChange,
        pages,
        testId: testId && "".concat(testId, "--pagination")
      });
    }
  }]);
}(import_react12.default.Component);

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react18 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/table-head.js
init_defineProperty();
init_extends();
init_objectWithoutProperties();
var React15 = __toESM(require_react());
init_runtime();
var import_react13 = __toESM(require_react());
init_esm();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/table-head.compiled.css";
var _excluded4 = ["isRanking", "testId"];
var _excluded23 = ["width", "children", "isSortable", "sortOrder", "isFixedSize", "shouldTruncate", "onClick", "style", "testId"];
function ownKeys4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys4(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys4(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var CSS_VAR_TEXT_COLOR = "--local-dynamic-table-text-color";
var Head = function Head2(_ref) {
  var isRanking = _ref.isRanking, testId = _ref.testId, props = _objectWithoutProperties(_ref, _excluded4);
  return React15.createElement("thead", _extends({
    "data-testid": testId
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, props, {
    className: ax(["_179rglyw", isRanking && "_1e0c1ule"])
  }));
};
var HeadCell = (0, import_react13.forwardRef)(function(_ref2, ref) {
  var width = _ref2.width, children = _ref2.children, isSortable = _ref2.isSortable, sortOrder = _ref2.sortOrder, isFixedSize = _ref2.isFixedSize, shouldTruncate = _ref2.shouldTruncate, onClick = _ref2.onClick, style = _ref2.style, testId = _ref2.testId, rest = _objectWithoutProperties(_ref2, _excluded23);
  var mergedStyles = _objectSpread4(_objectSpread4(_objectSpread4({}, style), width && getTruncationStyleVars({
    width
  })), {}, _defineProperty({}, CSS_VAR_TEXT_COLOR, "var(--ds-text-subtlest, ".concat(N300, ")")));
  var isASC = sortOrder === ASC;
  var isDESC = sortOrder === DESC;
  var getFormattedSortOrder = function getFormattedSortOrder2() {
    if (isASC) {
      return "ascending";
    } else if (isDESC) {
      return "descending";
    }
  };
  var Component = children ? "th" : "td";
  var isVisuallyRefreshed = fg("platform-component-visual-refresh");
  return React15.createElement(Component, _extends({
    "aria-sort": getFormattedSortOrder(),
    onClick: !isVisuallyRefreshed ? onClick : void 0,
    ref,
    "data-testid": testId
  }, rest, {
    className: ax(["_izbqglyw _h7alglyw _85i51b66 _1q511b66 _y4tiu2gc _bozgu2gc _y3gn1e5h _1s37ze3t _uupyze3t", isVisuallyRefreshed ? "_11c8dcr7 _179rralu _mqm2glyw _kqswh2mm _syaz12fi _k48pmoej _y3gn1e5h _s7n4nkob _1ygbuwsq" : "_11c8dcr7 _179rralu _mqm2glyw _t51zglyw _191wglyw _vchhusvi _kqswh2mm _syaz12fi _k48pmoej _y3gn1e5h _s7n4jp4b _1ygbuwsq", !isVisuallyRefreshed && onClick && "_irr3bfnf _d0altlke", "_1bsb8a2a", isFixedSize && shouldTruncate && "_1bto1l2s _o5721q9c", isFixedSize && "_1reo15vq _18m915vq", !isVisuallyRefreshed && isSortable && "_173zglyw _pw6dglyw _1xgk1j28 _1wfn1j28 _y9yonqa1 _997wnqa1 _sklb1l7b _1j091l7b _19w61ule _1w611ule _1hvvidpf _n56nidpf _wyc4idpf _1d4oidpf _no7mstnw _qh32stnw _4b5mb3bt _hn3bb3bt _14gsx0bf _cigmx0bf _c77k1f6e _qzvtu2gc _f4731f6e _1fpyidpf _a04fh2mm _xv14glyw _58ej1kw7 _1ay31kw7 _mdbq1kw7 _10pp1kw7 _1yw3ze3t _n2fdze3t _8607ze3t _szhwze3t _1g2wwc43 _ze9fwc43 _1lcgnqa1 _at5qnqa1 _o4d71l7b _npl51l7b _1rp11onz _1iornqa1 _oi051l7b _1ehx1onz _19t8nqa1 _1bog1l7b", !isVisuallyRefreshed && isASC && "_c77k2wk4 _142s94yt", !isVisuallyRefreshed && isDESC && "_f4732wk4 _17x894yt"]),
    style: _objectSpread4(_objectSpread4({}, mergedStyles), {}, {
      "--_k02y3n": cssCustomPropertyValue("2px solid ".concat("var(--ds-border, ".concat(N40, ")"))),
      "--_17ckjys": cssCustomPropertyValue("var(--ds-text-subtle, ".concat("var(".concat(CSS_VAR_TEXT_COLOR, ")"), ")")),
      "--_jz8ahf": cssCustomPropertyValue("solid 2px ".concat("var(--ds-border-focused, ".concat(B100, ")"))),
      "--_6j4ewu": cssCustomPropertyValue("var(--ds-background-neutral-hovered, ".concat(N30A, ")")),
      "--_1rdacuj": cssCustomPropertyValue("3px solid ".concat("var(--ds-icon-disabled, ".concat(N40, ")"))),
      "--_1qca9zt": cssCustomPropertyValue("3px solid ".concat("var(--ds-icon-subtle, ".concat(N300, ")")))
    })
  }), children);
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/rankable/table-head-cell.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react15 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head-cell.js
init_extends();
init_slicedToArray();
init_objectWithoutProperties();
init_runtime();
var import_react14 = __toESM(require_react());
var import_arrow_down = __toESM(require_arrow_down());
var import_arrow_up = __toESM(require_arrow_up());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head-cell.compiled.css";
var _excluded5 = ["content", "inlineStyles", "testId", "isRanking", "innerRef", "isSortable", "sortOrder", "onClick", "headCellId", "activeSortButtonId", "ascendingSortTooltip", "descendingSortTooltip", "buttonAriaRoleDescription", "isIconOnlyHeader"];
var styles3 = {
  buttonWrapper: "_1e0c1txw _bfhk1j28 _4cvr1h6o _ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _d0altlke",
  sortIconHiddenWrapper: "_1e0c1txw _tzy4idpf _bfhk1j28 _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66 _1h7hkb7n",
  sortIconVisibleWrapper: "_1e0c1txw _tzy4kb7n _bfhk1j28 _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66",
  hideIconHeaderWrapper: "_tzy4idpf _18u010v4",
  visibleHeaderWrapper: "_tzy4kb7n _u5f31b66"
};
var headCellStyles = {
  headCellContainer: "_1e0c1txw _4cvr1h6o",
  text: "_11c81o8v _syaz1gjq _k48pmoej"
};
var TableHeadCell = function TableHeadCell2(_ref) {
  var content = _ref.content, inlineStyles = _ref.inlineStyles, testId = _ref.testId, isRanking = _ref.isRanking, innerRef = _ref.innerRef, isSortable = _ref.isSortable, sortOrder = _ref.sortOrder, onClick = _ref.onClick, headCellId = _ref.headCellId, activeSortButtonId = _ref.activeSortButtonId, _ref$ascendingSortToo = _ref.ascendingSortTooltip, ascendingSortTooltip = _ref$ascendingSortToo === void 0 ? "Sort ascending" : _ref$ascendingSortToo, _ref$descendingSortTo = _ref.descendingSortTooltip, descendingSortTooltip = _ref$descendingSortTo === void 0 ? "Sort descending" : _ref$descendingSortTo, _ref$buttonAriaRoleDe = _ref.buttonAriaRoleDescription, buttonAriaRoleDescription = _ref$buttonAriaRoleDe === void 0 ? "Sort button" : _ref$buttonAriaRoleDe, isIconOnlyHeader = _ref.isIconOnlyHeader, rest = _objectWithoutProperties(_ref, _excluded5);
  var _useState = (0, import_react14.useState)(false), _useState2 = _slicedToArray(_useState, 2), isHovered = _useState2[0], setIsHovered = _useState2[1];
  var _useState3 = (0, import_react14.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isFocused = _useState4[0], setIsFocused = _useState4[1];
  var isActive = headCellId === activeSortButtonId || sortOrder !== void 0;
  var isSortIconVisible = isHovered || isActive || isFocused;
  var isVisibleIconOnlyHeader = isSortIconVisible && isIconOnlyHeader;
  var shouldRenderSortIcon = !isIconOnlyHeader || isSortIconVisible || isIconOnlyHeader && !isFocused;
  var handleFocus = (0, import_react14.useCallback)(function() {
    setIsFocused === null || setIsFocused === void 0 || setIsFocused(true);
  }, [setIsFocused]);
  var handleBlur = (0, import_react14.useCallback)(function() {
    setIsFocused === null || setIsFocused === void 0 || setIsFocused(false);
  }, [setIsFocused]);
  var handleMouseEnter = (0, import_react14.useCallback)(function() {
    setIsHovered(true);
  }, [setIsHovered]);
  var handleMouseLeave = (0, import_react14.useCallback)(function() {
    setIsHovered(false);
  }, [setIsHovered]);
  var visuallyRefreshedButton = import_react14.default.createElement(box_default, {
    xcss: headCellStyles.headCellContainer,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onFocus: handleFocus,
    onBlur: handleBlur
  }, import_react14.default.createElement(tooltip_default, {
    content: sortOrder === ASC ? ascendingSortTooltip : descendingSortTooltip
  }, import_react14.default.createElement(pressable_default, {
    onClick,
    xcss: styles3.buttonWrapper,
    "aria-roledescription": buttonAriaRoleDescription
  }, import_react14.default.createElement(flex_default, {
    xcss: isVisibleIconOnlyHeader ? styles3.hideIconHeaderWrapper : styles3.visibleHeaderWrapper
  }, import_react14.default.createElement("span", {
    className: ax([headCellStyles.text])
  }, content)), shouldRenderSortIcon && import_react14.default.createElement(flex_default, {
    xcss: isSortIconVisible ? styles3.sortIconVisibleWrapper : styles3.sortIconHiddenWrapper
  }, sortOrder === ASC ? import_react14.default.createElement(import_arrow_up.default, {
    label: "",
    color: "var(--ds-text-subtle, #44546F)",
    testId: testId && "".concat(testId, "--up--icon")
  }) : import_react14.default.createElement(import_arrow_down.default, {
    label: "",
    color: "var(--ds-text-subtle, #44546F)",
    testId: testId && "".concat(testId, "--down--icon")
  })))));
  return import_react14.default.createElement(
    HeadCell,
    _extends({
      style: inlineStyles,
      testId: testId && "".concat(testId, "--head--cell"),
      ref: typeof innerRef !== "string" ? innerRef : null
      // string refs must be discarded as LegacyRefs are not compatible with FC forwardRefs
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, rest, {
      isSortable,
      sortOrder
    }),
    isSortable ? visuallyRefreshedButton : content
  );
};
var table_head_cell_default = TableHeadCell;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/rankable/table-head-cell.js
var _excluded6 = ["isRanking", "refHeight", "refWidth"];
function _callSuper6(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct6() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct6() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct6 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var RankableTableHeadCellComponent = function(_React$Component) {
  function RankableTableHeadCellComponent2() {
    _classCallCheck(this, RankableTableHeadCellComponent2);
    return _callSuper6(this, RankableTableHeadCellComponent2, arguments);
  }
  _inherits(RankableTableHeadCellComponent2, _React$Component);
  return _createClass(RankableTableHeadCellComponent2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, isRanking = _this$props.isRanking, refHeight = _this$props.refHeight, refWidth = _this$props.refWidth, restProps = _objectWithoutProperties(_this$props, _excluded6);
      var inlineStyles = inlineStylesIfRanking(isRanking, refWidth);
      return import_react15.default.createElement(table_head_cell_default, _extends({
        inlineStyles
      }, restProps));
    }
  }]);
}(import_react15.default.Component);
var RankableTableHeadCell = withDimensions(RankableTableHeadCellComponent);
var table_head_cell_default2 = RankableTableHeadCell;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/rankable/table-head-cell-old.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react17 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head-cell-old.js
init_extends();
init_objectWithoutProperties();
var import_react16 = __toESM(require_react());
var _excluded7 = ["content", "inlineStyles", "testId", "isRanking", "innerRef", "isSortable", "onClick"];
var TableHeadCellOld = function TableHeadCellOld2(_ref) {
  var content = _ref.content, inlineStyles = _ref.inlineStyles, testId = _ref.testId, isRanking = _ref.isRanking, innerRef = _ref.innerRef, isSortable = _ref.isSortable, onClick = _ref.onClick, rest = _objectWithoutProperties(_ref, _excluded7);
  return import_react16.default.createElement(
    HeadCell,
    _extends({
      style: inlineStyles,
      testId: testId && "".concat(testId, "--head--cell"),
      ref: typeof innerRef !== "string" ? innerRef : null
      // string refs must be discarded as LegacyRefs are not compatible with FC forwardRefs
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, rest, {
      onClick,
      isSortable
    }),
    isSortable ? import_react16.default.createElement("button", {
      type: "button",
      "aria-roledescription": "Sort button"
    }, content) : content
  );
};
var table_head_cell_old_default = TableHeadCellOld;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/rankable/table-head-cell-old.js
var _excluded8 = ["isRanking", "refHeight", "refWidth"];
function _callSuper7(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct7() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct7() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct7 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var RankableTableHeadCellComponentOld = function(_React$Component) {
  function RankableTableHeadCellComponentOld2() {
    _classCallCheck(this, RankableTableHeadCellComponentOld2);
    return _callSuper7(this, RankableTableHeadCellComponentOld2, arguments);
  }
  _inherits(RankableTableHeadCellComponentOld2, _React$Component);
  return _createClass(RankableTableHeadCellComponentOld2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, isRanking = _this$props.isRanking, refHeight = _this$props.refHeight, refWidth = _this$props.refWidth, restProps = _objectWithoutProperties(_this$props, _excluded8);
      var inlineStyles = inlineStylesIfRanking(isRanking, refWidth);
      return import_react17.default.createElement(table_head_cell_old_default, _extends({
        inlineStyles
      }, restProps));
    }
  }]);
}(import_react17.default.Component);
var RankableTableHeadCellOld = withDimensions(RankableTableHeadCellComponentOld);
var table_head_cell_old_default2 = RankableTableHeadCellOld;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head.js
var _excluded9 = ["cells"];
var _excluded24 = ["ascendingSortTooltip", "buttonAriaRoleDescription", "colSpan", "content", "descendingSortTooltip", "isIconOnlyHeader", "isSortable", "key", "shouldTruncate", "testId", "width"];
function _callSuper8(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct8() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct8() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct8 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var TableHead = function(_React$Component) {
  function TableHead2(props) {
    var _this;
    _classCallCheck(this, TableHead2);
    _this = _callSuper8(this, TableHead2, [props]);
    _this.state = {
      activeSortButtonId: null
    };
    return _this;
  }
  _inherits(TableHead2, _React$Component);
  return _createClass(TableHead2, [{
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      validateSortKey(this.props.sortKey, this.props.head);
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (this.props.sortKey !== nextProps.sortKey || this.props.head !== nextProps.head) {
        validateSortKey(nextProps.sortKey, nextProps.head);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props = this.props, head = _this$props.head, sortKey = _this$props.sortKey, sortOrder = _this$props.sortOrder, isFixedSize = _this$props.isFixedSize, onSort = _this$props.onSort, isRanking = _this$props.isRanking, isRankable = _this$props.isRankable, testId = _this$props.testId;
      var activeSortButtonId = this.state.activeSortButtonId;
      if (!head) {
        return null;
      }
      var HeadCellComponentOld = isRankable ? table_head_cell_old_default2 : table_head_cell_old_default;
      var HeadCellComponent = isRankable ? table_head_cell_default2 : table_head_cell_default;
      var cells = head.cells, rest = _objectWithoutProperties(head, _excluded9);
      return import_react18.default.createElement(Head, _extends({}, rest, {
        isRanking,
        testId: testId && "".concat(testId, "--head")
      }), import_react18.default.createElement("tr", null, cells.map(function(cell, index) {
        var ascendingSortTooltip = cell.ascendingSortTooltip, buttonAriaRoleDescription = cell.buttonAriaRoleDescription, colSpan = cell.colSpan, content = cell.content, descendingSortTooltip = cell.descendingSortTooltip, isIconOnlyHeader = cell.isIconOnlyHeader, isSortable = cell.isSortable, key = cell.key, shouldTruncate = cell.shouldTruncate, cellTestId = cell.testId, width = cell.width, restCellProps = _objectWithoutProperties(cell, _excluded24);
        var headCellId = "head-cell-".concat(index);
        var handleClick = function handleClick2() {
          _this2.setState({
            activeSortButtonId: headCellId
          });
          if (isSortable) {
            onSort(cell)();
          }
        };
        return fg("platform-component-visual-refresh") ? import_react18.default.createElement(HeadCellComponent, _extends({
          colSpan,
          content,
          isFixedSize,
          isIconOnlyHeader,
          isSortable: !!isSortable,
          isRanking,
          key: key || index,
          headCellId,
          activeSortButtonId,
          onClick: handleClick,
          testId: cellTestId || testId,
          shouldTruncate,
          sortOrder: key === sortKey ? sortOrder : void 0,
          width,
          ascendingSortTooltip,
          descendingSortTooltip,
          buttonAriaRoleDescription
        }, restCellProps)) : import_react18.default.createElement(HeadCellComponentOld, _extends({
          colSpan,
          content,
          isFixedSize,
          isSortable: !!isSortable,
          isRanking,
          key: key || index,
          onClick: isSortable ? onSort(cell) : void 0,
          testId: cellTestId || testId,
          shouldTruncate,
          sortOrder: key === sortKey ? sortOrder : void 0,
          width
        }, restCellProps));
      })));
    }
  }]);
}(import_react18.default.Component);
var table_head_default = TableHead;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/stateless.js
var _excluded10 = ["isRankable", "isRanking", "onRankStart", "onRankEnd", "isRankingDisabled"];
function toggleSortOrder(currentSortOrder) {
  switch (currentSortOrder) {
    case DESC:
      return ASC;
    case ASC:
      return DESC;
    default:
      return currentSortOrder;
  }
}
var DynamicTable = function DynamicTable2(_ref) {
  var caption = _ref.caption, head = _ref.head, highlightedRowIndex = _ref.highlightedRowIndex, rows = _ref.rows, sortKey = _ref.sortKey, sortOrder = _ref.sortOrder, loadingLabel = _ref.loadingLabel, onPageRowsUpdate = _ref.onPageRowsUpdate, testId = _ref.testId, passedDownTotalRows = _ref.totalRows, label = _ref.label, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, _ref$isFixedSize = _ref.isFixedSize, isFixedSize = _ref$isFixedSize === void 0 ? false : _ref$isFixedSize, _ref$rowsPerPage = _ref.rowsPerPage, rowsPerPage = _ref$rowsPerPage === void 0 ? Infinity : _ref$rowsPerPage, _ref$onSetPage = _ref.onSetPage, onSetPage = _ref$onSetPage === void 0 ? noop : _ref$onSetPage, _ref$onSort = _ref.onSort, providedOnSort = _ref$onSort === void 0 ? noop : _ref$onSort, _ref$page = _ref.page, page = _ref$page === void 0 ? 1 : _ref$page, emptyView = _ref.emptyView, _ref$isRankable = _ref.isRankable, isRankable = _ref$isRankable === void 0 ? false : _ref$isRankable, _ref$isRankingDisable = _ref.isRankingDisabled, isRankingDisabled = _ref$isRankingDisable === void 0 ? false : _ref$isRankingDisable, _ref$onRankStart = _ref.onRankStart, onRankStart = _ref$onRankStart === void 0 ? noop : _ref$onRankStart, _ref$onRankEnd = _ref.onRankEnd, providedOnRankEnd = _ref$onRankEnd === void 0 ? noop : _ref$onRankEnd, loadingSpinnerSize = _ref.loadingSpinnerSize, _ref$paginationi18n = _ref.paginationi18n, paginationi18n = _ref$paginationi18n === void 0 ? {
    prev: "Previous Page",
    next: "Next Page",
    label: "Pagination",
    pageLabel: "Page"
  } : _ref$paginationi18n;
  var _useState = (0, import_react19.useState)(false), _useState2 = _slicedToArray(_useState, 2), isRanking = _useState2[0], setIsRanking = _useState2[1];
  var tableBodyRef = (0, import_react19.useRef)(null);
  var onSort = usePlatformLeafEventHandler({
    fn: providedOnSort,
    action: "sorted",
    componentName: "dynamicTable",
    packageName: "@atlaskit/dynamic-table",
    packageVersion: "0.0.0-development"
  });
  var onRankEnd = usePlatformLeafEventHandler({
    fn: providedOnRankEnd,
    action: "ranked",
    componentName: "dynamicTable",
    packageName: "@atlaskit/dynamic-table",
    packageVersion: "0.0.0-development"
  });
  (0, import_react19.useEffect)(function() {
    validateSortKey(sortKey, head);
    assertIsSortable(head);
  }, [sortKey, head]);
  var onSortHandler = function onSortHandler2(item) {
    return function() {
      var key = item.key;
      if (!key) {
        return;
      }
      if (onSort && isRankable && key === sortKey && sortOrder === DESC) {
        onSort({
          key: null,
          sortOrder: null,
          item
        });
        return;
      }
      var sortOrderFormatted = key !== sortKey ? ASC : toggleSortOrder(sortOrder);
      if (onSort) {
        onSort({
          key,
          item,
          sortOrder: sortOrderFormatted
        });
      }
    };
  };
  var onSetPageHandler = function onSetPageHandler2(page2, event) {
    onSetPage(page2, event);
  };
  var onRankStartHandler = function onRankStartHandler2(params) {
    setIsRanking(true);
    onRankStart(params);
  };
  var onRankEndHandler = function onRankEndHandler2(params) {
    setIsRanking(false);
    onRankEnd(params);
  };
  var getSpinnerSize = function getSpinnerSize2() {
    if (loadingSpinnerSize) {
      return loadingSpinnerSize;
    }
    return getPageRows(rows || [], page, rowsPerPage).length > 2 ? LARGE : SMALL;
  };
  var renderEmptyBody = function renderEmptyBody2() {
    if (isLoading) {
      return import_react19.default.createElement(EmptyViewWithFixedHeight, {
        testId
      });
    }
    return emptyView && import_react19.default.createElement(EmptyViewContainer, {
      testId
    }, emptyView);
  };
  var rowsLength = rows && rows.length;
  var totalPages;
  var isTotalPagesControlledExternally = false;
  if (passedDownTotalRows && Number.isInteger(passedDownTotalRows) && rowsPerPage && rowsLength && rowsLength <= passedDownTotalRows) {
    totalPages = Math.ceil(passedDownTotalRows / rowsPerPage);
    isTotalPagesControlledExternally = true;
  } else {
    totalPages = rowsLength && rowsPerPage ? Math.ceil(rowsLength / rowsPerPage) : 0;
  }
  totalPages = totalPages < 1 ? 1 : totalPages;
  var getPageNumber = page > totalPages ? totalPages : page;
  var rowsExist = !!rowsLength;
  var spinnerSize = getSpinnerSize();
  var emptyBody = renderEmptyBody();
  return import_react19.default.createElement(import_react19.default.Fragment, null, import_react19.default.createElement(LoadingContainerAdvanced, {
    isLoading: isLoading && rowsExist,
    spinnerSize,
    targetRef: function targetRef() {
      return tableBodyRef.current;
    },
    testId,
    loadingLabel
  }, import_react19.default.createElement(Table, {
    isFixedSize,
    "aria-label": label,
    hasDataRow: rowsExist,
    testId,
    isLoading
  }, !!caption && import_react19.default.createElement(Caption, null, caption), head && import_react19.default.createElement(table_head_default, {
    head,
    onSort: onSortHandler,
    sortKey,
    sortOrder,
    isRanking,
    isRankable,
    testId
  }), rowsExist && import_react19.default.createElement(TableBody, {
    ref: tableBodyRef,
    highlightedRowIndex,
    rows,
    head,
    sortKey,
    sortOrder,
    rowsPerPage,
    page: getPageNumber,
    isFixedSize: isFixedSize || false,
    onPageRowsUpdate,
    isTotalPagesControlledExternally,
    testId,
    isRankable,
    isRanking,
    onRankStart: onRankStartHandler,
    onRankEnd: onRankEndHandler,
    isRankingDisabled: isRankingDisabled || isLoading || false
  }))), totalPages <= 1 ? null : (
    // only show pagination if there's MORE than 1 page
    import_react19.default.createElement(PaginationWrapper, {
      testId
    }, import_react19.default.createElement(ManagedPagination, {
      value: getPageNumber,
      onChange: onSetPageHandler,
      total: totalPages,
      i18n: paginationi18n,
      isDisabled: isLoading,
      testId
    }))
  ), !rowsExist && emptyBody && import_react19.default.createElement(LoadingContainer, {
    isLoading,
    spinnerSize: LARGE,
    testId,
    loadingLabel
  }, emptyBody));
};
var RankableTableBody = (0, import_react19.lazy)(function() {
  return import(
    /* webpackChunkName: '@atlaskit-internal_dynamic-table' */
    "./body-WR2LGZYI.js"
  );
});
var TableBody = (0, import_react19.forwardRef)(function TableBody2(_ref2, ref) {
  var _ref2$isRankable = _ref2.isRankable, isRankable = _ref2$isRankable === void 0 ? false : _ref2$isRankable, isRanking = _ref2.isRanking, onRankStart = _ref2.onRankStart, onRankEnd = _ref2.onRankEnd, isRankingDisabled = _ref2.isRankingDisabled, bodyProps = _objectWithoutProperties(_ref2, _excluded10);
  var canRank = isRankable && !bodyProps.sortKey;
  var _useState3 = (0, import_react19.useState)(false), _useState4 = _slicedToArray(_useState3, 2), canRenderRankable = _useState4[0], setCanRenderRankable = _useState4[1];
  (0, import_react19.useEffect)(function() {
    if (canRank) {
      setCanRenderRankable(true);
    }
  }, [canRank]);
  var nonRankableBody = import_react19.default.createElement(body_default, _extends({
    ref
  }, bodyProps));
  return canRank && canRenderRankable ? import_react19.default.createElement(ErrorBoundary, {
    fallback: nonRankableBody
  }, import_react19.default.createElement(import_react19.Suspense, {
    fallback: nonRankableBody
  }, import_react19.default.createElement(RankableTableBody, _extends({
    ref
  }, bodyProps, {
    isRanking,
    onRankStart,
    onRankEnd,
    isRankingDisabled
  })))) : nonRankableBody;
});
var stateless_default = DynamicTable;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/stateful.js
function _callSuper9(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct9() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct9() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct9 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var DynamicTable3 = function(_React$Component) {
  function DynamicTable4() {
    var _this;
    _classCallCheck(this, DynamicTable4);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper9(this, DynamicTable4, [].concat(args));
    _defineProperty(_this, "state", {
      page: _this.props.defaultPage,
      sortKey: _this.props.defaultSortKey,
      sortOrder: _this.props.defaultSortOrder,
      rows: _this.props.rows
    });
    _defineProperty(_this, "onSetPageHandler", function(page, analyticsEvent) {
      var onSetPage = _this.props.onSetPage;
      if (onSetPage) {
        onSetPage(page, analyticsEvent);
        _this.setState({
          page
        });
      }
    });
    _defineProperty(_this, "onSortHandler", function(_ref, analyticsEvent) {
      var key = _ref.key, item = _ref.item, sortOrder = _ref.sortOrder;
      var onSort = _this.props.onSort;
      if (onSort) {
        onSort({
          key,
          item,
          sortOrder
        }, analyticsEvent);
        _this.setState({
          sortKey: key,
          sortOrder
        });
      }
    });
    _defineProperty(_this, "onRankEndIfExistsHandler", function(params) {
      if (_this.props.onRankEnd) {
        _this.props.onRankEnd(params);
      }
    });
    _defineProperty(_this, "onRankEndHandler", function(params) {
      var destination = params.destination;
      var _this$state = _this.state, rows = _this$state.rows, page = _this$state.page;
      var rowsPerPage = _this.props.rowsPerPage;
      if (!destination || !rows) {
        _this.onRankEndIfExistsHandler(params);
        return;
      }
      var reordered = reorderRows(params, rows, page, rowsPerPage);
      _this.setState({
        rows: reordered
      });
      _this.onRankEndIfExistsHandler(params);
    });
    return _this;
  }
  _inherits(DynamicTable4, _React$Component);
  return _createClass(DynamicTable4, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(newProps) {
      var sortKey = newProps.sortKey || this.state.sortKey;
      var sortOrder = newProps.sortOrder || this.state.sortOrder;
      var page = newProps.page || this.state.page;
      this.setState({
        page,
        sortKey,
        sortOrder,
        rows: newProps.rows
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state2 = this.state, page = _this$state2.page, sortKey = _this$state2.sortKey, sortOrder = _this$state2.sortOrder, rows = _this$state2.rows;
      var _this$props = this.props, caption = _this$props.caption, emptyView = _this$props.emptyView, head = _this$props.head, highlightedRowIndex = _this$props.highlightedRowIndex, loadingSpinnerSize = _this$props.loadingSpinnerSize, isLoading = _this$props.isLoading, loadingLabel = _this$props.loadingLabel, isFixedSize = _this$props.isFixedSize, isRankable = _this$props.isRankable, isRankingDisabled = _this$props.isRankingDisabled, rowsPerPage = _this$props.rowsPerPage, paginationi18n = _this$props.paginationi18n, onRankStart = _this$props.onRankStart, onPageRowsUpdate = _this$props.onPageRowsUpdate, testId = _this$props.testId, label = _this$props.label;
      return import_react20.default.createElement(stateless_default, {
        paginationi18n,
        caption,
        emptyView,
        head,
        highlightedRowIndex,
        loadingSpinnerSize,
        isLoading,
        loadingLabel,
        isFixedSize,
        onSetPage: this.onSetPageHandler,
        onSort: this.onSortHandler,
        page,
        rows,
        rowsPerPage,
        sortKey,
        sortOrder,
        isRankable,
        isRankingDisabled,
        onRankEnd: this.onRankEndHandler,
        onRankStart,
        onPageRowsUpdate,
        testId,
        label
      });
    }
  }]);
}(import_react20.default.Component);
_defineProperty(DynamicTable3, "defaultProps", {
  defaultPage: 1,
  isLoading: false,
  isFixedSize: false,
  isRankable: false,
  onSetPage: noop,
  onSort: noop,
  rowsPerPage: Infinity
});
export {
  stateless_default as DynamicTableStateless,
  DynamicTable3 as default
};
//# sourceMappingURL=@atlaskit_dynamic-table.js.map

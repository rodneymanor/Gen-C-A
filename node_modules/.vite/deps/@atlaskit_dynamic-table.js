import {
  ASC,
  DESC,
  LARGE,
  LOADING_CONTENTS_OPACITY,
  SMALL,
  TableBodyCell,
  TableBodyRow,
  assertIsSortable,
  getPageRows,
  getTruncationStyleVars,
  inlineStylesIfRanking,
  reorderRows,
  validateSortKey,
  withDimensions,
  withSortedPageRows
} from "./chunk-CN4PYAJ6.js";
import {
  Popper,
  layers,
  memoizeOne,
  spinner_default,
  useNotifyOpenLayerObserver
} from "./chunk-EDDXXJUM.js";
import {
  B100,
  B200,
  B300,
  B400,
  B50,
  B500,
  B75,
  DN0,
  DN100,
  DN30,
  DN300,
  DN400,
  DN60,
  DN70,
  N0,
  N10,
  N20,
  N200,
  N20A,
  N300,
  N30A,
  N40,
  N400,
  N500,
  N70,
  N700,
  N800,
  N90,
  R300,
  R400,
  R500,
  Y200,
  Y300,
  Y400
} from "./chunk-PEEUAIZD.js";
import {
  ClassNames,
  css,
  jsx
} from "./chunk-LES4B5AP.js";
import {
  base_new_exports,
  box_default,
  esm_default,
  flex_default,
  init_base_new,
  inline_default,
  noop,
  pressable_default,
  text_default,
  useIdSeed,
  usePlatformLeafEventHandler,
  usePlatformLeafSyntheticEventHandler,
  visually_hidden_default
} from "./chunk-52PDBQP3.js";
import "./chunk-XUSVWCLU.js";
import "./chunk-QMMHG35I.js";
import {
  fg,
  init_esm
} from "./chunk-3QRSVI6J.js";
import {
  require_dist
} from "./chunk-CGH4DJNJ.js";
import {
  _objectWithoutProperties,
  _slicedToArray,
  _toConsumableArray,
  init_objectWithoutProperties,
  init_slicedToArray
} from "./chunk-DEYTXOWA.js";
import {
  _classCallCheck,
  _createClass,
  _getPrototypeOf,
  _inherits,
  _possibleConstructorReturn,
  init_classCallCheck,
  init_createClass,
  init_getPrototypeOf,
  init_inherits,
  init_possibleConstructorReturn
} from "./chunk-NS4BQYS2.js";
import "./chunk-DCBAGZLM.js";
import "./chunk-AAY5IJNO.js";
import {
  require_react_dom
} from "./chunk-G52XTN3B.js";
import {
  base_exports,
  init_base
} from "./chunk-MAZZR7YT.js";
import {
  ax,
  cssCustomPropertyValue,
  init_runtime
} from "./chunk-6RMDKNC5.js";
import {
  _defineProperty,
  _typeof,
  init_defineProperty,
  init_typeof
} from "./chunk-LBGAJG32.js";
import {
  _extends,
  init_extends
} from "./chunk-64QIVKMX.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/icon/core/chevron-left.js
var require_chevron_left = __commonJS({
  "node_modules/@atlaskit/icon/core/chevron-left.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronLeftIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ChevronLeftIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" d="m9.97 1.47-6 6a.75.75 0 0 0-.052 1.004l.052.056 6 6 1.06-1.06L5.56 8l5.47-5.47z"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronLeftIcon.displayName = "ChevronLeftIcon";
    var _default = exports.default = ChevronLeftIcon;
  }
});

// node_modules/@atlaskit/icon/glyph/chevron-left-large.js
var require_chevron_left_large = __commonJS({
  "node_modules/@atlaskit/icon/glyph/chevron-left-large.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronLeftLargeIcon2 = (props) => _react.default.createElement(_base.Icon, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="m9.005 10.995 4.593-4.593a.99.99 0 1 1 1.4 1.4l-3.9 3.9 3.9 3.9a.99.99 0 0 1-1.4 1.4L9.005 12.41a1 1 0 0 1 0-1.414"/></svg>`
    }, props));
    ChevronLeftLargeIcon2.displayName = "ChevronLeftLargeIcon";
    var _default = exports.default = ChevronLeftLargeIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/chevron-left--chevron-left-large.js
var require_chevron_left_chevron_left_large = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/chevron-left--chevron-left-large.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _chevronLeft = _interopRequireDefault(require_chevron_left());
    var _chevronLeftLarge = _interopRequireDefault(require_chevron_left_large());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronLeftIcon = (props) => _react.default.createElement(_chevronLeft.default, Object.assign({
      name: "ChevronLeftIcon",
      LEGACY_fallbackIcon: _chevronLeftLarge.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronLeftIcon.displayName = "ChevronLeftIconMigration";
    var _default = exports.default = ChevronLeftIcon;
  }
});

// node_modules/@atlaskit/icon/core/chevron-right.js
var require_chevron_right = __commonJS({
  "node_modules/@atlaskit/icon/core/chevron-right.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronRightIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ChevronRightIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" d="m6.03 1.47 6 6a.75.75 0 0 1 .052 1.004l-.052.056-6 6-1.06-1.06L10.44 8 4.97 2.53z"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronRightIcon.displayName = "ChevronRightIcon";
    var _default = exports.default = ChevronRightIcon;
  }
});

// node_modules/@atlaskit/icon/glyph/chevron-right-large.js
var require_chevron_right_large = __commonJS({
  "node_modules/@atlaskit/icon/glyph/chevron-right-large.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronRightLargeIcon2 = (props) => _react.default.createElement(_base.Icon, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="M14.995 10.995a1 1 0 0 1 0 1.414l-4.593 4.593a.99.99 0 0 1-1.4-1.4l3.9-3.9-3.9-3.9a.99.99 0 0 1 1.4-1.4z"/></svg>`
    }, props));
    ChevronRightLargeIcon2.displayName = "ChevronRightLargeIcon";
    var _default = exports.default = ChevronRightLargeIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/chevron-right--chevron-right-large.js
var require_chevron_right_chevron_right_large = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/chevron-right--chevron-right-large.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _chevronRight = _interopRequireDefault(require_chevron_right());
    var _chevronRightLarge = _interopRequireDefault(require_chevron_right_large());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ChevronRightIcon = (props) => _react.default.createElement(_chevronRight.default, Object.assign({
      name: "ChevronRightIcon",
      LEGACY_fallbackIcon: _chevronRightLarge.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ChevronRightIcon.displayName = "ChevronRightIconMigration";
    var _default = exports.default = ChevronRightIcon;
  }
});

// node_modules/@atlaskit/icon/core/arrow-down.js
var require_arrow_down = __commonJS({
  "node_modules/@atlaskit/icon/core/arrow-down.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ArrowDownIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ArrowDownIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8.75 1v11.44l3.72-3.72 1.06 1.06-5 5a.75.75 0 0 1-1.06 0l-5-5 1.06-1.06 3.72 3.72V1z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ArrowDownIcon2.displayName = "ArrowDownIcon";
    var _default = exports.default = ArrowDownIcon2;
  }
});

// node_modules/@atlaskit/icon/core/arrow-up.js
var require_arrow_up = __commonJS({
  "node_modules/@atlaskit/icon/core/arrow-up.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ArrowUpIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ArrowUpIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8.75 15V3.56l3.72 3.72 1.06-1.06-5-5a.75.75 0 0 0-1.06 0l-5 5 1.06 1.06 3.72-3.72V15z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ArrowUpIcon2.displayName = "ArrowUpIcon";
    var _default = exports.default = ArrowUpIcon2;
  }
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/stateful.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react57 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/components/stateless.js
init_extends();
init_objectWithoutProperties();
init_slicedToArray();
var import_react56 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/dynamic-table.js
init_extends();
init_defineProperty();
init_objectWithoutProperties();
var React = __toESM(require_react());
init_runtime();
var import_react = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/dynamic-table.compiled.css";
var _excluded = ["isFixedSize", "hasDataRow", "children", "testId", "isLoading"];
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var Table = (0, import_react.forwardRef)(function(_ref, ref) {
  var isFixedSize = _ref.isFixedSize, hasDataRow = _ref.hasDataRow, children = _ref.children, testId = _ref.testId, isLoading = _ref.isLoading, rest = _objectWithoutProperties(_ref, _excluded);
  return React.createElement("table", _extends({
    inert: isLoading ? "" : void 0,
    ref
  }, rest, {
    "data-testid": testId && "".concat(testId, "--table"),
    className: ax(["_1bsb1osq _yq5hus1c _btyzidpf _ect41gqc", isFixedSize && "_1kqm1n9t", hasDataRow && "_179rralu"]),
    style: _objectSpread(_objectSpread({}, {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      "--local-dynamic-table-hover-bg": "var(--ds-background-neutral-subtle-hovered, ".concat(N10, ")"),
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      "--local-dynamic-table-highlighted-bg": "var(--ds-background-selected, ".concat(B50, ")"),
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      "--local-dynamic-table-hover-highlighted-bg": "var(--ds-background-selected-hovered, ".concat(B75, ")"),
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
      "--local-dynamic-table-row-focus-outline": "var(--ds-border-focused, ".concat(B100, ")")
    }), {}, {
      "--_k02y3n": cssCustomPropertyValue("2px solid ".concat("var(--ds-border, ".concat(N40, ")")))
    })
  }), children);
});
var Caption = function Caption2(_ref2) {
  var children = _ref2.children;
  return React.createElement("caption", {
    className: ax(["_11c8lodh _6rthu2gc _1pfh1ejb _m6k41e03"])
  }, children);
};
var PaginationWrapper = function PaginationWrapper2(_ref3) {
  var children = _ref3.children, testId = _ref3.testId;
  return React.createElement("div", {
    "data-testid": testId && "".concat(testId, "--pagination--container"),
    className: ax(["_1e0c1txw _1bah1h6o"])
  }, children);
};

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/empty-body.js
var React2 = __toESM(require_react());
init_runtime();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/empty-body.compiled.css";
var EmptyViewWithFixedHeight = function EmptyViewWithFixedHeight2(_ref) {
  var children = _ref.children, testId = _ref.testId;
  return React2.createElement("div", {
    "data-testid": testId && "".concat(testId, "--empty-view-with-fixed-height"),
    className: ax(["_4t3i1jdh"])
  }, children);
};
var EmptyViewContainer = function EmptyViewContainer2(props) {
  var children = props.children, testId = props.testId;
  return React2.createElement("div", {
    "data-testid": testId && "".concat(testId, "--empty-view-container"),
    className: ax(["_19pk1wug _2hwx1wug _otyr1wug _18u01wug _ca0q19bv _u5f319bv _n3td19bv _19bv19bv _1bsb1ssb _y3gn1h6o"])
  }, children);
};

// node_modules/@atlaskit/dynamic-table/dist/esm/components/body.js
init_extends();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react3 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-row.js
init_extends();
init_objectWithoutProperties();
var import_react2 = __toESM(require_react());
var _excluded2 = ["cells"];
var _excluded22 = ["content", "testId"];
var Row = function Row2(_ref) {
  var row = _ref.row, head = _ref.head, testId = _ref.testId, isFixedSize = _ref.isFixedSize, isHighlighted = _ref.isHighlighted;
  var cells = row.cells, restRowProps = _objectWithoutProperties(row, _excluded2);
  return import_react2.default.createElement(TableBodyRow, _extends({}, restRowProps, {
    isHighlighted
  }, isHighlighted ? {
    "data-ts--dynamic-table--table-row--highlighted": true
  } : null, {
    testId: row.testId || testId && "".concat(testId, "--row-").concat(restRowProps.key)
  }), cells.map(function(cell, cellIndex) {
    var content = cell.content, cellTestId = cell.testId, restCellProps = _objectWithoutProperties(cell, _excluded22);
    var _ref2 = (head || {
      cells: []
    }).cells[cellIndex] || {}, shouldTruncate = _ref2.shouldTruncate, width = _ref2.width;
    return import_react2.default.createElement(TableBodyCell, _extends({
      "data-testid": cellTestId || testId && "".concat(testId, "--cell-").concat(cellIndex)
    }, restCellProps, {
      isFixedSize,
      key: cellIndex,
      shouldTruncate,
      width
    }), content);
  }));
};
var table_row_default = Row;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/body.js
function _callSuper(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var BodyComponent = function(_React$Component) {
  function BodyComponent2() {
    _classCallCheck(this, BodyComponent2);
    return _callSuper(this, BodyComponent2, arguments);
  }
  _inherits(BodyComponent2, _React$Component);
  return _createClass(BodyComponent2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, pageRows = _this$props.pageRows, head = _this$props.head, isFixedSize = _this$props.isFixedSize, highlightedRowIndex = _this$props.highlightedRowIndex, testId = _this$props.testId, forwardedRef = _this$props.forwardedRef;
      return import_react3.default.createElement("tbody", {
        "data-testid": testId && "".concat(testId, "--body"),
        ref: forwardedRef
      }, pageRows.map(function(row, rowIndex) {
        return import_react3.default.createElement(table_row_default, {
          head,
          isFixedSize,
          key: row.key || rowIndex,
          row,
          isHighlighted: row.isHighlighted || !!highlightedRowIndex && (typeof highlightedRowIndex === "number" ? highlightedRowIndex === rowIndex : highlightedRowIndex.indexOf(rowIndex) > -1),
          testId
        });
      }));
    }
  }]);
}(import_react3.default.Component);
var Body = withSortedPageRows(import_react3.default.forwardRef(function(props, ref) {
  return import_react3.default.createElement(BodyComponent, _extends({}, props, {
    forwardedRef: ref
  }));
}));
var body_default = Body;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/error-boundary.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react4 = __toESM(require_react());
function _callSuper2(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct2() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct2() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct2 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var ErrorBoundary = function(_React$Component) {
  function ErrorBoundary2(props) {
    var _this;
    _classCallCheck(this, ErrorBoundary2);
    _this = _callSuper2(this, ErrorBoundary2, [props]);
    _this.state = {
      hasError: false
    };
    return _this;
  }
  _inherits(ErrorBoundary2, _React$Component);
  return _createClass(ErrorBoundary2, [{
    key: "render",
    value: function render() {
      if (this.state.hasError) {
        return this.props.fallback;
      }
      return this.props.children;
    }
  }], [{
    key: "getDerivedStateFromError",
    value: function getDerivedStateFromError() {
      return {
        hasError: true
      };
    }
  }]);
}(import_react4.default.Component);

// node_modules/@atlaskit/dynamic-table/dist/esm/components/loading-container.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react5 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/loading-container.js
init_defineProperty();
var React6 = __toESM(require_react());
init_runtime();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/loading-container.compiled.css";
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var CSS_VAR_CONTENTS_OPACITY = "--contents-opacity";
var Container = function Container2(_ref) {
  var children = _ref.children, testId = _ref.testId;
  return React6.createElement("div", {
    "data-testid": testId && "".concat(testId, "--container"),
    className: ax(["_kqswh2mm"])
  }, children);
};
var ContentsContainer = function ContentsContainer2(_ref2) {
  var children = _ref2.children, contentsOpacity = _ref2.contentsOpacity, testId = _ref2.testId;
  return React6.createElement("div", {
    "data-testid": testId && "".concat(testId, "--contents--container"),
    className: ax(["_tzy47hfw _lcxvglyw"]),
    style: _objectSpread2(_objectSpread2({}, _defineProperty({}, CSS_VAR_CONTENTS_OPACITY, contentsOpacity)), {}, {
      "--_cnddr8": cssCustomPropertyValue("var(".concat(CSS_VAR_CONTENTS_OPACITY, ")"))
    })
  }, children);
};
var SpinnerContainer = function SpinnerContainer2(_ref3) {
  var children = _ref3.children, testId = _ref3.testId;
  return React6.createElement("div", {
    "data-testid": testId && "".concat(testId, "--spinner--container"),
    className: ax(["_1r04idpf _1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o"])
  }, children);
};

// node_modules/@atlaskit/dynamic-table/dist/esm/components/loading-container.js
function _callSuper3(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct3() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct3() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct3 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var LoadingContainer = function(_React$Component) {
  function LoadingContainer2() {
    _classCallCheck(this, LoadingContainer2);
    return _callSuper3(this, LoadingContainer2, arguments);
  }
  _inherits(LoadingContainer2, _React$Component);
  return _createClass(LoadingContainer2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, children = _this$props.children, isLoading = _this$props.isLoading, spinnerSize = _this$props.spinnerSize, contentsOpacity = _this$props.contentsOpacity, testId = _this$props.testId, loadingLabel = _this$props.loadingLabel;
      return import_react5.default.createElement(Container, {
        testId
      }, !isLoading ? children : import_react5.default.createElement(ContentsContainer, {
        contentsOpacity,
        testId
      }, children), isLoading && import_react5.default.createElement(SpinnerContainer, {
        testId
      }, import_react5.default.createElement(spinner_default, {
        size: spinnerSize,
        testId: testId && "".concat(testId, "--loadingSpinner"),
        label: loadingLabel
      })));
    }
  }]);
}(import_react5.default.Component);
_defineProperty(LoadingContainer, "defaultProps", {
  isLoading: true,
  spinnerSize: LARGE,
  contentsOpacity: LOADING_CONTENTS_OPACITY,
  loadingLabel: "Loading table"
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/loading-container-advanced.js
init_typeof();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react7 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/loading-container-advanced.js
init_extends();
init_objectWithoutProperties();
var React8 = __toESM(require_react());
init_runtime();
var import_react6 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/loading-container-advanced.compiled.css";
var _excluded3 = ["children", "testId"];
var Container3 = (0, import_react6.forwardRef)(function(props, ref) {
  var children = props.children, testId = props.testId, rest = _objectWithoutProperties(props, _excluded3);
  return React8.createElement("div", _extends({}, rest, {
    "data-testid": testId,
    ref,
    className: ax(["_kqswh2mm _6rth1ejb"])
  }), children);
});
var SpinnerBackdrop = function SpinnerBackdrop2(_ref) {
  var children = _ref.children, testId = _ref.testId;
  return React8.createElement("div", {
    "data-testid": testId && "".concat(testId, "--spinner-backdrop"),
    className: ax(["_1r04idpf _1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o _lcxvglyw"])
  }, children);
};
var SpinnerContainer3 = (0, import_react6.forwardRef)(function(_ref2, ref) {
  var children = _ref2.children;
  return React8.createElement("div", {
    ref,
    className: ax(["_kqswh2mm _152tidpf"])
  }, children);
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/loading-container-advanced.js
function _callSuper4(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct4() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct4() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct4 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var LoadingContainerAdvanced = function(_React$Component) {
  function LoadingContainerAdvanced2() {
    var _this;
    _classCallCheck(this, LoadingContainerAdvanced2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper4(this, LoadingContainerAdvanced2, [].concat(args));
    _defineProperty(_this, "spinnerRef", import_react7.default.createRef());
    _defineProperty(_this, "containerRef", import_react7.default.createRef());
    _defineProperty(_this, "componentDidMount", function() {
      if (_this.props.isLoading && _this.hasTargetNode()) {
        _this.attachListeners();
        _this.updateTargetAppearance();
        _this.updateSpinnerPosition();
      }
    });
    _defineProperty(_this, "UNSAFE_componentWillReceiveProps", function(nextProps) {
      if (!nextProps.isLoading || !_this.hasTargetNode(nextProps)) {
        _this.detachListeners();
      } else if (!_this.props.isLoading) {
        _this.attachListeners();
      }
    });
    _defineProperty(_this, "componentDidUpdate", function() {
      if (_this.hasTargetNode()) {
        _this.updateTargetAppearance();
        if (_this.props.isLoading) {
          _this.updateSpinnerPosition();
        }
      }
    });
    _defineProperty(_this, "componentWillUnmount", function() {
      _this.detachListeners();
    });
    _defineProperty(_this, "getTargetNode", function() {
      var nextProps = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _this.props;
      var targetRef = nextProps.targetRef;
      var target = targetRef === null || targetRef === void 0 ? void 0 : targetRef();
      return target || _this.containerRef.current;
    });
    _defineProperty(_this, "hasTargetNode", function(nextProps) {
      return !!_this.getTargetNode(nextProps);
    });
    _defineProperty(_this, "isVerticallyVisible", function(elementRect, viewportHeight) {
      var top = elementRect.top, bottom = elementRect.bottom;
      if (bottom <= 0) {
        return false;
      }
      return top < viewportHeight;
    });
    _defineProperty(_this, "isFullyVerticallyVisible", function(elementRect, viewportHeight) {
      var top = elementRect.top, bottom = elementRect.bottom;
      return top >= 0 && bottom <= viewportHeight;
    });
    _defineProperty(_this, "handleResize", function() {
      _this.updateSpinnerPosition();
    });
    _defineProperty(_this, "handleScroll", function() {
      _this.updateSpinnerPosition();
    });
    _defineProperty(_this, "translateSpinner", function(spinnerNode, transformY, isFixed) {
      spinnerNode.style.position = isFixed ? "fixed" : "";
      spinnerNode.style.transform = transformY !== 0 ? "translate3d(0, ".concat(transformY, "px, 0)") : "";
    });
    _defineProperty(_this, "updateTargetAppearance", function() {
      var targetNode = _this.getTargetNode();
      var _this$props = _this.props, isLoading = _this$props.isLoading, contentsOpacity = _this$props.contentsOpacity;
      if (targetNode && targetNode.style && _typeof(targetNode.style) === "object") {
        targetNode.style.pointerEvents = isLoading ? "none" : "";
        targetNode.style.opacity = isLoading ? contentsOpacity.toString() : "";
      }
    });
    return _this;
  }
  _inherits(LoadingContainerAdvanced2, _React$Component);
  return _createClass(LoadingContainerAdvanced2, [{
    key: "attachListeners",
    value: function attachListeners() {
      window.addEventListener("scroll", this.handleScroll);
      window.addEventListener("resize", this.handleResize);
    }
  }, {
    key: "detachListeners",
    value: function detachListeners() {
      window.removeEventListener("scroll", this.handleScroll);
      window.removeEventListener("resize", this.handleResize);
    }
  }, {
    key: "updateSpinnerPosition",
    value: function updateSpinnerPosition() {
      var _this$spinnerRef, _this$containerRef;
      var viewportHeight = window.innerHeight;
      var targetNode = this.getTargetNode();
      var spinnerNode = (_this$spinnerRef = this.spinnerRef) === null || _this$spinnerRef === void 0 ? void 0 : _this$spinnerRef.current;
      if (!targetNode || typeof targetNode.getBoundingClientRect !== "function" || !spinnerNode) {
        return;
      }
      var targetRect = targetNode.getBoundingClientRect();
      var spinnerRect = spinnerNode.getBoundingClientRect();
      var spinnerHeight = spinnerRect.height;
      var isInViewport = this.isVerticallyVisible(targetRect, viewportHeight);
      var top = targetRect.top, bottom = targetRect.bottom, height = targetRect.height;
      if (isInViewport) {
        var canFollow = height >= spinnerHeight * 3;
        if (canFollow && !this.isFullyVerticallyVisible(targetRect, viewportHeight)) {
          if (top >= 0) {
            var viewportSpaceTakenByElement = viewportHeight - top;
            var diff = viewportSpaceTakenByElement / 2 + top - spinnerHeight / 2;
            var y = viewportSpaceTakenByElement < spinnerHeight * 3 ? top + spinnerHeight : diff;
            this.translateSpinner(spinnerNode, y, true);
          } else if (top < 0 && bottom > viewportHeight) {
            var _y = viewportHeight / 2 - spinnerHeight / 2;
            this.translateSpinner(spinnerNode, _y, true);
          } else {
            var _diff = bottom / 2 - spinnerHeight / 2;
            var _y2 = _diff < spinnerHeight ? _diff - (spinnerHeight - _diff) : _diff;
            this.translateSpinner(spinnerNode, _y2, true);
          }
          return;
        }
      } else {
        if (!this.isVerticallyVisible(spinnerRect, viewportHeight)) {
          return;
        }
      }
      var containerNode = (_this$containerRef = this.containerRef) === null || _this$containerRef === void 0 ? void 0 : _this$containerRef.current;
      if (containerNode && typeof containerNode.getBoundingClientRect === "function") {
        var thisTop = containerNode.getBoundingClientRect().top;
        var _y3 = (top - thisTop) / 2;
        this.translateSpinner(spinnerNode, _y3, false);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props, children = _this$props2.children, isLoading = _this$props2.isLoading, spinnerSize = _this$props2.spinnerSize, testId = _this$props2.testId, loadingLabel = _this$props2.loadingLabel;
      return import_react7.default.createElement(Container3, {
        testId: testId && "".concat(testId, "--loading--container--advanced"),
        ref: this.containerRef
      }, children, isLoading && import_react7.default.createElement(SpinnerBackdrop, {
        testId
      }, import_react7.default.createElement(SpinnerContainer3, {
        ref: this.spinnerRef
      }, import_react7.default.createElement(spinner_default, {
        size: spinnerSize,
        testId: testId && "".concat(testId, "--loadingSpinner"),
        label: loadingLabel
      }))));
    }
  }]);
}(import_react7.default.Component);
_defineProperty(LoadingContainerAdvanced, "defaultProps", {
  isLoading: true,
  spinnerSize: LARGE,
  contentsOpacity: "var(--ds-opacity-loading, ".concat("".concat(LOADING_CONTENTS_OPACITY), ")"),
  loadingLabel: "Loading table"
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/managed-pagination.js
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
init_defineProperty();
var import_react23 = __toESM(require_react());

// node_modules/@atlaskit/pagination/dist/esm/pagination.js
init_defineProperty();
init_slicedToArray();
init_runtime();
var import_react22 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/pagination/dist/esm/pagination.compiled.css";

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-controlled.js
init_slicedToArray();
var import_react8 = __toESM(require_react());
function useControlled(propValue) {
  var getDefaultPropValue = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
    return propValue;
  };
  var isControlled = propValue !== void 0;
  var _useState = (0, import_react8.useState)(getDefaultPropValue), _useState2 = _slicedToArray(_useState, 2), valueState = _useState2[0], setValue = _useState2[1];
  var isControlledRef = (0, import_react8.useRef)(isControlled);
  (0, import_react8.useEffect)(function() {
    isControlledRef.current = isControlled;
  }, [isControlled]);
  var value = isControlled ? propValue : valueState;
  var setValueIfUncontrolled = (0, import_react8.useCallback)(function(newValue) {
    if (!isControlledRef.current) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}

// node_modules/@atlaskit/pagination/dist/esm/pagination.js
var import_chevron_left_chevron_left_large = __toESM(require_chevron_left_chevron_left_large());
var import_chevron_right_chevron_right_large = __toESM(require_chevron_right_chevron_right_large());

// node_modules/@atlaskit/pagination/dist/esm/internal/components/navigator.js
var import_react19 = __toESM(require_react());

// node_modules/@atlaskit/button/dist/esm/old-button/button.js
init_extends();
init_slicedToArray();
init_objectWithoutProperties();
var import_react18 = __toESM(require_react());

// node_modules/@atlaskit/theme/dist/esm/utils/create-theme.js
init_objectWithoutProperties();
var import_react9 = __toESM(require_react());
var _excluded4 = ["children"];
function createTheme(defaultGetTokens) {
  var emptyThemeFn = function emptyThemeFn2(getTokens, props) {
    return getTokens(props);
  };
  var ThemeContext = (0, import_react9.createContext)(defaultGetTokens);
  function useTheme2(themeProps) {
    var theme = (0, import_react9.useContext)(ThemeContext);
    var themeFn = theme || emptyThemeFn;
    var tokens = themeFn(themeProps);
    return tokens;
  }
  function Consumer2(props) {
    var children = props.children, themeProps = _objectWithoutProperties(props, _excluded4);
    var tokens = useTheme2(themeProps);
    return import_react9.default.createElement(import_react9.default.Fragment, null, children(tokens));
  }
  function Provider2(props) {
    var themeFn = (0, import_react9.useContext)(ThemeContext);
    var valueFn = props.value || emptyThemeFn;
    var mixedFn = (0, import_react9.useCallback)(function(themeProps) {
      return valueFn(themeFn, themeProps);
    }, [themeFn, valueFn]);
    return import_react9.default.createElement(ThemeContext.Provider, {
      value: mixedFn
    }, props.children);
  }
  return {
    Consumer: Consumer2,
    Provider: Provider2,
    useTheme: useTheme2
  };
}

// node_modules/@atlaskit/theme/dist/esm/components/theme.js
var _createTheme = createTheme(function() {
  return {
    mode: "light"
  };
});
var Provider = _createTheme.Provider;
var Consumer = _createTheme.Consumer;
var useTheme = _createTheme.useTheme;

// node_modules/@atlaskit/button/dist/esm/old-button/shared/button-base.js
init_extends();
init_objectWithoutProperties();
var import_react16 = __toESM(require_react());

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-auto-focus.js
var import_react10 = __toESM(require_react());
function useAutoFocus(ref, autoFocus) {
  var initialMount = (0, import_react10.useRef)(true);
  (0, import_react10.useEffect)(function() {
    if (ref && initialMount.current && autoFocus && ref.current) {
      ref.current.focus();
    }
    initialMount.current = false;
  }, [autoFocus, ref]);
}

// node_modules/@atlaskit/focus-ring/dist/esm/focus-ring.js
var import_react11 = __toESM(require_react());
var BORDER_WIDTH = 2;
var baseFocusOutsideStyles = css({
  outline: "".concat(BORDER_WIDTH, "px solid ", "var(--ds-border-focused, #2684FF)"),
  outlineOffset: BORDER_WIDTH
});
var baseInsetStyles = css({
  outlineColor: "var(--ds-border-focused, #2684FF)",
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
  outlineOffset: -BORDER_WIDTH,
  outlineStyle: "solid",
  outlineWidth: "var(--ds-border-width-focused, 2px)"
});
var focusRingStyles = css({
  // Focus styles used when :focus-visible isn't supported
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
  "&:focus": baseFocusOutsideStyles,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
  "&:focus-visible": baseFocusOutsideStyles,
  // Remove default focus styles for mouse interactions if :focus-visible is supported
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors
  "&:focus:not(:focus-visible)": {
    outline: "none"
  },
  "@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)": {
    "&:focus-visible": {
      outline: "1px solid"
    }
  }
});
var insetFocusRingStyles = css({
  // Focus styles used when :focus-visible isn't supported
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
  "&:focus": baseInsetStyles,
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values
  "&:focus-visible": baseInsetStyles,
  // Remove default focus styles for mouse interactions if :focus-visible is supported
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors
  "&:focus:not(:focus-visible)": {
    outline: "none"
  },
  "@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)": {
    "&:focus-visible": {
      outline: "1px solid",
      // eslint-disable-next-line @atlaskit/design-system/use-tokens-space
      outlineOffset: "-1px"
    }
  }
});
var FocusRing = (0, import_react11.memo)(function(_ref) {
  var children = _ref.children, isInset = _ref.isInset, focus = _ref.focus;
  var controlledStyles = isInset ? baseInsetStyles : baseFocusOutsideStyles;
  var uncontrolledStyles = isInset ? insetFocusRingStyles : focusRingStyles;
  var focusCls = typeof focus === "undefined" ? uncontrolledStyles : focus === "on" && controlledStyles;
  return jsx(ClassNames, null, function(_ref2) {
    var css2 = _ref2.css, cx = _ref2.cx;
    return import_react11.Children.only(
      // This may look unwieldy but means we skip applying styles / cloning if no className is applicable
      focusCls ? (
        // eslint-disable-next-line @repo/internal/react/no-clone-element
        (0, import_react11.cloneElement)(children, {
          className: cx([css2(focusCls), children.props.className])
        })
      ) : children
    );
  });
});
FocusRing.displayName = "FocusRing";
var focus_ring_default = FocusRing;

// node_modules/@atlaskit/focus-ring/dist/esm/use-focus-ring.js
init_slicedToArray();
var import_react13 = __toESM(require_react());

// node_modules/@atlaskit/button/dist/esm/old-button/shared/block-events.js
function abort(event) {
  event.preventDefault();
  event.stopPropagation();
}
var tabKeyCode = 9;
function onKey(event) {
  if (event.keyCode === tabKeyCode) {
    return;
  }
  abort(event);
}
var block = {
  onMouseDownCapture: abort,
  onMouseUpCapture: abort,
  // because we have tabIndex = -1 when disabled,
  // keyboard events can only occur when there is an overlay
  onKeyDownCapture: onKey,
  onKeyUpCapture: onKey,
  onTouchStartCapture: abort,
  onTouchEndCapture: abort,
  onPointerDownCapture: abort,
  onPointerUpCapture: abort,
  onClickCapture: abort,
  // Just smashing the existing onClick for good measure
  onClick: abort
};
var doNotBlock = {};
function blockEvents(_ref) {
  var isInteractive = _ref.isInteractive;
  return isInteractive ? doNotBlock : block;
}

// node_modules/@atlaskit/button/dist/esm/old-button/shared/css.js
init_defineProperty();
init_esm();

// node_modules/@atlaskit/button/dist/esm/old-button/shared/colors.js
var fadedB75 = "rgba(179, 212, 255, 0.6)";
var values = {
  // Default appearance
  background: {
    default: {
      default: {
        light: "var(--ds-background-neutral, ".concat(N20A, ")"),
        dark: "var(--ds-background-neutral, ".concat(DN70, ")")
      },
      hover: {
        light: "var(--ds-background-neutral-hovered, ".concat(N30A, ")"),
        dark: "var(--ds-background-neutral-hovered, ".concat(DN60, ")")
      },
      active: {
        light: "var(--ds-background-neutral-pressed, ".concat(fadedB75, ")"),
        dark: "var(--ds-background-neutral-pressed, ".concat(B75, ")")
      },
      disabled: {
        light: "var(--ds-background-disabled, ".concat(N20A, ")"),
        dark: "var(--ds-background-disabled, ".concat(DN70, ")")
      },
      selected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(DN0, ")")
      },
      focusSelected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(DN0, ")")
      }
    },
    primary: {
      default: {
        light: "var(--ds-background-brand-bold, ".concat(B400, ")"),
        dark: "var(--ds-background-brand-bold, ".concat(B100, ")")
      },
      hover: {
        light: "var(--ds-background-brand-bold-hovered, ".concat(B300, ")"),
        dark: "var(--ds-background-brand-bold-hovered, ".concat(B75, ")")
      },
      active: {
        light: "var(--ds-background-brand-bold-pressed, ".concat(B500, ")"),
        dark: "var(--ds-background-brand-bold-pressed, ".concat(B200, ")")
      },
      disabled: {
        light: "var(--ds-background-disabled, ".concat(N20A, ")"),
        dark: "var(--ds-background-disabled, ".concat(DN70, ")")
      },
      selected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(DN0, ")")
      },
      focusSelected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(DN0, ")")
      }
    },
    warning: {
      default: {
        light: "var(--ds-background-warning-bold, ".concat(Y300, ")"),
        dark: "var(--ds-background-warning-bold, ".concat(Y300, ")")
      },
      hover: {
        light: "var(--ds-background-warning-bold-hovered, ".concat(Y200, ")"),
        dark: "var(--ds-background-warning-bold-hovered, ".concat(Y200, ")")
      },
      active: {
        light: "var(--ds-background-warning-bold-pressed, ".concat(Y400, ")"),
        dark: "var(--ds-background-warning-bold-pressed, ".concat(Y400, ")")
      },
      disabled: {
        light: "var(--ds-background-disabled, ".concat(N20A, ")"),
        dark: "var(--ds-background-disabled, ".concat(DN70, ")")
      },
      selected: {
        light: "var(--ds-background-selected, ".concat(Y400, ")"),
        dark: "var(--ds-background-selected, ".concat(Y400, ")")
      },
      focusSelected: {
        light: "var(--ds-background-selected, ".concat(Y400, ")"),
        dark: "var(--ds-background-selected, ".concat(Y400, ")")
      }
    },
    danger: {
      default: {
        light: "var(--ds-background-danger-bold, ".concat(R400, ")"),
        dark: "var(--ds-background-danger-bold, ".concat(R400, ")")
      },
      hover: {
        light: "var(--ds-background-danger-bold-hovered, ".concat(R300, ")"),
        dark: "var(--ds-background-danger-bold-hovered, ".concat(R300, ")")
      },
      active: {
        light: "var(--ds-background-danger-bold-pressed, ".concat(R500, ")"),
        dark: "var(--ds-background-danger-bold-pressed, ".concat(R500, ")")
      },
      disabled: {
        light: "var(--ds-background-disabled, ".concat(N20A, ")"),
        dark: "var(--ds-background-disabled, ".concat(DN70, ")")
      },
      selected: {
        light: "var(--ds-background-selected, ".concat(R500, ")"),
        dark: "var(--ds-background-selected, ".concat(R500, ")")
      },
      focusSelected: {
        light: "var(--ds-background-selected, ".concat(R500, ")"),
        dark: "var(--ds-background-selected, ".concat(R500, ")")
      }
    },
    link: {
      default: {
        light: "var(--ds-background-neutral-subtle, none)",
        dark: "var(--ds-background-neutral-subtle, none)"
      },
      selected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(N20, ")")
      },
      focusSelected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(N20, ")")
      }
    },
    subtle: {
      default: {
        light: "var(--ds-background-neutral-subtle, none)",
        dark: "var(--ds-background-neutral-subtle, none)"
      },
      hover: {
        light: "var(--ds-background-neutral-subtle-hovered, ".concat(N30A, ")"),
        dark: "var(--ds-background-neutral-subtle-hovered, ".concat(DN60, ")")
      },
      active: {
        light: "var(--ds-background-neutral-subtle-pressed, ".concat(fadedB75, ")"),
        dark: "var(--ds-background-neutral-subtle-pressed, ".concat(B75, ")")
      },
      disabled: {
        light: "var(--ds-background-neutral-subtle, none)",
        dark: "var(--ds-background-neutral-subtle, none)"
      },
      selected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(DN0, ")")
      },
      focusSelected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(DN0, ")")
      }
    },
    "subtle-link": {
      default: {
        light: "var(--ds-background-neutral-subtle, none)",
        dark: "var(--ds-background-neutral-subtle, none)"
      },
      selected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(N20, ")")
      },
      focusSelected: {
        light: "var(--ds-background-selected, ".concat(N700, ")"),
        dark: "var(--ds-background-selected, ".concat(N20, ")")
      }
    }
  },
  color: {
    default: {
      default: {
        light: "var(--ds-text, ".concat(N500, ")"),
        dark: "var(--ds-text, ".concat(DN400, ")")
      },
      active: {
        light: "var(--ds-text, ".concat(B400, ")"),
        dark: "var(--ds-text, ".concat(B400, ")")
      },
      disabled: {
        light: "var(--ds-text-disabled, ".concat(N70, ")"),
        dark: "var(--ds-text-disabled, ".concat(DN30, ")")
      },
      selected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(DN400, ")")
      },
      focusSelected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(DN400, ")")
      }
    },
    primary: {
      default: {
        light: "var(--ds-text-inverse, ".concat(N0, ")"),
        dark: "var(--ds-text-inverse, ".concat(DN30, ")")
      },
      disabled: {
        light: "var(--ds-text-disabled, ".concat(N70, ")"),
        dark: "var(--ds-text-disabled, ".concat(DN30, ")")
      },
      selected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(DN400, ")")
      },
      focusSelected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(DN400, ")")
      }
    },
    warning: {
      default: {
        light: "var(--ds-text-warning-inverse, ".concat(N800, ")"),
        dark: "var(--ds-text-warning-inverse, ".concat(N800, ")")
      },
      disabled: {
        light: "var(--ds-text-disabled, ".concat(N70, ")"),
        dark: "var(--ds-text-disabled, ".concat(DN30, ")")
      },
      selected: {
        light: "var(--ds-text-selected, ".concat(N800, ")"),
        dark: "var(--ds-text-selected, ".concat(N800, ")")
      },
      focusSelected: {
        light: "var(--ds-text-selected, ".concat(N800, ")"),
        dark: "var(--ds-text-selected, ".concat(N800, ")")
      }
    },
    danger: {
      default: {
        light: "var(--ds-text-inverse, ".concat(N0, ")"),
        dark: "var(--ds-text-inverse, ".concat(N0, ")")
      },
      disabled: {
        light: "var(--ds-text-disabled, ".concat(N70, ")"),
        dark: "var(--ds-text-disabled, ".concat(DN30, ")")
      },
      selected: {
        light: "var(--ds-text-selected, ".concat(N0, ")"),
        dark: "var(--ds-text-selected, ".concat(N0, ")")
      },
      focusSelected: {
        light: "var(--ds-text-selected, ".concat(N0, ")"),
        dark: "var(--ds-text-selected, ".concat(N0, ")")
      }
    },
    link: {
      default: {
        light: "var(--ds-link, ".concat(B400, ")"),
        dark: "var(--ds-link, ".concat(B100, ")")
      },
      hover: {
        light: "var(--ds-link, ".concat(B300, ")"),
        dark: "var(--ds-link, ".concat(B75, ")")
      },
      active: {
        light: "var(--ds-link-pressed, ".concat(B500, ")"),
        dark: "var(--ds-link-pressed, ".concat(B200, ")")
      },
      disabled: {
        light: "var(--ds-text-disabled, ".concat(N70, ")"),
        dark: "var(--ds-text-disabled, ".concat(DN100, ")")
      },
      selected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(N700, ")")
      },
      focusSelected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(N700, ")")
      }
    },
    subtle: {
      default: {
        light: "var(--ds-text, ".concat(N500, ")"),
        dark: "var(--ds-text, ".concat(DN400, ")")
      },
      active: {
        light: "var(--ds-text, ".concat(B400, ")"),
        dark: "var(--ds-text, ".concat(B400, ")")
      },
      disabled: {
        light: "var(--ds-text-disabled, ".concat(N70, ")"),
        dark: "var(--ds-text-disabled, ".concat(DN100, ")")
      },
      selected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(DN400, ")")
      },
      focusSelected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(DN400, ")")
      }
    },
    "subtle-link": {
      default: {
        light: "var(--ds-text-subtle, ".concat(N200, ")"),
        dark: "var(--ds-text-subtle, ".concat(DN400, ")")
      },
      hover: {
        light: "var(--ds-text-subtle, ".concat(N90, ")"),
        dark: "var(--ds-text-subtle, ".concat(B50, ")")
      },
      active: {
        light: "var(--ds-text, ".concat(N400, ")"),
        dark: "var(--ds-text, ".concat(DN300, ")")
      },
      disabled: {
        light: "var(--ds-text-disabled, ".concat(N70, ")"),
        dark: "var(--ds-text-disabled, ".concat(DN100, ")")
      },
      selected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(DN400, ")")
      },
      focusSelected: {
        light: "var(--ds-text-selected, ".concat(N20, ")"),
        dark: "var(--ds-text-selected, ".concat(DN400, ")")
      }
    }
  }
};
var colors_default = values;

// node_modules/@atlaskit/button/dist/esm/old-button/shared/css.js
function ownKeys3(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread3(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys3(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys3(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var gridSize = 8;
var HAS_DISABLED_BACKGROUND = ["default", "primary", "danger", "warning"];
var heights = {
  default: "".concat(32 / 14, "em"),
  // 32px
  compact: "".concat(24 / 14, "em"),
  none: "auto"
};
var lineHeights = {
  default: heights.default,
  compact: heights.compact,
  none: "inherit"
};
var padding = {
  // 10px gutter
  default: "0 ".concat(gridSize + gridSize / 4, "px"),
  compact: "0 ".concat(gridSize + gridSize / 4, "px"),
  none: "0"
};
var singleIconPadding = {
  // 2px gutter
  compact: "0 ".concat(gridSize / 4, "px"),
  default: "0 ".concat(gridSize / 4, "px"),
  none: "0"
};
var verticalAlign = {
  default: "middle",
  compact: "middle",
  none: "baseline"
};
var innerMargin = {
  content: "0 ".concat(gridSize / 4, "px"),
  icon: "0 ".concat(gridSize / 4, "px")
};
var defaultAfterStyles = {
  borderRadius: "inherit",
  inset: "var(--ds-space-0, 0px)",
  borderStyle: "solid",
  borderWidth: "var(--ds-border-width, 1px)",
  pointerEvents: "none",
  position: "absolute"
};
var defaultStyles = {
  background: "var(--ds-background-neutral-subtle, #00000000)",
  color: "var(--ds-text, #172B4D)",
  "&::after": _objectSpread3(_objectSpread3({}, defaultAfterStyles), {}, {
    content: '""',
    borderColor: "var(--ds-border, #091E4224)"
  }),
  "&:hover": {
    background: "var(--ds-background-neutral-hovered, #091E4224)"
  },
  "&:active": {
    background: "var(--ds-background-neutral-pressed, #091E424F)"
  },
  '&[data-has-overlay="true"]:not([disabled]):hover': {
    background: "var(--ds-background-neutral-subtle, #00000000)"
  },
  "&:disabled[disabled]": {
    background: "var(--ds-background-neutral-subtle, #00000000)"
  },
  "&:disabled[disabled]:hover": {
    background: "var(--ds-background-neutral-subtle, #00000000)"
  },
  "&:disabled[disabled]:active": {
    background: "var(--ds-background-neutral-subtle, #00000000)"
  }
};
var primaryStyles = {
  background: "var(--ds-background-brand-bold, #0C66E4)",
  color: "var(--ds-text-inverse, #FFFFFF)",
  "&:hover": {
    background: "var(--ds-background-brand-bold-hovered, #0055CC)"
  },
  "&:active": {
    background: "var(--ds-background-brand-bold-pressed, #09326C)"
  },
  '&[data-has-overlay="true"]:not([disabled]):hover': {
    background: "var(--ds-background-brand-bold, #0C66E4)"
  }
};
var linkStyles = {
  background: "transparent",
  color: "var(--ds-link, #0C66E4)",
  "&:hover": {
    color: "var(--ds-link, #0C66E4)",
    textDecoration: "underline"
  },
  "&:active": {
    color: "var(--ds-link-pressed, #0055CC)",
    textDecoration: "underline"
  }
};
var subtleStyles = {
  background: "transparent",
  color: "var(--ds-text-subtle, #44546F)",
  "&:hover": {
    background: "var(--ds-background-neutral-subtle-hovered, #091E420F)"
  },
  "&:active": {
    background: "var(--ds-background-neutral-subtle-pressed, #091E4224)"
  },
  '&[data-has-overlay="true"]:not([disabled]):hover': {
    background: "transparent"
  }
};
var subtleLinkStyles = {
  background: "transparent",
  color: "var(--ds-text-subtle, #44546F)",
  "&:hover": {
    background: "transparent",
    color: "var(--ds-text-subtle, #44546F)",
    textDecoration: "underline"
  },
  "&:active": {
    background: "transparent",
    color: "var(--ds-text, #172B4D)",
    textDecoration: "underline"
  }
};
var warningStyles = {
  background: "var(--ds-background-warning-bold, #F5CD47)",
  color: "var(--ds-text-warning-inverse, #172B4D)",
  "&:hover": {
    background: "var(--ds-background-warning-bold-hovered, #E2B203)"
  },
  "&:active": {
    background: "var(--ds-background-warning-bold-pressed, #CF9F02)"
  },
  '&[data-has-overlay="true"]:not([disabled]):hover': {
    background: "var(--ds-background-warning-bold, #F5CD47)"
  }
};
var dangerStyles = {
  background: "var(--ds-background-danger-bold, #C9372C)",
  color: "var(--ds-text-inverse, #FFFFFF)",
  "&:hover": {
    background: "var(--ds-background-danger-bold-hovered, #AE2E24)"
  },
  "&:active": {
    background: "var(--ds-background-danger-bold-pressed, #5D1F1A)"
  },
  '&[data-has-overlay="true"]:not([disabled]):hover': {
    background: "var(--ds-background-danger-bold, #C9372C)"
  }
};
var selectedStyles = {
  background: "var(--ds-background-selected, #E9F2FF)",
  color: "var(--ds-text-selected, #0C66E4)",
  "&:not([disabled])::after": _objectSpread3(_objectSpread3({}, defaultAfterStyles), {}, {
    content: '""',
    borderColor: "var(--ds-border-selected, #0C66E4)"
  })
};
var hasOverlayStyles = {
  '&[data-has-overlay="true"]': {
    cursor: "default",
    textDecoration: "none"
  }
};
function getColor(_ref) {
  var group = _ref.group, key = _ref.key, mode = _ref.mode;
  var rule = group[key] || group.default;
  return rule[mode];
}
function getColors(_ref2) {
  var appearance = _ref2.appearance, key = _ref2.key, mode = _ref2.mode;
  return {
    background: getColor({
      group: colors_default.background[appearance],
      key,
      mode
    }),
    // Needing to add !important to overcome specificity issue caused by deprecated AtlaskitThemeProvider
    color: "".concat(getColor({
      group: colors_default.color[appearance],
      key,
      mode
    }), " !important")
  };
}
function getCss(_ref3) {
  var appearance = _ref3.appearance, spacing = _ref3.spacing, mode = _ref3.mode, isSelected = _ref3.isSelected, shouldFitContainer = _ref3.shouldFitContainer, isOnlySingleIcon = _ref3.isOnlySingleIcon;
  var baseColors = getColors({
    appearance,
    key: isSelected ? "selected" : "default",
    mode
  });
  return _objectSpread3(_objectSpread3(_objectSpread3(_objectSpread3({
    // 0px margin added to css-reset
    alignItems: "baseline",
    borderWidth: 0,
    borderRadius: "var(--ds-radius-small, 3px)",
    boxSizing: "border-box",
    display: "inline-flex",
    fontSize: "inherit",
    fontStyle: "normal",
    // Chrome recently changed button so that they use 'arial' as the font family
    fontFamily: "inherit",
    fontWeight: "var(--ds-font-weight-medium, 500)",
    // margin for button has been applied to css reset
    maxWidth: "100%",
    // Needed to position overlay
    position: "relative",
    textAlign: "center",
    textDecoration: "none",
    transition: "background 0.1s ease-out, box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38)",
    whiteSpace: "nowrap"
  }, !fg("platform-component-visual-refresh") && baseColors), {}, {
    cursor: "pointer",
    height: heights[spacing],
    lineHeight: lineHeights[spacing],
    padding: isOnlySingleIcon ? singleIconPadding[spacing] : padding[spacing],
    verticalAlign: verticalAlign[spacing],
    width: shouldFitContainer ? "100%" : "auto",
    // justifyContent required for shouldFitContainer buttons with an icon inside
    justifyContent: "center"
  }, !fg("platform-component-visual-refresh") && _objectSpread3(_objectSpread3({
    // Disabling visited styles (just using the base colors)
    "&:visited": _objectSpread3({}, baseColors),
    "&:hover": _objectSpread3(_objectSpread3({}, getColors({
      appearance,
      key: isSelected ? "selected" : "hover",
      mode
    })), {}, {
      textDecoration: !isSelected && (appearance === "link" || appearance === "subtle-link") ? "underline" : "inherit",
      // background, box-shadow
      transitionDuration: "0s, 0.15s"
    }),
    // giving active styles preference by listing them after focus
    "&:active": _objectSpread3(_objectSpread3({}, getColors({
      appearance,
      key: isSelected ? "selected" : "active",
      mode
    })), {}, {
      // background, box-shadow
      transitionDuration: "0s, 0s"
    }),
    // preventDefault prevents regular active styles from applying in Firefox
    '&[data-firefox-is-active="true"]': _objectSpread3(_objectSpread3({}, getColors({
      appearance,
      key: isSelected ? "selected" : "active",
      mode
    })), {}, {
      // background, box-shadow
      transitionDuration: "0s, 0s"
    }),
    // Giving disabled styles preference over active by listing them after.
    // Not using '&:disabled' because :disabled is not a valid state for all element types
    // so we are targeting the attribute
    // Attributes have the same specificity a pseudo classes so we are overriding :disabled here
    "&[disabled]": _objectSpread3(_objectSpread3({}, getColors({
      appearance,
      key: "disabled",
      mode
    })), {}, {
      cursor: "not-allowed",
      textDecoration: "none"
    })
  }, hasOverlayStyles), {}, {
    // disabling hover and active color changes when there is an overlay, but the button is not disabled
    '&[data-has-overlay="true"]:not([disabled]):hover, &[data-has-overlay="true"]:not([disabled]):active': _objectSpread3({}, getColors({
      appearance,
      key: isSelected ? "selected" : "default",
      mode
    }))
  })), fg("platform-component-visual-refresh") && (isSelected ? selectedStyles : _objectSpread3(_objectSpread3(_objectSpread3(_objectSpread3(_objectSpread3(_objectSpread3(_objectSpread3(_objectSpread3({}, appearance === "default" && defaultStyles), appearance === "primary" && primaryStyles), appearance === "link" && linkStyles), appearance === "subtle" && subtleStyles), appearance === "subtle-link" && subtleLinkStyles), appearance === "warning" && warningStyles), appearance === "danger" && dangerStyles), {}, {
    "&[disabled]": {
      color: "var(--ds-text-disabled, #091E424F)",
      backgroundColor: HAS_DISABLED_BACKGROUND.includes(appearance) ? "var(--ds-background-disabled, #091E4208)" : "transparent",
      cursor: "not-allowed",
      textDecoration: "none",
      "&:hovered": {
        backgroundColor: HAS_DISABLED_BACKGROUND.includes(appearance) ? "var(--ds-background-disabled, #091E4208)" : "transparent"
      },
      "&:active": {
        backgroundColor: HAS_DISABLED_BACKGROUND.includes(appearance) ? "var(--ds-background-disabled, #091E4208)" : "transparent"
      }
    }
  }, hasOverlayStyles))), {}, {
    "&::-moz-focus-inner": {
      border: 0,
      margin: 0,
      padding: 0
    }
  });
}
function getIconStyle(_ref4) {
  var spacing = _ref4.spacing;
  return css({
    display: "flex",
    // icon size cannot grow and shrink
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    margin: spacing === "none" ? 0 : innerMargin.icon,
    flexGrow: 0,
    flexShrink: 0,
    alignSelf: "center",
    // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
    fontSize: 0,
    // eslint-disable-next-line @atlaskit/design-system/use-tokens-typography
    lineHeight: 0,
    userSelect: "none"
  });
}
function getContentStyle(_ref5) {
  var spacing = _ref5.spacing;
  return css({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    margin: spacing === "none" ? 0 : innerMargin.content,
    // content can grow and shrink
    flexGrow: 1,
    flexShrink: 1,
    // ellipsis for overflow text
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  });
}
function getFadingCss(_ref6) {
  var hasOverlay = _ref6.hasOverlay;
  return css({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-values -- Ignored via go/DSP-18766
    opacity: hasOverlay ? 0 : 1,
    transition: "opacity 0.3s"
  });
}
var overlayCss = {
  // stretching to full width / height of button
  // this is important as we need it to still block
  // event if clicking in the button's own padding
  position: "absolute",
  left: 0,
  top: 0,
  right: 0,
  bottom: 0,
  // Putting all children in the center
  display: "flex",
  justifyContent: "center",
  alignItems: "center"
};

// node_modules/@atlaskit/button/dist/esm/old-button/shared/get-if-visually-hidden-children.js
var import_react15 = __toESM(require_react());
var getIfVisuallyHiddenChildren = function getIfVisuallyHiddenChildren2(children) {
  return children && (0, import_react15.isValidElement)(children) && children.type === visually_hidden_default;
};

// node_modules/@atlaskit/button/dist/esm/old-button/shared/button-base.js
var _excluded5 = ["analyticsContext", "appearance", "autoFocus", "buttonCss", "children", "className", "href", "component", "iconAfter", "iconBefore", "interactionName", "isDisabled", "isSelected", "onBlur", "onClick", "onFocus", "onMouseDown", "overlay", "shouldFitContainer", "spacing", "tabIndex", "type", "testId"];
var noPointerEventsOnChildrenCss = {
  "> *": {
    pointerEvents: "none"
  }
};
var iconBeforeSpacingFixStyle = css({
  "--ds--button--new-icon-padding-end": "var(--ds-space-025, 2px)",
  "--ds--button--new-icon-padding-start": "var(--ds-space-050, 4px)",
  marginInlineStart: "var(--ds-space-negative-025, -2px)"
});
var iconAfterSpacingFixStyle = css({
  "--ds--button--new-icon-padding-end": "var(--ds-space-050, 4px)",
  "--ds--button--new-icon-padding-start": "var(--ds-space-025, 2px)",
  marginInlineEnd: "var(--ds-space-negative-025, -2px)"
});
var getSpacingFix = function getSpacingFix2(children, spacingStyles) {
  if (!children || getIfVisuallyHiddenChildren(children)) {
    return null;
  }
  return spacingStyles;
};
var getChildren = function getChildren2(children, childrenStyles) {
  if (getIfVisuallyHiddenChildren(children)) {
    return children;
  }
  return children ? jsx("span", {
    css: childrenStyles
  }, children) : null;
};
var ButtonBase = import_react16.default.forwardRef(function ButtonBase2(props, ref) {
  var analyticsContext = props.analyticsContext, _props$appearance = props.appearance, appearance = _props$appearance === void 0 ? "default" : _props$appearance, _props$autoFocus = props.autoFocus, autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus, buttonCss = props.buttonCss, children = props.children, className = props.className, href = props.href, _props$component = props.component, Component = _props$component === void 0 ? href ? "a" : "button" : _props$component, iconAfter = props.iconAfter, iconBefore = props.iconBefore, interactionName = props.interactionName, _props$isDisabled = props.isDisabled, isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled, _props$isSelected = props.isSelected, isSelected = _props$isSelected === void 0 ? false : _props$isSelected, onBlur = props.onBlur, _props$onClick = props.onClick, providedOnClick = _props$onClick === void 0 ? noop : _props$onClick, onFocus = props.onFocus, _props$onMouseDown = props.onMouseDown, providedOnMouseDown = _props$onMouseDown === void 0 ? noop : _props$onMouseDown, overlay = props.overlay, shouldFitContainer = props.shouldFitContainer, _props$spacing = props.spacing, spacing = _props$spacing === void 0 ? "default" : _props$spacing, _props$tabIndex = props.tabIndex, tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex, _props$type = props.type, type = _props$type === void 0 ? !href ? "button" : void 0 : _props$type, testId = props.testId, rest = _objectWithoutProperties(props, _excluded5);
  var ourRef = (0, import_react16.useRef)();
  var setRef = (0, import_react16.useCallback)(function(node) {
    ourRef.current = node;
    if (ref == null) {
      return;
    }
    if (typeof ref === "function") {
      ref(node);
      return;
    }
    ref.current = node;
  }, [ourRef, ref]);
  useAutoFocus(ourRef, autoFocus);
  var interactionContext = (0, import_react16.useContext)(esm_default);
  var handleClick = (0, import_react16.useCallback)(function(e, analyticsEvent) {
    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);
    providedOnClick(e, analyticsEvent);
  }, [providedOnClick, interactionContext, interactionName]);
  var onClick = usePlatformLeafEventHandler({
    fn: handleClick,
    action: "clicked",
    componentName: "button",
    packageName: "@atlaskit/button",
    packageVersion: "0.0.0-development",
    analyticsData: analyticsContext
  });
  var onMouseDown = (0, import_react16.useCallback)(function(event) {
    event.preventDefault();
    providedOnMouseDown(event);
  }, [providedOnMouseDown]);
  (0, import_react16.useEffect)(function() {
    var el = ourRef.current;
    if (isDisabled && el && el === document.activeElement) {
      el.blur();
    }
  }, [isDisabled]);
  var hasOverlay = Boolean(overlay);
  var fadeStyles = css(getFadingCss({
    hasOverlay
  }));
  var isInteractive = !isDisabled && !hasOverlay;
  var spinnerHackCss = {};
  if (isSelected || isDisabled || appearance === "warning") {
    spinnerHackCss = {
      "[data-theme] & circle": {
        stroke: "".concat(isSelected || isDisabled ? "var(--ds-icon-subtle, ".concat(N500, ")") : "var(--ds-icon-warning-inverse, ".concat(N500, ")"), " !important")
      }
    };
  }
  return jsx(focus_ring_default, null, jsx(Component, _extends({}, rest, {
    ref: setRef,
    className,
    css: [buttonCss, isInteractive ? null : noPointerEventsOnChildrenCss],
    "data-has-overlay": hasOverlay ? true : void 0,
    "data-testid": testId,
    disabled: isDisabled,
    href: isInteractive ? href : void 0,
    onBlur,
    onClick,
    onFocus,
    onMouseDown,
    tabIndex: isDisabled ? -1 : tabIndex,
    type
  }, blockEvents({
    isInteractive
  })), iconBefore ? jsx("span", {
    css: [
      fadeStyles,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      getIconStyle({
        spacing
      }),
      getSpacingFix(children, iconBeforeSpacingFixStyle)
    ]
  }, iconBefore) : null, getChildren(children, [fadeStyles, getContentStyle({
    spacing
  })]), iconAfter ? jsx("span", {
    css: [
      fadeStyles,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      getIconStyle({
        spacing
      }),
      getSpacingFix(children, iconAfterSpacingFixStyle)
    ]
  }, iconAfter) : null, overlay ? jsx("span", {
    css: [overlayCss, spinnerHackCss]
  }, overlay) : null));
});
var button_base_default = ButtonBase;

// node_modules/@atlaskit/button/dist/esm/old-button/shared/get-is-only-single-icon.js
function getIsOnlySingleIcon(_ref) {
  var children = _ref.children, iconBefore = _ref.iconBefore, iconAfter = _ref.iconAfter;
  if (getIfVisuallyHiddenChildren(children)) {
    return true;
  }
  if (children) {
    return false;
  }
  if (iconBefore && !iconAfter) {
    return true;
  }
  if (!iconBefore && iconAfter) {
    return true;
  }
  return false;
}

// node_modules/@atlaskit/button/dist/esm/old-button/button.js
var _excluded6 = ["appearance", "children", "iconBefore", "iconAfter", "isSelected", "onMouseDown", "onMouseUp", "shouldFitContainer", "spacing"];
var isFirefox = typeof navigator !== "undefined" && navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
var Button = import_react18.default.memo(import_react18.default.forwardRef(function Button2(_ref, ref) {
  var _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "default" : _ref$appearance, children = _ref.children, iconBefore = _ref.iconBefore, iconAfter = _ref.iconAfter, _ref$isSelected = _ref.isSelected, isSelected = _ref$isSelected === void 0 ? false : _ref$isSelected, _ref$onMouseDown = _ref.onMouseDown, providedOnMouseDown = _ref$onMouseDown === void 0 ? noop : _ref$onMouseDown, _ref$onMouseUp = _ref.onMouseUp, providedOnMouseUp = _ref$onMouseUp === void 0 ? noop : _ref$onMouseUp, _ref$shouldFitContain = _ref.shouldFitContainer, shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? "default" : _ref$spacing, rest = _objectWithoutProperties(_ref, _excluded6);
  var _useGlobalTheme = useTheme(), mode = _useGlobalTheme.mode;
  var isOnlySingleIcon = getIsOnlySingleIcon({
    children,
    iconBefore,
    iconAfter
  });
  var _useState = (0, import_react18.useState)(false), _useState2 = _slicedToArray(_useState, 2), isActive = _useState2[0], setIsActive = _useState2[1];
  var onMouseDown = (0, import_react18.useCallback)(function(event) {
    providedOnMouseDown(event);
    if (isFirefox) {
      setIsActive(true);
    }
  }, [providedOnMouseDown, setIsActive]);
  var onMouseUp = (0, import_react18.useCallback)(function(event) {
    providedOnMouseUp(event);
    if (isFirefox) {
      setIsActive(false);
    }
  }, [providedOnMouseUp, setIsActive]);
  var buttonCss = (0, import_react18.useMemo)(function() {
    return getCss({
      appearance,
      spacing,
      mode,
      isSelected,
      shouldFitContainer,
      isOnlySingleIcon
    });
  }, [appearance, spacing, mode, isSelected, shouldFitContainer, isOnlySingleIcon]);
  return import_react18.default.createElement(button_base_default, _extends({}, rest, {
    ref,
    appearance,
    buttonCss,
    children,
    "data-firefox-is-active": isActive ? true : void 0,
    iconAfter,
    iconBefore,
    isSelected,
    onMouseDown,
    onMouseUp,
    spacing
  }));
}));
Button.displayName = "Button";
var button_default = Button;

// node_modules/@atlaskit/pagination/dist/esm/internal/components/navigator.js
function Navigator(props) {
  return import_react19.default.createElement(button_default, {
    "aria-label": props["aria-label"],
    isDisabled: props.isDisabled,
    iconBefore: props.iconBefore,
    testId: props.testId,
    onClick: props.onClick,
    component: props.component,
    appearance: "subtle"
  });
}

// node_modules/@atlaskit/pagination/dist/esm/internal/components/page.js
init_extends();
var import_react20 = __toESM(require_react());
function Page(props) {
  return import_react20.default.createElement(button_default, _extends({}, props, {
    appearance: "subtle"
  }));
}

// node_modules/@atlaskit/pagination/dist/esm/internal/components/render-ellipsis.js
init_runtime();
var import_react21 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/pagination/dist/esm/internal/components/render-ellipsis.compiled.css";
var styles = {
  container: "_1e0c1txw _kqswh2mm"
};
function renderEllipsis(_ref) {
  var key = _ref.key, testId = _ref.testId, from = _ref.from, to = _ref.to;
  return import_react21.default.createElement(box_default, {
    as: "li",
    testId,
    key,
    xcss: styles.container,
    paddingInline: "space.100"
  }, import_react21.default.createElement(text_default, {
    testId: testId && "".concat(testId, "-text")
  }, import_react21.default.createElement(visually_hidden_default, null, "Skipped pages from ", from, " to ", to), "…"));
}

// node_modules/@atlaskit/pagination/dist/esm/internal/constants.js
var emptyObject = {};

// node_modules/@atlaskit/pagination/dist/esm/internal/utils/collapse-range.js
var collapseRange = function collapseRange2(pages, current, _ref, testId) {
  var max = _ref.max, ellipsis = _ref.ellipsis, transform = _ref.transform;
  var total = pages.length;
  var needEllipsis = total > max;
  var hasStartEllipsis = needEllipsis && max - 4 < current;
  var hasEndEllipsis = needEllipsis && current < total - max + 3;
  var getPageComponents = memoizeOne(function() {
    var startIndex = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
    var lastIndex = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : total;
    return pages.slice(startIndex, lastIndex).map(function(page, index) {
      return transform(page, startIndex + index, testId);
    });
  });
  if (!needEllipsis) {
    return getPageComponents(0, total);
  }
  if (hasStartEllipsis && !hasEndEllipsis) {
    var _pageCount = max - 2;
    return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({
      key: "ellipsis-1",
      testId: testId && "".concat(testId, "-ellipsis"),
      from: 2,
      to: total - _pageCount
    })], _toConsumableArray(getPageComponents(total - _pageCount)));
  }
  if (!hasStartEllipsis && hasEndEllipsis) {
    var _pageCount2 = max - 2;
    return [].concat(_toConsumableArray(getPageComponents(0, _pageCount2)), [ellipsis({
      key: "ellipsis-1",
      testId: testId && "".concat(testId, "-ellipsis"),
      from: _pageCount2 + 1,
      to: total - 1
    })], _toConsumableArray(getPageComponents(total - 1)));
  }
  var pageCount = max - 4;
  return [].concat(_toConsumableArray(getPageComponents(0, 1)), [ellipsis({
    key: "ellipsis-1",
    testId: testId && "".concat(testId, "-ellipsis"),
    from: 2,
    to: current - Math.floor(pageCount / 2)
  })], _toConsumableArray(getPageComponents(current - Math.floor(pageCount / 2), current + pageCount - 1)), [ellipsis({
    key: "ellipsis-2",
    testId: testId && "".concat(testId, "-ellipsis"),
    from: current + 3,
    to: total - 1
  })], _toConsumableArray(getPageComponents(total - 1)));
};
var collapse_range_default = collapseRange;

// node_modules/@atlaskit/pagination/dist/esm/pagination.js
function ownKeys4(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread4(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys4(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys4(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var styles2 = {
  paginationMenu: "_ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _19pkze3t _2hwxze3t _otyrze3t _18u0ze3t",
  paginationMenuItem: "_1pfhze3t _ect41gqc",
  navigatorIconWrapper: "_18zr12x7"
};
var analyticsAttributes = {
  componentName: "pagination",
  packageName: "@atlaskit/pagination",
  packageVersion: "16.1.11"
};
function NavigatorIcon(_ref) {
  var chevronDirection = _ref.chevronDirection;
  var Chevron = chevronDirection === "left" ? import_chevron_left_chevron_left_large.default : import_chevron_right_chevron_right_large.default;
  return import_react22.default.createElement(box_default, {
    as: "span",
    xcss: styles2.navigatorIconWrapper
  }, import_react22.default.createElement(Chevron, {
    label: "",
    LEGACY_margin: "0 ".concat("var(--ds-space-negative-075, -6px)"),
    color: "currentColor",
    size: "small"
  }));
}
function InnerPagination(_ref2, ref) {
  var _ref2$components = _ref2.components, components = _ref2$components === void 0 ? emptyObject : _ref2$components, _ref2$defaultSelected = _ref2.defaultSelectedIndex, defaultSelectedIndex = _ref2$defaultSelected === void 0 ? 0 : _ref2$defaultSelected, selectedIndex = _ref2.selectedIndex, _ref2$label = _ref2.label, label = _ref2$label === void 0 ? "pagination" : _ref2$label, _ref2$pageLabel = _ref2.pageLabel, pageLabel = _ref2$pageLabel === void 0 ? "page" : _ref2$pageLabel, _ref2$previousLabel = _ref2.previousLabel, previousLabel = _ref2$previousLabel === void 0 ? "previous" : _ref2$previousLabel, _ref2$nextLabel = _ref2.nextLabel, nextLabel = _ref2$nextLabel === void 0 ? "next" : _ref2$nextLabel, _ref2$style = _ref2.style, style = _ref2$style === void 0 ? emptyObject : _ref2$style, _ref2$max = _ref2.max, max = _ref2$max === void 0 ? 7 : _ref2$max, _ref2$onChange = _ref2.onChange, onChange = _ref2$onChange === void 0 ? noop : _ref2$onChange, pages = _ref2.pages, getPageLabel = _ref2.getPageLabel, _ref2$renderEllipsis = _ref2.renderEllipsis, renderEllipsis2 = _ref2$renderEllipsis === void 0 ? renderEllipsis : _ref2$renderEllipsis, analyticsContext = _ref2.analyticsContext, testId = _ref2.testId, isDisabled = _ref2.isDisabled;
  var _useControlled = useControlled(selectedIndex, function() {
    return defaultSelectedIndex || 0;
  }), _useControlled2 = _slicedToArray(_useControlled, 2), selectedIndexValue = _useControlled2[0], setSelectedIndexValue = _useControlled2[1];
  var onChangeWithAnalytics = usePlatformLeafEventHandler(_objectSpread4({
    fn: function fn(value, analyticsEvent) {
      var event = value.event, selectedPageIndex = value.selectedPageIndex;
      if (selectedIndex === void 0) {
        setSelectedIndexValue(selectedPageIndex);
      }
      if (onChange) {
        onChange(event, pages[selectedPageIndex], analyticsEvent);
      }
    },
    action: "changed",
    actionSubject: "pageNumber",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var transform = function transform2(page, currPageIndex, testId2) {
    var selectedPage = pages[selectedIndexValue];
    var pageIndexLabel = "".concat(pageLabel, " ").concat(getPageLabel ? getPageLabel(page, currPageIndex) : page);
    var isCurrentPage = page === selectedPage;
    return import_react22.default.createElement(inline_default, {
      as: "li",
      xcss: styles2.paginationMenuItem,
      key: "page-".concat(getPageLabel ? getPageLabel(page, currPageIndex) : currPageIndex)
    }, import_react22.default.createElement(Page, {
      component: components.Page,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event,
          selectedPageIndex: currPageIndex
        });
      },
      "aria-current": isCurrentPage ? "page" : void 0,
      "aria-label": pageIndexLabel,
      isSelected: isCurrentPage,
      isDisabled,
      page,
      testId: testId2 && "".concat(testId2, "--").concat(isCurrentPage ? "current-" : "", "page-").concat(currPageIndex)
    }, getPageLabel ? getPageLabel(page, currPageIndex) : page));
  };
  return (
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    import_react22.default.createElement(box_default, {
      testId,
      style,
      ref,
      "aria-label": label,
      as: "nav"
    }, import_react22.default.createElement(inline_default, {
      space: "space.0",
      alignBlock: "center"
    }, import_react22.default.createElement(Navigator, {
      key: "left-navigator",
      component: components.Previous,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event,
          selectedPageIndex: selectedIndexValue - 1
        });
      },
      isDisabled: isDisabled || selectedIndexValue === 0,
      iconBefore: import_react22.default.createElement(NavigatorIcon, {
        chevronDirection: "left"
      }),
      "aria-label": previousLabel,
      testId: testId && "".concat(testId, "--left-navigator")
    }), import_react22.default.createElement(inline_default, {
      space: "space.0",
      alignBlock: "baseline",
      as: "ul",
      xcss: styles2.paginationMenu
    }, collapse_range_default(pages, selectedIndexValue, {
      max,
      ellipsis: renderEllipsis2,
      transform
    }, testId)), import_react22.default.createElement(Navigator, {
      key: "right-navigator",
      component: components.Next,
      onClick: function onClick(event) {
        return onChangeWithAnalytics({
          event,
          selectedPageIndex: selectedIndexValue + 1
        });
      },
      isDisabled: isDisabled || selectedIndexValue === pages.length - 1,
      iconBefore: import_react22.default.createElement(NavigatorIcon, {
        chevronDirection: "right"
      }),
      "aria-label": nextLabel,
      testId: testId && "".concat(testId, "--right-navigator")
    })))
  );
}
var Pagination = (0, import_react22.memo)((0, import_react22.forwardRef)(InnerPagination));
var pagination_default = Pagination;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/managed-pagination.js
function _callSuper5(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct5() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct5() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct5 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var ManagedPagination = function(_React$Component) {
  function ManagedPagination2() {
    var _this;
    _classCallCheck(this, ManagedPagination2);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper5(this, ManagedPagination2, [].concat(args));
    _defineProperty(_this, "onChange", function(_event, newValue, analyticsEvent) {
      _this.props.onChange(newValue, analyticsEvent);
    });
    return _this;
  }
  _inherits(ManagedPagination2, _React$Component);
  return _createClass(ManagedPagination2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, total = _this$props.total, _this$props$value = _this$props.value, value = _this$props$value === void 0 ? 1 : _this$props$value, i18n = _this$props.i18n, testId = _this$props.testId, isDisabled = _this$props.isDisabled;
      var pages = _toConsumableArray(Array(total)).map(function(_, index) {
        return index + 1;
      });
      var selectedIndex = value - 1;
      return import_react23.default.createElement(pagination_default, {
        selectedIndex,
        isDisabled,
        label: i18n === null || i18n === void 0 ? void 0 : i18n.label,
        nextLabel: i18n === null || i18n === void 0 ? void 0 : i18n.next,
        previousLabel: i18n === null || i18n === void 0 ? void 0 : i18n.prev,
        pageLabel: i18n === null || i18n === void 0 ? void 0 : i18n.pageLabel,
        onChange: this.onChange,
        pages,
        testId: testId && "".concat(testId, "--pagination")
      });
    }
  }]);
}(import_react23.default.Component);

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react55 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/dynamic-table/dist/esm/styled/table-head.js
init_defineProperty();
init_extends();
init_objectWithoutProperties();
var React18 = __toESM(require_react());
init_runtime();
var import_react24 = __toESM(require_react());
init_esm();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/styled/table-head.compiled.css";
var _excluded7 = ["isRanking", "testId"];
var _excluded23 = ["width", "children", "isSortable", "sortOrder", "isFixedSize", "shouldTruncate", "onClick", "style", "testId"];
function ownKeys5(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread5(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys5(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys5(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var CSS_VAR_TEXT_COLOR = "--local-dynamic-table-text-color";
var Head = function Head2(_ref) {
  var isRanking = _ref.isRanking, testId = _ref.testId, props = _objectWithoutProperties(_ref, _excluded7);
  return React18.createElement("thead", _extends({
    "data-testid": testId
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, props, {
    className: ax(["_179rglyw", isRanking && "_1e0c1ule"])
  }));
};
var HeadCell = (0, import_react24.forwardRef)(function(_ref2, ref) {
  var width = _ref2.width, children = _ref2.children, isSortable = _ref2.isSortable, sortOrder = _ref2.sortOrder, isFixedSize = _ref2.isFixedSize, shouldTruncate = _ref2.shouldTruncate, onClick = _ref2.onClick, style = _ref2.style, testId = _ref2.testId, rest = _objectWithoutProperties(_ref2, _excluded23);
  var mergedStyles = _objectSpread5(_objectSpread5(_objectSpread5({}, style), width && getTruncationStyleVars({
    width
  })), {}, _defineProperty({}, CSS_VAR_TEXT_COLOR, "var(--ds-text-subtlest, ".concat(N300, ")")));
  var isASC = sortOrder === ASC;
  var isDESC = sortOrder === DESC;
  var getFormattedSortOrder = function getFormattedSortOrder2() {
    if (isASC) {
      return "ascending";
    } else if (isDESC) {
      return "descending";
    }
  };
  var Component = children ? "th" : "td";
  var isVisuallyRefreshed = fg("platform-component-visual-refresh");
  return React18.createElement(Component, _extends({
    "aria-sort": getFormattedSortOrder(),
    onClick: !isVisuallyRefreshed ? onClick : void 0,
    ref,
    "data-testid": testId
  }, rest, {
    className: ax(["_izbqglyw _h7alglyw _85i51b66 _1q511b66 _y4tiu2gc _bozgu2gc _y3gn1e5h _1s37ze3t _uupyze3t", isVisuallyRefreshed ? "_11c8dcr7 _179rralu _mqm2glyw _kqswh2mm _syaz12fi _k48pmoej _y3gn1e5h _s7n4nkob _1ygbuwsq" : "_11c8dcr7 _179rralu _mqm2glyw _t51zglyw _191wglyw _vchhusvi _kqswh2mm _syaz12fi _k48pmoej _y3gn1e5h _s7n4jp4b _1ygbuwsq", !isVisuallyRefreshed && onClick && "_irr3bfnf _d0altlke", "_1bsb8a2a", isFixedSize && shouldTruncate && "_1bto1l2s _o5721q9c", isFixedSize && "_1reo15vq _18m915vq", !isVisuallyRefreshed && isSortable && "_173zglyw _pw6dglyw _1xgk1j28 _1wfn1j28 _y9yonqa1 _997wnqa1 _sklb1l7b _1j091l7b _19w61ule _1w611ule _1hvvidpf _n56nidpf _wyc4idpf _1d4oidpf _no7mstnw _qh32stnw _4b5mb3bt _hn3bb3bt _14gsx0bf _cigmx0bf _c77k1f6e _qzvtu2gc _f4731f6e _1fpyidpf _a04fh2mm _xv14glyw _58ej1kw7 _1ay31kw7 _mdbq1kw7 _10pp1kw7 _1yw3ze3t _n2fdze3t _8607ze3t _szhwze3t _1g2wwc43 _ze9fwc43 _1lcgnqa1 _at5qnqa1 _o4d71l7b _npl51l7b _1rp11onz _1iornqa1 _oi051l7b _1ehx1onz _19t8nqa1 _1bog1l7b", !isVisuallyRefreshed && isASC && "_c77k2wk4 _142s94yt", !isVisuallyRefreshed && isDESC && "_f4732wk4 _17x894yt"]),
    style: _objectSpread5(_objectSpread5({}, mergedStyles), {}, {
      "--_k02y3n": cssCustomPropertyValue("2px solid ".concat("var(--ds-border, ".concat(N40, ")"))),
      "--_17ckjys": cssCustomPropertyValue("var(--ds-text-subtle, ".concat("var(".concat(CSS_VAR_TEXT_COLOR, ")"), ")")),
      "--_jz8ahf": cssCustomPropertyValue("solid 2px ".concat("var(--ds-border-focused, ".concat(B100, ")"))),
      "--_6j4ewu": cssCustomPropertyValue("var(--ds-background-neutral-hovered, ".concat(N30A, ")")),
      "--_1rdacuj": cssCustomPropertyValue("3px solid ".concat("var(--ds-icon-disabled, ".concat(N40, ")"))),
      "--_1qca9zt": cssCustomPropertyValue("3px solid ".concat("var(--ds-icon-subtle, ".concat(N300, ")")))
    })
  }), children);
});

// node_modules/@atlaskit/dynamic-table/dist/esm/components/rankable/table-head-cell.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react52 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head-cell.js
init_extends();
init_slicedToArray();
init_objectWithoutProperties();
init_runtime();
var import_react51 = __toESM(require_react());
var import_arrow_down = __toESM(require_arrow_down());
var import_arrow_up = __toESM(require_arrow_up());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head-cell.compiled.css";

// node_modules/@atlaskit/tooltip/dist/esm/tooltip.js
init_extends();
init_slicedToArray();
init_defineProperty();
var import_react50 = __toESM(require_react());
var import_bind_event_listener4 = __toESM(require_dist());

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-close-on-escape-press.js
var import_react25 = __toESM(require_react());
var import_bind_event_listener = __toESM(require_dist());
init_esm();

// node_modules/@atlaskit/ds-lib/dist/esm/utils/keycodes.js
var ESCAPE = "Escape";

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-close-on-escape-press.js
function useCloseOnEscapePress(_ref) {
  var onClose = _ref.onClose, isDisabled = _ref.isDisabled;
  var escapePressed = (0, import_react25.useRef)(false);
  var onKeyDown = (0, import_react25.useCallback)(function(e) {
    if (isDisabled || escapePressed.current || e.key !== ESCAPE) {
      return;
    }
    escapePressed.current = true;
    onClose(e);
  }, [onClose, isDisabled]);
  var onKeyUp = (0, import_react25.useCallback)(function() {
    escapePressed.current = false;
  }, []);
  (0, import_react25.useEffect)(function() {
    if (isDisabled && fg("platform_only_attach_escape_handler_on_view")) {
      return;
    }
    return (0, import_bind_event_listener.bindAll)(document, [{
      type: "keydown",
      listener: onKeyDown
    }, {
      type: "keyup",
      listener: onKeyUp
    }], {
      capture: false
    });
  }, [onKeyDown, onKeyUp, isDisabled]);
}

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-stable-ref.js
var import_react26 = __toESM(require_react());
function useStableRef(value) {
  var ref = (0, import_react26.useRef)(value);
  (0, import_react26.useEffect)(function() {
    ref.current = value;
  }, [value]);
  return ref;
}

// node_modules/@atlaskit/motion/dist/esm/utils/durations.js
var durations = {
  none: 0,
  small: 100,
  medium: 350,
  large: 700
};
var EXITING_MOTION_MULTIPLIER = 0.5;
var exitingDurations = {
  none: durations.none,
  small: durations.small * EXITING_MOTION_MULTIPLIER,
  medium: durations.medium * EXITING_MOTION_MULTIPLIER,
  large: durations.large * EXITING_MOTION_MULTIPLIER
};

// node_modules/@atlaskit/motion/dist/esm/utils/accessibility.js
init_slicedToArray();
var import_react27 = __toESM(require_react());
var import_bind_event_listener2 = __toESM(require_dist());
var isMatchMediaAvailable = function isMatchMediaAvailable2() {
  return typeof window !== "undefined" && "matchMedia" in window;
};
var isReducedMotion = function isReducedMotion2() {
  if (!isMatchMediaAvailable()) {
    return false;
  }
  var _window$matchMedia = window.matchMedia("(prefers-reduced-motion: reduce)"), matches = _window$matchMedia.matches;
  return matches;
};

// node_modules/@atlaskit/motion/dist/esm/entering/fade-in.js
var import_react34 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/entering/keyframes-motion.js
init_slicedToArray();
var import_react33 = __toESM(require_react());
init_runtime();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/motion/dist/esm/entering/keyframes-motion.compiled.css";

// node_modules/@atlaskit/motion/dist/esm/utils/timer-hooks.js
var import_react28 = __toESM(require_react());
var getHookDeps = function getHookDeps2(opts) {
  switch (opts.cleanup) {
    case "next-effect":
      return void 0;
    case "unmount":
    default:
      return [];
  }
};
var useSetTimeout = function useSetTimeout2() {
  var opts = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
    cleanup: "unmount"
  };
  var timeouts = (0, import_react28.useRef)([]);
  (0, import_react28.useEffect)(function() {
    return function() {
      if (timeouts.current.length) {
        timeouts.current.forEach(function(id) {
          return clearTimeout(id);
        });
        timeouts.current = [];
      }
    };
  }, getHookDeps(opts));
  return (0, import_react28.useCallback)(function(handler, timeout) {
    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }
    var id = setTimeout.apply(void 0, [function() {
      timeouts.current = timeouts.current.filter(function(timeoutId) {
        return timeoutId !== id;
      });
      handler();
    }, timeout].concat(args));
    timeouts.current.push(id);
  }, []);
};

// node_modules/@atlaskit/motion/dist/esm/entering/exiting-persistence.js
init_slicedToArray();
var import_react29 = __toESM(require_react());
var emptyContext = {
  // Motions will always appear if not inside a exiting persistence component.
  appear: true,
  isExiting: false
};
var ExitingContext = (0, import_react29.createContext)(emptyContext);
var wrapChildWithContextProvider = function wrapChildWithContextProvider2(child) {
  var value = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : emptyContext;
  return import_react29.default.createElement(ExitingContext.Provider, {
    key: "".concat(child.key, "-provider"),
    value
  }, child);
};
var childrenToArray = function childrenToArray2(children) {
  var childrenAsArray = [];
  import_react29.Children.toArray(children).forEach(function(child) {
    if (typeof child !== "boolean" && Boolean(child)) {
      childrenAsArray.push(child);
    }
  });
  return childrenAsArray;
};
var spliceNewElementsIntoPrevious = function spliceNewElementsIntoPrevious2(current, previous) {
  var splicedChildren = previous.concat([]);
  var previousMap = childrenToObj(previous);
  for (var i = 0; i < current.length; i++) {
    var child = current[i];
    var childIsNew = !previousMap[child.key];
    if (childIsNew) {
      splicedChildren.splice(i + 1, 0, child);
    }
  }
  return splicedChildren;
};
var childrenToObj = function childrenToObj2(children) {
  return children.reduce(function(acc, child) {
    acc[child.key] = child;
    return acc;
  }, {});
};
var getMissingKeys = function getMissingKeys2(current, previous) {
  var currentMapKeys = new Set(current.map(function(child) {
    return child.key;
  }));
  var missing = /* @__PURE__ */ new Set();
  for (var i = 0; i < previous.length; i++) {
    var element = previous[i];
    var _key = element.key;
    if (!currentMapKeys.has(_key)) {
      missing.add(_key);
    }
  }
  return missing;
};
var ExitingPersistence = (0, import_react29.memo)(function(_ref) {
  var _ref$appear = _ref.appear, appear = _ref$appear === void 0 ? false : _ref$appear, children = _ref.children, exitThenEnter = _ref.exitThenEnter;
  var _useState = (0, import_react29.useState)([null, children]), _useState2 = _slicedToArray(_useState, 2), stateChildren = _useState2[0], setChildren = _useState2[1];
  var _useState3 = (0, import_react29.useState)([]), _useState4 = _slicedToArray(_useState3, 2), exitingChildren = _useState4[0], setExitingChildren = _useState4[1];
  var _useState5 = (0, import_react29.useState)(function() {
    return {
      appear,
      isExiting: false
    };
  }), _useState6 = _slicedToArray(_useState5, 2), defaultContext = _useState6[0], setDefaultContext = _useState6[1];
  (0, import_react29.useEffect)(function() {
    if (!defaultContext.appear) {
      setDefaultContext({
        appear: true,
        isExiting: false
      });
    }
  }, []);
  if (typeof stateChildren === "boolean") {
    return children;
  }
  var _stateChildren = _slicedToArray(stateChildren, 2), previousChildren = _stateChildren[0], currentChildren = _stateChildren[1];
  var previous = childrenToArray(previousChildren);
  var current = childrenToArray(currentChildren);
  if (currentChildren !== children) {
    setChildren([currentChildren, children]);
  }
  var missingKeys = getMissingKeys(current, previous);
  var isSomeChildRemoved = !!missingKeys.size;
  var visibleChildren = current;
  if (isSomeChildRemoved) {
    visibleChildren = spliceNewElementsIntoPrevious(current, previous);
  }
  if (exitThenEnter) {
    if (exitingChildren.length) {
      visibleChildren = exitingChildren;
    } else {
      var nextExitingChildren = visibleChildren.filter(function(child) {
        return missingKeys.has(child.key);
      });
      if (nextExitingChildren.length) {
        setExitingChildren(nextExitingChildren);
      }
    }
  }
  if (missingKeys.size) {
    visibleChildren = visibleChildren.map(function(child) {
      var isExiting = missingKeys.has(child.key);
      return wrapChildWithContextProvider(child, {
        appear: true,
        isExiting,
        onFinish: isExiting ? function() {
          missingKeys.delete(child.key);
          if (missingKeys.size === 0) {
            setChildren([null, children]);
            setExitingChildren([]);
          }
        } : void 0
      });
    });
  } else {
    visibleChildren = visibleChildren.map(function(child) {
      return wrapChildWithContextProvider(child, defaultContext);
    });
  }
  return visibleChildren;
});
var useExitingPersistence = function useExitingPersistence2() {
  return (0, import_react29.useContext)(ExitingContext);
};
ExitingPersistence.displayName = "ExitingPersistence";
var exiting_persistence_default = ExitingPersistence;

// node_modules/@atlaskit/motion/dist/esm/entering/staggered-entrance.js
init_slicedToArray();
var import_react32 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/utils/use-layout-effect.js
var import_react30 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/utils/use-unique-id.js
var import_react31 = __toESM(require_react());
function useUniqueId() {
  var identifier = (0, import_react31.useRef)("");
  if (!identifier.current) {
    identifier.current = "_" + (Number(String(Math.random()).slice(2)) + Date.now() + Math.round(performance.now())).toString(36);
  }
  return identifier.current;
}

// node_modules/@atlaskit/motion/dist/esm/entering/staggered-entrance.js
var StaggeredEntranceContext = (0, import_react32.createContext)(function() {
  return {
    isReady: true,
    delay: 0,
    ref: noop
  };
});
var useStaggeredEntrance = function useStaggeredEntrance2() {
  var indentifier = useUniqueId();
  var context = (0, import_react32.useContext)(StaggeredEntranceContext);
  return context(indentifier);
};

// node_modules/@atlaskit/motion/dist/esm/entering/keyframes-motion.js
var EnteringMotion = function EnteringMotion2(_ref) {
  var children = _ref.children, animationTimingFunction = _ref.animationTimingFunction, _ref$animationTimingF = _ref.animationTimingFunctionExiting, animationTimingFunctionExiting = _ref$animationTimingF === void 0 ? animationTimingFunction : _ref$animationTimingF, enteringAnimation = _ref.enteringAnimation, _ref$exitingAnimation = _ref.exitingAnimation, exitingAnimation = _ref$exitingAnimation === void 0 ? enteringAnimation : _ref$exitingAnimation, isPaused = _ref.isPaused, onFinishMotion = _ref.onFinish, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? "large" : _ref$duration;
  var staggered = useStaggeredEntrance();
  var _useExitingPersistenc = useExitingPersistence(), isExiting = _useExitingPersistenc.isExiting, onExitFinished = _useExitingPersistenc.onFinish, appear = _useExitingPersistenc.appear;
  var setTimeout2 = useSetTimeout();
  var paused = isPaused || !staggered.isReady;
  var delay = isExiting ? 0 : staggered.delay;
  var state = isExiting ? "exiting" : "entering";
  var _useState = (0, import_react33.useState)(appear), _useState2 = _slicedToArray(_useState, 2), hasAnimationStyles = _useState2[0], setHasAnimationStyles = _useState2[1];
  (0, import_react33.useEffect)(function() {
    var isCancelled = false;
    if (paused) {
      return;
    }
    if (!appear) {
      onFinishMotion && onFinishMotion(state);
      return;
    }
    var onAnimationEnd = function onAnimationEnd2() {
      if (state === "exiting") {
        onExitFinished === null || onExitFinished === void 0 || onExitFinished();
      }
      if (!isCancelled) {
        setHasAnimationStyles(false);
      }
      onFinishMotion === null || onFinishMotion === void 0 || onFinishMotion(state);
    };
    if (isReducedMotion()) {
      onAnimationEnd();
      return;
    }
    setHasAnimationStyles(true);
    setTimeout2(onAnimationEnd, isExiting ? exitingDurations[duration] : durations[duration] + delay);
    return function() {
      isCancelled = true;
    };
  }, [onExitFinished, state, isExiting, duration, delay, paused, setTimeout2]);
  return children({
    ref: staggered.ref,
    // @ts-expect-error: `ax` is not typed correctly
    className: hasAnimationStyles ? ax([ax(["_1o51eoah _1y0co91m _1bumglyw _sedtglyw"]), paused && ax(["_1y0ctrqk"]), duration === "small" && ax(["_5sag1yx9"]), duration === "medium" && ax(["_5sag1ttt"]), duration === "large" && ax(["_5sagpwmj"]), isExiting && duration === "small" && ax(["_5sag14ed"]), isExiting && duration === "medium" && ax(["_5sagluct"]), isExiting && duration === "large" && ax(["_5sag1ttt"]), isExiting && ax(["_ju255cps _1o51q7pw"]), !isExiting && animationTimingFunction === "linear" && ax(["_1pglp3kn"]), !isExiting && animationTimingFunction === "ease-out" && ax(["_1pgldkwg"]), !isExiting && animationTimingFunction === "ease-in" && ax(["_1pgl1nzg"]), !isExiting && animationTimingFunction === "ease-in-40-out" && ax(["_1pgl5y64"]), !isExiting && animationTimingFunction === "ease-in-60-out" && ax(["_1pgl1ddy"]), !isExiting && animationTimingFunction === "ease-in-80-out" && ax(["_1pglannl"]), !isExiting && animationTimingFunction === "ease-in-out" && ax(["_1pgl1fu8"]), isExiting && animationTimingFunction === "linear" && ax(["_1pglp3kn"]), isExiting && animationTimingFunctionExiting === "ease-out" && ax(["_1pgldkwg"]), isExiting && animationTimingFunctionExiting === "ease-in" && ax(["_1pgl1nzg"]), isExiting && animationTimingFunctionExiting === "ease-in-40-out" && ax(["_1pgl5y64"]), isExiting && animationTimingFunctionExiting === "ease-in-60-out" && ax(["_1pgl1ddy"]), isExiting && animationTimingFunctionExiting === "ease-in-80-out" && ax(["_1pglannl"]), isExiting && animationTimingFunctionExiting === "ease-in-out" && ax(["_1pgl1fu8"]), (!isExiting && enteringAnimation === "fade-in" || isExiting && exitingAnimation === "fade-in") && ax(["_j7hq1cgr"]), (!isExiting && enteringAnimation === "fade-out" || isExiting && exitingAnimation === "fade-out") && ax(["_j7hq1lln"]), (!isExiting && enteringAnimation === "zoom-in" || isExiting && exitingAnimation === "zoom-in") && ax(["_j7hqe8p0"]), (!isExiting && enteringAnimation === "zoom-out" || isExiting && exitingAnimation === "zoom-out") && ax(["_j7hqy6ql"]), (!isExiting && enteringAnimation === "slide-in-from-top" || isExiting && exitingAnimation === "slide-in-from-top") && ax(["_j7hqqshu"]), (!isExiting && enteringAnimation === "slide-out-from-top" || isExiting && exitingAnimation === "slide-out-from-top") && ax(["_j7hq7ri4"]), (!isExiting && enteringAnimation === "slide-in-from-right" || isExiting && exitingAnimation === "slide-in-from-right") && ax(["_j7hqdfjr"]), (!isExiting && enteringAnimation === "slide-out-from-right" || isExiting && exitingAnimation === "slide-out-from-right") && ax(["_j7hqonfj"]), (!isExiting && enteringAnimation === "slide-in-from-bottom" || isExiting && exitingAnimation === "slide-in-from-bottom") && ax(["_j7hq1liq"]), (!isExiting && enteringAnimation === "slide-out-from-bottom" || isExiting && exitingAnimation === "slide-out-from-bottom") && ax(["_j7hqhnf1"]), (!isExiting && enteringAnimation === "slide-in-from-left" || isExiting && exitingAnimation === "slide-in-from-left") && ax(["_j7hq1bh1"]), (!isExiting && enteringAnimation === "slide-out-from-left" || isExiting && exitingAnimation === "slide-out-from-left") && ax(["_j7hqj08w"]), (!isExiting && enteringAnimation === "fade-in-from-top" || isExiting && exitingAnimation === "fade-in-from-top") && ax(["_j7hq2iua"]), (!isExiting && enteringAnimation === "fade-out-from-top" || isExiting && exitingAnimation === "fade-out-from-top") && ax(["_j7hq39va"]), (!isExiting && enteringAnimation === "fade-in-from-left" || isExiting && exitingAnimation === "fade-in-from-left") && ax(["_j7hq15m2"]), (!isExiting && enteringAnimation === "fade-out-from-left" || isExiting && exitingAnimation === "fade-out-from-left") && ax(["_j7hq1yiv"]), (!isExiting && enteringAnimation === "fade-in-from-bottom" || isExiting && exitingAnimation === "fade-in-from-bottom") && ax(["_j7hq1w00"]), (!isExiting && enteringAnimation === "fade-out-from-bottom" || isExiting && exitingAnimation === "fade-out-from-bottom") && ax(["_j7hqzy3z"]), (!isExiting && enteringAnimation === "fade-in-from-right" || isExiting && exitingAnimation === "fade-in-from-right") && ax(["_j7hqpqak"]), (!isExiting && enteringAnimation === "fade-out-from-right" || isExiting && exitingAnimation === "fade-out-from-right") && ax(["_j7hq1ebg"]), (!isExiting && enteringAnimation === "fade-in-from-top-constant" || isExiting && exitingAnimation === "fade-in-from-top-constant") && ax(["_j7hqm2e2"]), (!isExiting && enteringAnimation === "fade-out-from-top-constant" || isExiting && exitingAnimation === "fade-out-from-top-constant") && ax(["_j7hq97jn"]), (!isExiting && enteringAnimation === "fade-in-from-left-constant" || isExiting && exitingAnimation === "fade-in-from-left-constant") && ax(["_j7hqovgq"]), (!isExiting && enteringAnimation === "fade-out-from-left-constant" || isExiting && exitingAnimation === "fade-out-from-left-constant") && ax(["_j7hq15do"]), (!isExiting && enteringAnimation === "fade-in-from-bottom-constant" || isExiting && exitingAnimation === "fade-in-from-bottom-constant") && ax(["_j7hq797a"]), (!isExiting && enteringAnimation === "fade-out-from-bottom-constant" || isExiting && exitingAnimation === "fade-out-from-bottom-constant") && ax(["_j7hqwo7r"]), (!isExiting && enteringAnimation === "fade-in-from-right-constant" || isExiting && exitingAnimation === "fade-in-from-right-constant") && ax(["_j7hqt8u5"]), (!isExiting && enteringAnimation === "fade-out-from-right-constant" || isExiting && exitingAnimation === "fade-out-from-right-constant") && ax(["_j7hq1pgp"])]) : "",
    style: {
      animationDelay: "".concat(delay, "ms")
    }
  }, state);
};
var keyframes_motion_default = EnteringMotion;

// node_modules/@atlaskit/motion/dist/esm/entering/fade-in.js
var invertedDirection = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
var FadeIn = function FadeIn2(_ref) {
  var children = _ref.children, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? "large" : _ref$duration, entranceDirection = _ref.entranceDirection, exitDirection = _ref.exitDirection, _ref$distance = _ref.distance, distance = _ref$distance === void 0 ? "proportional" : _ref$distance, onFinish = _ref.onFinish, isPaused = _ref.isPaused;
  var invertedEntranceDirection = entranceDirection !== void 0 ? invertedDirection[entranceDirection] : void 0;
  var isExitDirect = Boolean(exitDirection || invertedEntranceDirection) ? "fade-out-from-".concat(exitDirection || invertedEntranceDirection).concat(distance === "proportional" ? "" : "-constant") : "fade-out";
  return import_react34.default.createElement(keyframes_motion_default, {
    duration,
    enteringAnimation: entranceDirection ? "fade-in-from-".concat(entranceDirection).concat(distance === "proportional" ? "" : "-constant") : "fade-in",
    exitingAnimation: isExitDirect,
    animationTimingFunction: "ease-in-out",
    onFinish,
    isPaused
  }, children);
};
var fade_in_default = FadeIn;

// node_modules/@atlaskit/motion/dist/esm/entering/animate-in.js
var import_react35 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/resizing/height.js
init_objectWithoutProperties();
init_slicedToArray();
var import_react38 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/utils/use-element-ref.js
var import_react36 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/utils/use-snapshot-before-update.js
var import_react37 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/entering/zoom-in.js
var import_react39 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/entering/slide-in.js
var import_react40 = __toESM(require_react());

// node_modules/@atlaskit/motion/dist/esm/entering/shrink-out.js
init_slicedToArray();

// node_modules/@atlaskit/tooltip/dist/esm/tooltip.js
init_esm();

// node_modules/@atlaskit/popper/dist/esm/popper.js
init_slicedToArray();
var import_react41 = __toESM(require_react());

// node_modules/@atlaskit/popper/dist/esm/max-size.js
init_slicedToArray();
function getMaxSizeModifiers(_ref) {
  var viewportPadding2 = _ref.viewportPadding;
  return [{
    /**
     * Performing DOM measurements in the 'read' phase,
     * which is the convention for popper modifiers
     */
    name: "maxSizeData",
    enabled: true,
    phase: "read",
    fn: function fn(_ref2) {
      var state = _ref2.state, name = _ref2.name;
      if (!window.visualViewport) {
        return;
      }
      state.modifiersData[name] = {
        viewport: {
          width: window.visualViewport.width,
          height: window.visualViewport.height
        }
      };
    }
  }, {
    /**
     * Applying max size CSS
     */
    name: "maxSize",
    enabled: true,
    phase: "beforeWrite",
    requiresIfExists: ["offset", "preventOverflow", "flip"],
    fn: function fn(_ref3) {
      var _data$viewport, _data$viewport2, _state$modifiersData$2, _state$modifiersData;
      var state = _ref3.state;
      var data = state.modifiersData.maxSizeData;
      if (typeof (data === null || data === void 0 || (_data$viewport = data.viewport) === null || _data$viewport === void 0 ? void 0 : _data$viewport.width) !== "number" || typeof (data === null || data === void 0 || (_data$viewport2 = data.viewport) === null || _data$viewport2 === void 0 ? void 0 : _data$viewport2.height) !== "number") {
        return;
      }
      var viewport = data.viewport;
      var _state$modifiersData$ = state.modifiersData.popperOffsets, popperOffsets = _state$modifiersData$ === void 0 ? {
        x: 0,
        y: 0
      } : _state$modifiersData$;
      var _state$placement$spli = state.placement.split("-"), _state$placement$spli2 = _slicedToArray(_state$placement$spli, 1), basePlacement = _state$placement$spli2[0];
      var placementOffset = (_state$modifiersData$2 = (_state$modifiersData = state.modifiersData) === null || _state$modifiersData === void 0 || (_state$modifiersData = _state$modifiersData.offset) === null || _state$modifiersData === void 0 ? void 0 : _state$modifiersData[state.placement]) !== null && _state$modifiersData$2 !== void 0 ? _state$modifiersData$2 : {
        x: 0,
        y: 0
      };
      var maxWidth = viewport.width - 2 * viewportPadding2;
      var maxHeight = viewport.height - 2 * viewportPadding2;
      if (basePlacement === "top") {
        maxHeight = state.rects.reference.y + // Viewport-relative position of reference element
        placementOffset.y - // Space between popper and reference
        viewportPadding2;
      }
      if (basePlacement === "bottom") {
        maxHeight = viewport.height - popperOffsets.y - // Viewport-relative position of popper
        viewportPadding2;
      }
      if (basePlacement === "left") {
        maxWidth = state.rects.reference.x + // Viewport-relative position of reference element
        placementOffset.x - // Space between popper and reference
        viewportPadding2;
      }
      if (basePlacement === "right") {
        maxWidth = viewport.width - popperOffsets.x - // Viewport-relative position of popper
        viewportPadding2;
      }
      state.styles.popper.maxWidth = "".concat(maxWidth, "px");
      state.styles.popper.maxHeight = "".concat(maxHeight, "px");
    }
  }];
}

// node_modules/@atlaskit/popper/dist/esm/popper.js
var viewportPadding = 5;
var constantModifiers = [{
  name: "flip",
  options: {
    flipVariations: false,
    padding: viewportPadding,
    boundary: "clippingParents",
    rootBoundary: "viewport"
  }
}];
function defaultChildrenFn() {
  return null;
}
var defaultOffset = [0, 8];
function Popper2(_ref) {
  var _ref$children = _ref.children, children = _ref$children === void 0 ? defaultChildrenFn : _ref$children, _ref$offset = _ref.offset, offset = _ref$offset === void 0 ? defaultOffset : _ref$offset, _ref$placement = _ref.placement, placement = _ref$placement === void 0 ? "bottom-start" : _ref$placement, _ref$referenceElement = _ref.referenceElement, referenceElement = _ref$referenceElement === void 0 ? void 0 : _ref$referenceElement, modifiers = _ref.modifiers, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? "fixed" : _ref$strategy, _ref$shouldFitViewpor = _ref.shouldFitViewport, shouldFitViewport = _ref$shouldFitViewpor === void 0 ? false : _ref$shouldFitViewpor;
  var _offset = _slicedToArray(offset, 2), offsetX = _offset[0], offsetY = _offset[1];
  var internalModifiers = (0, import_react41.useMemo)(function() {
    var preventOverflowModifier = {
      name: "preventOverflow",
      options: {
        padding: viewportPadding,
        rootBoundary: shouldFitViewport ? "viewport" : "document"
      }
    };
    var offsetModifier = {
      name: "offset",
      options: {
        offset: [offsetX, offsetY]
      }
    };
    var maxSizeModifiers = shouldFitViewport ? getMaxSizeModifiers({
      viewportPadding
    }) : [];
    return [].concat(constantModifiers, [preventOverflowModifier, offsetModifier], _toConsumableArray(maxSizeModifiers));
  }, [offsetX, offsetY, shouldFitViewport]);
  var mergedModifiers = (0, import_react41.useMemo)(function() {
    if (modifiers == null) {
      return internalModifiers;
    }
    return [].concat(_toConsumableArray(internalModifiers), _toConsumableArray(modifiers));
  }, [internalModifiers, modifiers]);
  return import_react41.default.createElement(
    Popper,
    {
      modifiers: mergedModifiers,
      placement,
      strategy,
      referenceElement
    },
    children
  );
}

// node_modules/@atlaskit/portal/dist/esm/portal.js
var import_react47 = __toESM(require_react());
init_esm();

// node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal.js
var import_react42 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@atlaskit/portal/dist/esm/internal/constants.js
var portalParentClassName = "atlaskit-portal-container";
var portalParentSelector = "body > .atlaskit-portal-container";
var portalClassName = "atlaskit-portal";

// node_modules/@atlaskit/portal/dist/esm/internal/utils/portal-dom-utils.js
var createContainer = function createContainer2(zIndex) {
  var container = document.createElement("div");
  container.className = portalClassName;
  container.style.zIndex = "".concat(zIndex);
  return container;
};
var getBody = function getBody2() {
  return document.body;
};
var getPortalParent = function getPortalParent2() {
  var parentElement = document.querySelector(portalParentSelector);
  if (!parentElement) {
    var _getBody;
    var parent = document.createElement("div");
    parent.className = portalParentClassName;
    parent.style.display = "flex";
    (_getBody = getBody()) === null || _getBody === void 0 || _getBody.appendChild(parent);
    return parent;
  }
  return parentElement;
};
var removePortalContainer = function removePortalContainer2(container) {
  getPortalParent().removeChild(container);
};
var appendPortalContainerIfNotAppended = function appendPortalContainerIfNotAppended2(container) {
  if (!container.parentElement) {
    getPortalParent().appendChild(container);
  }
};
var isDocumentDefined = function isDocumentDefined2() {
  return document !== void 0;
};
var createAtlaskitPortal = function createAtlaskitPortal2(zIndex) {
  if (isDocumentDefined()) {
    var atlaskitportal = document.createElement("div");
    atlaskitportal.className = portalClassName;
    atlaskitportal.style.zIndex = "".concat(zIndex);
    return atlaskitportal;
  }
};
var createPortalParent = function createPortalParent2() {
  if (isDocumentDefined()) {
    var parentElement = document.querySelector(portalParentSelector);
    if (!parentElement) {
      var _getBody2;
      var parent = document.createElement("div");
      parent.className = portalParentClassName;
      parent.style.display = "flex";
      (_getBody2 = getBody()) === null || _getBody2 === void 0 || _getBody2.appendChild(parent);
      return parent;
    }
    return parentElement;
  }
};

// node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal.js
function InternalPortal(props) {
  var zIndex = props.zIndex, children = props.children;
  var container = (0, import_react42.useMemo)(function() {
    return createContainer(zIndex);
  }, [zIndex]);
  appendPortalContainerIfNotAppended(container);
  (0, import_react42.useEffect)(function() {
    return function() {
      removePortalContainer(container);
    };
  }, [container]);
  return (0, import_react_dom.createPortal)(children, container);
}

// node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal-new.js
init_slicedToArray();
var import_react44 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());

// node_modules/@atlaskit/portal/dist/esm/internal/hooks/use-isomorphic-layout-effect.js
var import_react43 = __toESM(require_react());
var useIsomorphicLayoutEffect = typeof window !== "undefined" ? import_react43.useLayoutEffect : import_react43.useEffect;

// node_modules/@atlaskit/portal/dist/esm/internal/components/internal-portal-new.js
function InternalPortalNew(props) {
  var zIndex = props.zIndex, children = props.children;
  var _useState = (0, import_react44.useState)(null), _useState2 = _slicedToArray(_useState, 2), atlaskitPortal = _useState2[0], setAtlaskitPortal = _useState2[1];
  useIsomorphicLayoutEffect(function() {
    var tempPortalContainer = createAtlaskitPortal(zIndex);
    setAtlaskitPortal(tempPortalContainer);
    var portalParent = createPortalParent();
    if (!tempPortalContainer || !portalParent) {
      return;
    }
    portalParent.appendChild(tempPortalContainer);
    return function() {
      if (tempPortalContainer) {
        portalParent.removeChild(tempPortalContainer);
      }
      setAtlaskitPortal(null);
    };
  }, [zIndex]);
  var suspendedChildren = import_react44.default.createElement(import_react44.Suspense, {
    fallback: null
  }, children);
  return atlaskitPortal ? (0, import_react_dom2.createPortal)(suspendedChildren, atlaskitPortal) : null;
}

// node_modules/@atlaskit/portal/dist/esm/internal/hooks/use-is-subsequent-render.js
init_slicedToArray();
var import_react45 = __toESM(require_react());
var useIsSubsequentRender = function useIsSubsequentRender2(mountStrategy) {
  var _useState = (0, import_react45.useState)(false), _useState2 = _slicedToArray(_useState, 2), isSubsequentRender = _useState2[0], setIsSubsequentRender = _useState2[1];
  var _useState3 = (0, import_react45.useState)(function() {
    return mountStrategy === "layoutEffect" ? useIsomorphicLayoutEffect : import_react45.useEffect;
  }), _useState4 = _slicedToArray(_useState3, 1), useMountEffect = _useState4[0];
  useMountEffect(function() {
    setIsSubsequentRender(true);
  }, []);
  return isSubsequentRender;
};
var use_is_subsequent_render_default = useIsSubsequentRender;

// node_modules/@atlaskit/portal/dist/esm/internal/hooks/use-portal-event.js
var import_react46 = __toESM(require_react());

// node_modules/@atlaskit/portal/dist/esm/constants.js
var PORTAL_MOUNT_EVENT = "akPortalMount";
var PORTAL_UNMOUNT_EVENT = "akPortalUnmount";

// node_modules/@atlaskit/portal/dist/esm/internal/utils/portal-custom-event.js
var zIndexToName = {
  100: "card",
  200: "navigation",
  300: "dialog",
  400: "layer",
  500: "blanket",
  510: "modal",
  600: "flag",
  700: "spotlight",
  9999: "tooltip"
};
var getLayerName = function getLayerName2(zIndex) {
  return zIndexToName.hasOwnProperty(zIndex) ? zIndexToName[zIndex] : null;
};
var getEvent = function getEvent2(eventName, zIndex) {
  var detail = {
    layer: getLayerName(Number(zIndex)),
    zIndex
  };
  return new CustomEvent(eventName, {
    detail
  });
};
function firePortalEvent(eventName, zIndex) {
  var event = getEvent(eventName, zIndex);
  window.dispatchEvent(event);
}

// node_modules/@atlaskit/portal/dist/esm/internal/hooks/use-portal-event.js
var useFirePortalEvent = function useFirePortalEvent2(zIndex) {
  var zIndexNumber = Number(zIndex);
  (0, import_react46.useEffect)(function() {
    firePortalEvent(PORTAL_MOUNT_EVENT, zIndexNumber);
    return function() {
      firePortalEvent(PORTAL_UNMOUNT_EVENT, zIndexNumber);
    };
  }, [zIndexNumber]);
};
var use_portal_event_default = useFirePortalEvent;

// node_modules/@atlaskit/portal/dist/esm/portal.js
function Portal(_ref) {
  var _ref$zIndex = _ref.zIndex, zIndex = _ref$zIndex === void 0 ? 0 : _ref$zIndex, children = _ref.children, _ref$mountStrategy = _ref.mountStrategy, mountStrategy = _ref$mountStrategy === void 0 ? "effect" : _ref$mountStrategy;
  var isSubsequentRender = use_is_subsequent_render_default(mountStrategy);
  use_portal_event_default(zIndex);
  return !fg("platform_design_system_team_portal_logic_r18_fix") ? isSubsequentRender ? import_react47.default.createElement(InternalPortal, {
    zIndex
  }, children) : null : import_react47.default.createElement(InternalPortalNew, {
    zIndex
  }, children);
}

// node_modules/@atlaskit/tooltip/dist/esm/internal/drag-manager.js
var import_bind_event_listener3 = __toESM(require_dist());
var registrations = /* @__PURE__ */ new Set();
var cleanupEndEventListeners = null;
function onDragStart() {
  if (cleanupEndEventListeners) {
    return;
  }
  cleanupEndEventListeners = (0, import_bind_event_listener3.bindAll)(window, [{
    type: "dragend",
    listener: onDragEnd
  }, {
    type: "pointerdown",
    listener: onDragEnd
  }, {
    type: "pointermove",
    listener: function() {
      var callCount = 0;
      return function listener() {
        if (callCount < 20) {
          callCount++;
          return;
        }
        onDragEnd();
      };
    }()
  }]);
  var clone = Array.from(registrations);
  clone.forEach(function(subscriber) {
    subscriber.onDragStart();
  });
}
function onDragEnd() {
  var _cleanupEndEventListe;
  (_cleanupEndEventListe = cleanupEndEventListeners) === null || _cleanupEndEventListe === void 0 || _cleanupEndEventListe();
  cleanupEndEventListeners = null;
  var clone = Array.from(registrations);
  clone.forEach(function(subscriber) {
    subscriber.onDragEnd();
  });
}
function bindStartEvents() {
  return (0, import_bind_event_listener3.bindAll)(window, [{
    type: "dragstart",
    listener: onDragStart
  }, {
    type: "dragenter",
    listener: onDragStart
  }]);
}
var cleanupStartEventListeners = null;
function register(registration) {
  if (!cleanupStartEventListeners) {
    cleanupStartEventListeners = bindStartEvents();
  }
  registrations.add(registration);
  registration.onRegister({
    isDragging: cleanupEndEventListeners !== null
  });
  return function unregister() {
    registrations.delete(registration);
    if (registrations.size === 0) {
      var _cleanupStartEventLis;
      (_cleanupStartEventLis = cleanupStartEventListeners) === null || _cleanupStartEventLis === void 0 || _cleanupStartEventLis();
      cleanupStartEventListeners = null;
    }
  };
}

// node_modules/@atlaskit/tooltip/dist/esm/internal/shared-schedule.js
var delayId = null;
function clearScheduled() {
  if (delayId != null) {
    window.clearTimeout(delayId);
    delayId = null;
  }
}
function scheduleTimeout(fn, delay) {
  clearScheduled();
  delayId = window.setTimeout(function() {
    delayId = null;
    fn();
  }, delay);
}

// node_modules/@atlaskit/tooltip/dist/esm/internal/tooltip-manager.js
var active = null;
function show(entry) {
  var phase = "waiting-to-show";
  function isActive() {
    return Boolean(active && active.entry === entry);
  }
  function cleanup() {
    if (isActive()) {
      clearScheduled();
      active = null;
    }
  }
  function done() {
    if (isActive()) {
      entry.done();
    }
    phase = "done";
    cleanup();
  }
  function immediatelyHideAndDone() {
    if (isActive()) {
      entry.hide({
        isImmediate: true
      });
    }
    done();
  }
  function keep() {
    if (!isActive()) {
      return;
    }
    if (phase === "waiting-to-hide") {
      phase = "shown";
      clearScheduled();
      return;
    }
    if (phase === "hide-animating") {
      phase = "shown";
      clearScheduled();
      entry.show({
        isImmediate: false
      });
      return;
    }
  }
  function requestHide(_ref) {
    var isImmediate = _ref.isImmediate;
    if (!isActive()) {
      return;
    }
    if (phase === "waiting-to-show") {
      immediatelyHideAndDone();
      return;
    }
    if (phase === "waiting-to-hide") {
      return;
    }
    if (isImmediate) {
      immediatelyHideAndDone();
      return;
    }
    phase = "waiting-to-hide";
    scheduleTimeout(function() {
      phase = "hide-animating";
      entry.hide({
        isImmediate: false
      });
    }, entry.delay);
  }
  function finishHideAnimation() {
    if (isActive() && phase === "hide-animating") {
      done();
    }
  }
  function isVisible() {
    return phase === "shown" || phase === "waiting-to-hide" || phase === "hide-animating";
  }
  function getInitialMouse() {
    if (entry.source.type === "mouse") {
      return entry.source.mouse;
    }
    return null;
  }
  function start() {
    var showImmediately = Boolean(active && active.isVisible());
    if (active) {
      clearScheduled();
      active.entry.hide({
        isImmediate: true
      });
      active.entry.done();
      active = null;
    }
    active = {
      entry,
      isVisible
    };
    function show2() {
      phase = "shown";
      entry.show({
        isImmediate: showImmediately
      });
    }
    if (showImmediately) {
      show2();
      return;
    }
    phase = "waiting-to-show";
    scheduleTimeout(show2, entry.delay);
  }
  start();
  var result = {
    keep,
    abort: cleanup,
    isActive,
    requestHide,
    finishHideAnimation,
    mousePosition: getInitialMouse()
  };
  return result;
}

// node_modules/@atlaskit/tooltip/dist/esm/internal/use-unique-id.js
function useUniqueId2(prefix, shouldRenderId) {
  var seed = useIdSeed();
  return shouldRenderId ? "".concat(seed(prefix)) : void 0;
}

// node_modules/@atlaskit/tooltip/dist/esm/tooltip-container.js
init_defineProperty();
var React31 = __toESM(require_react());
init_runtime();
var import_react49 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/tooltip/dist/esm/tooltip-container.compiled.css";

// node_modules/@atlaskit/tooltip/dist/esm/tooltip-primitive.js
var React30 = __toESM(require_react());
init_runtime();
var import_react48 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/tooltip/dist/esm/tooltip-primitive.compiled.css";
var TooltipPrimitive = (0, import_react48.forwardRef)(function TooltipPrimitive2(_ref, ref) {
  var style = _ref.style, className = _ref.className, children = _ref.children, placement = _ref.placement, testId = _ref.testId, onMouseOut = _ref.onMouseOut, onMouseOver = _ref.onMouseOver, id = _ref.id;
  return React30.createElement("div", {
    ref,
    style,
    "data-testid": testId ? "".concat(testId, "--wrapper") : void 0
  }, React30.createElement("div", {
    role: "tooltip",
    className: ax(["_80om73ad", className]),
    onMouseOut,
    onMouseOver,
    "data-placement": placement,
    "data-testid": testId,
    id
  }, children));
});
TooltipPrimitive.displayName = "TooltipPrimitive";
var tooltip_primitive_default = TooltipPrimitive;

// node_modules/@atlaskit/tooltip/dist/esm/tooltip-container.js
function ownKeys6(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread6(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys6(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys6(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var TooltipContainer = (0, import_react49.forwardRef)(function TooltipContainer2(_ref, ref) {
  var style = _ref.style, className = _ref.className, children = _ref.children, truncate = _ref.truncate, placement = _ref.placement, testId = _ref.testId, onMouseOut = _ref.onMouseOut, onMouseOver = _ref.onMouseOver, id = _ref.id;
  return React31.createElement(tooltip_primitive_default, {
    ref,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: ax(["_2rkofajl _11c8dcr7 _vchhusvi _p12fp3fh _bfhkpioe _syaz1i9p _152tze3t _1e02ze3t _1i4q1hna _85i5v77o _1q51v77o _y4ti12x7 _bozg12x7 _slp31hna", truncate && "_1reo15vq _18m915vq _p12f1pna _1bto1l2s _o5721q9c", className]),
    placement,
    testId,
    id,
    onMouseOut,
    onMouseOver,
    style: _objectSpread6(_objectSpread6({}, style), {}, {
      "--_yr7xfv": cssCustomPropertyValue("var(--ds-background-neutral-bold, ".concat(N800, ")")),
      "--_ywovvi": cssCustomPropertyValue("var(--ds-text-inverse, ".concat(N0, ")"))
    })
  }, children);
});
TooltipContainer.displayName = "TooltipContainer";
var tooltip_container_default = TooltipContainer;

// node_modules/@atlaskit/tooltip/dist/esm/utilities.js
function getMousePosition(mouseCoordinates) {
  var safeMouse = mouseCoordinates || {
    top: 0,
    left: 0
  };
  var getBoundingClientRect = function getBoundingClientRect2() {
    return {
      top: safeMouse.top,
      left: safeMouse.left,
      bottom: safeMouse.top,
      right: safeMouse.left,
      width: 0,
      height: 0
    };
  };
  return {
    getBoundingClientRect,
    clientWidth: 0,
    clientHeight: 0
  };
}

// node_modules/@atlaskit/tooltip/dist/esm/tooltip.js
function ownKeys7(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread7(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys7(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys7(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var tooltipZIndex = layers.tooltip();
var analyticsAttributes2 = {
  componentName: "tooltip",
  packageName: "@atlaskit/tooltip",
  packageVersion: "0.0.0-development"
};
var invertedDirection2 = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
var getDirectionFromPlacement = function getDirectionFromPlacement2(placement) {
  return placement.split("-")[0];
};
function Tooltip(_ref) {
  var children = _ref.children, _ref$position = _ref.position, position = _ref$position === void 0 ? "bottom" : _ref$position, _ref$mousePosition = _ref.mousePosition, mousePosition = _ref$mousePosition === void 0 ? "bottom" : _ref$mousePosition, content = _ref.content, _ref$truncate = _ref.truncate, truncate = _ref$truncate === void 0 ? false : _ref$truncate, _ref$component = _ref.component, Container4 = _ref$component === void 0 ? tooltip_container_default : _ref$component, _ref$tag = _ref.tag, TargetContainer = _ref$tag === void 0 ? "div" : _ref$tag, testId = _ref.testId, _ref$delay = _ref.delay, delay = _ref$delay === void 0 ? 300 : _ref$delay, _ref$onShow = _ref.onShow, onShow = _ref$onShow === void 0 ? noop : _ref$onShow, _ref$onHide = _ref.onHide, onHide = _ref$onHide === void 0 ? noop : _ref$onHide, canAppear = _ref.canAppear, _ref$hideTooltipOnCli = _ref.hideTooltipOnClick, hideTooltipOnClick = _ref$hideTooltipOnCli === void 0 ? false : _ref$hideTooltipOnCli, _ref$hideTooltipOnMou = _ref.hideTooltipOnMouseDown, hideTooltipOnMouseDown = _ref$hideTooltipOnMou === void 0 ? false : _ref$hideTooltipOnMou, analyticsContext = _ref.analyticsContext, _ref$strategy = _ref.strategy, strategy = _ref$strategy === void 0 ? "fixed" : _ref$strategy, _ref$ignoreTooltipPoi = _ref.ignoreTooltipPointerEvents, ignoreTooltipPointerEvents = _ref$ignoreTooltipPoi === void 0 ? false : _ref$ignoreTooltipPoi, _ref$isScreenReaderAn = _ref.isScreenReaderAnnouncementDisabled, isScreenReaderAnnouncementDisabled = _ref$isScreenReaderAn === void 0 ? false : _ref$isScreenReaderAn;
  var tooltipPosition = position === "mouse" ? mousePosition : position;
  var onShowHandler = usePlatformLeafSyntheticEventHandler(_objectSpread7({
    fn: onShow,
    action: "displayed",
    analyticsData: analyticsContext
  }, analyticsAttributes2));
  var onHideHandler = usePlatformLeafSyntheticEventHandler(_objectSpread7({
    fn: onHide,
    action: "hidden",
    analyticsData: analyticsContext
  }, analyticsAttributes2));
  var apiRef = (0, import_react50.useRef)(null);
  var _useState = (0, import_react50.useState)("hide"), _useState2 = _slicedToArray(_useState, 2), state = _useState2[0], setState = _useState2[1];
  var targetRef = (0, import_react50.useRef)(null);
  var containerRef = (0, import_react50.useRef)(null);
  var setImplicitRefFromChildren = function setImplicitRefFromChildren2(node) {
    containerRef.current = node;
    targetRef.current = node ? node.firstElementChild : null;
  };
  var setDirectRef = (0, import_react50.useCallback)(function(node) {
    targetRef.current = node;
  }, []);
  var stableState = useStableRef(state);
  var onShowHandlerStable = useStableRef(onShowHandler);
  var onHideHandlerStable = useStableRef(onHideHandler);
  var delayStable = useStableRef(delay);
  var canAppearStable = useStableRef(canAppear);
  var hasCalledShowHandler = (0, import_react50.useRef)(false);
  var start = (0, import_react50.useCallback)(function(api) {
    apiRef.current = api;
    hasCalledShowHandler.current = false;
  }, []);
  var done = (0, import_react50.useCallback)(function() {
    if (!apiRef.current) {
      return;
    }
    if (hasCalledShowHandler.current) {
      onHideHandlerStable.current();
    }
    apiRef.current = null;
    hasCalledShowHandler.current = false;
    setState("hide");
  }, [onHideHandlerStable]);
  var abort2 = (0, import_react50.useCallback)(function() {
    if (!apiRef.current) {
      return;
    }
    apiRef.current.abort();
    if (hasCalledShowHandler.current) {
      onHideHandlerStable.current();
    }
    apiRef.current = null;
  }, [onHideHandlerStable]);
  (0, import_react50.useEffect)(function mount() {
    return function unmount() {
      if (apiRef.current) {
        abort2();
      }
    };
  }, [abort2]);
  var isDraggingRef = (0, import_react50.useRef)(false);
  (0, import_react50.useEffect)(function() {
    return register({
      onRegister: function onRegister(_ref2) {
        var isDragging = _ref2.isDragging;
        isDraggingRef.current = isDragging;
      },
      onDragStart: function onDragStart2() {
        var _apiRef$current;
        (_apiRef$current = apiRef.current) === null || _apiRef$current === void 0 || _apiRef$current.requestHide({
          isImmediate: true
        });
        isDraggingRef.current = true;
      },
      onDragEnd: function onDragEnd2() {
        isDraggingRef.current = false;
      }
    });
  }, []);
  var tryShowTooltip = (0, import_react50.useCallback)(function(source) {
    var _canAppearStable$curr;
    if (isDraggingRef.current) {
      return;
    }
    if (apiRef.current && !apiRef.current.isActive()) {
      abort2();
    }
    if (apiRef.current && apiRef.current.isActive()) {
      apiRef.current.keep();
      return;
    }
    if (canAppearStable.current && !((_canAppearStable$curr = canAppearStable.current) !== null && _canAppearStable$curr !== void 0 && _canAppearStable$curr.call(canAppearStable))) {
      return;
    }
    var entry = {
      source,
      delay: delayStable.current,
      show: function show2(_ref3) {
        var isImmediate = _ref3.isImmediate;
        if (!hasCalledShowHandler.current) {
          hasCalledShowHandler.current = true;
          onShowHandlerStable.current();
        }
        setState(isImmediate ? "show-immediate" : "fade-in");
      },
      hide: function hide(_ref4) {
        var isImmediate = _ref4.isImmediate;
        if (isImmediate) {
          setState("hide");
        } else {
          setState("before-fade-out");
        }
      },
      done
    };
    var api = show(entry);
    start(api);
  }, [canAppearStable, delayStable, done, start, abort2, onShowHandlerStable]);
  var hideTooltipOnEsc = (0, import_react50.useCallback)(function() {
    var _apiRef$current2;
    (_apiRef$current2 = apiRef.current) === null || _apiRef$current2 === void 0 || _apiRef$current2.requestHide({
      isImmediate: true
    });
  }, [apiRef]);
  useCloseOnEscapePress({
    onClose: hideTooltipOnEsc,
    isDisabled: state === "hide" || state === "fade-out"
  });
  (0, import_react50.useEffect)(function() {
    if (state === "hide") {
      return noop;
    }
    if (state === "before-fade-out") {
      setState("fade-out");
    }
    var unbind = (0, import_bind_event_listener4.bind)(window, {
      type: "scroll",
      listener: function listener() {
        if (apiRef.current) {
          apiRef.current.requestHide({
            isImmediate: true
          });
        }
      },
      options: {
        capture: true,
        passive: true,
        once: true
      }
    });
    return unbind;
  }, [state]);
  var onMouseDown = (0, import_react50.useCallback)(function() {
    if (hideTooltipOnMouseDown && apiRef.current) {
      apiRef.current.requestHide({
        isImmediate: true
      });
    }
  }, [hideTooltipOnMouseDown]);
  var onClick = (0, import_react50.useCallback)(function() {
    if (hideTooltipOnClick && apiRef.current) {
      apiRef.current.requestHide({
        isImmediate: true
      });
    }
  }, [hideTooltipOnClick]);
  var onMouseOver = (0, import_react50.useCallback)(function(event) {
    if (containerRef.current && event.target === containerRef.current) {
      return;
    }
    if (event.defaultPrevented) {
      return;
    }
    event.preventDefault();
    var source = position === "mouse" ? {
      type: "mouse",
      // TODO: ideally not recalculating this object each time
      mouse: getMousePosition({
        left: event.clientX,
        top: event.clientY
      })
    } : {
      type: "keyboard"
    };
    tryShowTooltip(source);
  }, [position, tryShowTooltip]);
  var onMouseOut = (0, import_react50.useCallback)(function(event) {
    if (containerRef.current && event.target === containerRef.current) {
      return;
    }
    if (event.defaultPrevented) {
      return;
    }
    event.preventDefault();
    if (apiRef.current) {
      apiRef.current.requestHide({
        isImmediate: false
      });
    }
  }, []);
  var onMouseMove = position === "mouse" ? function(event) {
    var _apiRef$current3;
    if ((_apiRef$current3 = apiRef.current) !== null && _apiRef$current3 !== void 0 && _apiRef$current3.isActive()) {
      apiRef.current.mousePosition = getMousePosition({
        left: event.clientX,
        top: event.clientY
      });
    }
  } : void 0;
  var onMouseOverTooltip = (0, import_react50.useCallback)(function() {
    if (apiRef.current && apiRef.current.isActive()) {
      apiRef.current.keep();
      return;
    }
  }, []);
  var onFocus = (0, import_react50.useCallback)(function(e) {
    try {
      if (!e.target.matches(":focus-visible") && fg("platform-tooltip-focus-visible-new")) {
        return;
      }
    } catch (_) {
    }
    tryShowTooltip({
      type: "keyboard"
    });
  }, [tryShowTooltip]);
  var onBlur = (0, import_react50.useCallback)(function() {
    if (apiRef.current) {
      apiRef.current.requestHide({
        isImmediate: false
      });
    }
  }, []);
  var onAnimationFinished = (0, import_react50.useCallback)(function(transition) {
    if (transition === "exiting" && stableState.current === "fade-out" && apiRef.current) {
      apiRef.current.finishHideAnimation();
    }
  }, [stableState]);
  var CastTargetContainer = TargetContainer;
  var shouldRenderTooltipPopup = state !== "hide" && Boolean(content);
  var shouldRenderHiddenContent = !isScreenReaderAnnouncementDisabled && shouldRenderTooltipPopup;
  var shouldRenderTooltipChildren = state !== "hide" && state !== "fade-out";
  var handleOpenLayerObserverCloseSignal = (0, import_react50.useCallback)(function() {
    var _apiRef$current4;
    (_apiRef$current4 = apiRef.current) === null || _apiRef$current4 === void 0 || _apiRef$current4.requestHide({
      isImmediate: true
    });
  }, []);
  useNotifyOpenLayerObserver({
    // Layer is only visually open if both the tooltip popup (container) and children are rendered.
    isOpen: shouldRenderTooltipPopup && shouldRenderTooltipChildren,
    /**
     * We don't strictly need to provide an onClose callback at this time, as there is
     * already code that handles hiding the tooltip when a drag is started (and the only
     * usage right now is closing all layers when the user resizes the side nav).
     *
     * However, for future-proofing and semantic reasons, it makes sense to close the tooltip
     * whenever the open layer observer requests a close.
     */
    onClose: handleOpenLayerObserverCloseSignal
  });
  var getReferenceElement = function getReferenceElement2() {
    var _apiRef$current5;
    if (position === "mouse" && (_apiRef$current5 = apiRef.current) !== null && _apiRef$current5 !== void 0 && _apiRef$current5.mousePosition) {
      var _apiRef$current6;
      return (_apiRef$current6 = apiRef.current) === null || _apiRef$current6 === void 0 ? void 0 : _apiRef$current6.mousePosition;
    }
    return targetRef.current || void 0;
  };
  var tooltipIdForHiddenContent = useUniqueId2("tooltip", shouldRenderHiddenContent);
  var tooltipTriggerProps = {
    onMouseOver,
    onMouseOut,
    onMouseMove,
    onMouseDown,
    onClick,
    onFocus,
    onBlur
  };
  if (testId) {
    tooltipTriggerProps["data-testid"] = "".concat(testId, "--container");
  }
  var isChildrenAFunction = typeof children === "function";
  (0, import_react50.useEffect)(function() {
    if (isChildrenAFunction) {
      return;
    }
    var target = targetRef.current;
    if (!target || !tooltipIdForHiddenContent) {
      return;
    }
    target.setAttribute("aria-describedby", tooltipIdForHiddenContent);
    return function() {
      return target.removeAttribute("aria-describedby");
    };
  }, [isChildrenAFunction, tooltipIdForHiddenContent]);
  var hiddenContent = shouldRenderHiddenContent ? import_react50.default.createElement("span", {
    "data-testid": testId ? "".concat(testId, "-hidden") : void 0,
    hidden: true,
    id: tooltipIdForHiddenContent
  }, typeof content === "function" ? content({}) : content) : null;
  return import_react50.default.createElement(import_react50.default.Fragment, null, typeof children === "function" ? (
    // once we deprecate the wrapped approach, we can put the aria
    // attribute back into the tooltipTriggerProps and make it required
    // instead of optional in `types`
    import_react50.default.createElement(import_react50.default.Fragment, null, children(_objectSpread7(_objectSpread7({}, tooltipTriggerProps), {}, {
      "aria-describedby": tooltipIdForHiddenContent,
      ref: setDirectRef
    })), hiddenContent)
  ) : import_react50.default.createElement(CastTargetContainer, _extends({}, tooltipTriggerProps, {
    ref: setImplicitRefFromChildren,
    role: "presentation"
  }), children, hiddenContent), shouldRenderTooltipPopup ? import_react50.default.createElement(Portal, {
    zIndex: tooltipZIndex
  }, import_react50.default.createElement(Popper2, {
    placement: tooltipPosition,
    referenceElement: getReferenceElement(),
    strategy
  }, function(_ref5) {
    var ref = _ref5.ref, style = _ref5.style, update = _ref5.update, placement = _ref5.placement;
    var direction = position === "mouse" ? void 0 : invertedDirection2[getDirectionFromPlacement(placement)];
    return import_react50.default.createElement(exiting_persistence_default, {
      appear: true
    }, shouldRenderTooltipChildren && import_react50.default.createElement(fade_in_default, {
      distance: "constant",
      entranceDirection: direction,
      exitDirection: direction,
      onFinish: onAnimationFinished,
      duration: state !== "show-immediate" ? "medium" : "none"
    }, function(_ref6) {
      var className = _ref6.className;
      return import_react50.default.createElement(Container4, {
        ref,
        className: "Tooltip ".concat(className),
        style: _objectSpread7(_objectSpread7({}, style), ignoreTooltipPointerEvents && {
          pointerEvents: "none"
        }),
        truncate,
        placement: tooltipPosition,
        testId: getReferenceElement() ? testId : testId && "".concat(testId, "--unresolved"),
        onMouseOut,
        onMouseOver: onMouseOverTooltip
      }, typeof content === "function" ? content({
        update
      }) : content);
    }));
  })) : null);
}
var tooltip_default = Tooltip;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head-cell.js
var _excluded8 = ["content", "inlineStyles", "testId", "isRanking", "innerRef", "isSortable", "sortOrder", "onClick", "headCellId", "activeSortButtonId", "ascendingSortTooltip", "descendingSortTooltip", "buttonAriaRoleDescription", "isIconOnlyHeader"];
var styles3 = {
  buttonWrapper: "_1e0c1txw _bfhk1j28 _4cvr1h6o _ca0qze3t _u5f3ze3t _n3tdze3t _19bvze3t _d0altlke",
  sortIconHiddenWrapper: "_1e0c1txw _tzy4idpf _bfhk1j28 _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66 _1h7hkb7n",
  sortIconVisibleWrapper: "_1e0c1txw _tzy4kb7n _bfhk1j28 _ca0q1b66 _u5f31b66 _n3td1b66 _19bv1b66",
  hideIconHeaderWrapper: "_tzy4idpf _18u010v4",
  visibleHeaderWrapper: "_tzy4kb7n _u5f31b66"
};
var headCellStyles = {
  headCellContainer: "_1e0c1txw _4cvr1h6o",
  text: "_11c81o8v _syaz1gjq _k48pmoej"
};
var TableHeadCell = function TableHeadCell2(_ref) {
  var content = _ref.content, inlineStyles = _ref.inlineStyles, testId = _ref.testId, isRanking = _ref.isRanking, innerRef = _ref.innerRef, isSortable = _ref.isSortable, sortOrder = _ref.sortOrder, onClick = _ref.onClick, headCellId = _ref.headCellId, activeSortButtonId = _ref.activeSortButtonId, _ref$ascendingSortToo = _ref.ascendingSortTooltip, ascendingSortTooltip = _ref$ascendingSortToo === void 0 ? "Sort ascending" : _ref$ascendingSortToo, _ref$descendingSortTo = _ref.descendingSortTooltip, descendingSortTooltip = _ref$descendingSortTo === void 0 ? "Sort descending" : _ref$descendingSortTo, _ref$buttonAriaRoleDe = _ref.buttonAriaRoleDescription, buttonAriaRoleDescription = _ref$buttonAriaRoleDe === void 0 ? "Sort button" : _ref$buttonAriaRoleDe, isIconOnlyHeader = _ref.isIconOnlyHeader, rest = _objectWithoutProperties(_ref, _excluded8);
  var _useState = (0, import_react51.useState)(false), _useState2 = _slicedToArray(_useState, 2), isHovered = _useState2[0], setIsHovered = _useState2[1];
  var _useState3 = (0, import_react51.useState)(false), _useState4 = _slicedToArray(_useState3, 2), isFocused = _useState4[0], setIsFocused = _useState4[1];
  var isActive = headCellId === activeSortButtonId || sortOrder !== void 0;
  var isSortIconVisible = isHovered || isActive || isFocused;
  var isVisibleIconOnlyHeader = isSortIconVisible && isIconOnlyHeader;
  var shouldRenderSortIcon = !isIconOnlyHeader || isSortIconVisible || isIconOnlyHeader && !isFocused;
  var handleFocus = (0, import_react51.useCallback)(function() {
    setIsFocused === null || setIsFocused === void 0 || setIsFocused(true);
  }, [setIsFocused]);
  var handleBlur = (0, import_react51.useCallback)(function() {
    setIsFocused === null || setIsFocused === void 0 || setIsFocused(false);
  }, [setIsFocused]);
  var handleMouseEnter = (0, import_react51.useCallback)(function() {
    setIsHovered(true);
  }, [setIsHovered]);
  var handleMouseLeave = (0, import_react51.useCallback)(function() {
    setIsHovered(false);
  }, [setIsHovered]);
  var visuallyRefreshedButton = import_react51.default.createElement(box_default, {
    xcss: headCellStyles.headCellContainer,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onFocus: handleFocus,
    onBlur: handleBlur
  }, import_react51.default.createElement(tooltip_default, {
    content: sortOrder === ASC ? ascendingSortTooltip : descendingSortTooltip
  }, import_react51.default.createElement(pressable_default, {
    onClick,
    xcss: styles3.buttonWrapper,
    "aria-roledescription": buttonAriaRoleDescription
  }, import_react51.default.createElement(flex_default, {
    xcss: isVisibleIconOnlyHeader ? styles3.hideIconHeaderWrapper : styles3.visibleHeaderWrapper
  }, import_react51.default.createElement("span", {
    className: ax([headCellStyles.text])
  }, content)), shouldRenderSortIcon && import_react51.default.createElement(flex_default, {
    xcss: isSortIconVisible ? styles3.sortIconVisibleWrapper : styles3.sortIconHiddenWrapper
  }, sortOrder === ASC ? import_react51.default.createElement(import_arrow_up.default, {
    label: "",
    color: "var(--ds-text-subtle, #44546F)",
    testId: testId && "".concat(testId, "--up--icon")
  }) : import_react51.default.createElement(import_arrow_down.default, {
    label: "",
    color: "var(--ds-text-subtle, #44546F)",
    testId: testId && "".concat(testId, "--down--icon")
  })))));
  return import_react51.default.createElement(
    HeadCell,
    _extends({
      style: inlineStyles,
      testId: testId && "".concat(testId, "--head--cell"),
      ref: typeof innerRef !== "string" ? innerRef : null
      // string refs must be discarded as LegacyRefs are not compatible with FC forwardRefs
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, rest, {
      isSortable,
      sortOrder
    }),
    isSortable ? visuallyRefreshedButton : content
  );
};
var table_head_cell_default = TableHeadCell;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/rankable/table-head-cell.js
var _excluded9 = ["isRanking", "refHeight", "refWidth"];
function _callSuper6(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct6() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct6() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct6 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var RankableTableHeadCellComponent = function(_React$Component) {
  function RankableTableHeadCellComponent2() {
    _classCallCheck(this, RankableTableHeadCellComponent2);
    return _callSuper6(this, RankableTableHeadCellComponent2, arguments);
  }
  _inherits(RankableTableHeadCellComponent2, _React$Component);
  return _createClass(RankableTableHeadCellComponent2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, isRanking = _this$props.isRanking, refHeight = _this$props.refHeight, refWidth = _this$props.refWidth, restProps = _objectWithoutProperties(_this$props, _excluded9);
      var inlineStyles = inlineStylesIfRanking(isRanking, refWidth);
      return import_react52.default.createElement(table_head_cell_default, _extends({
        inlineStyles
      }, restProps));
    }
  }]);
}(import_react52.default.Component);
var RankableTableHeadCell = withDimensions(RankableTableHeadCellComponent);
var table_head_cell_default2 = RankableTableHeadCell;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/rankable/table-head-cell-old.js
init_extends();
init_objectWithoutProperties();
init_classCallCheck();
init_createClass();
init_possibleConstructorReturn();
init_getPrototypeOf();
init_inherits();
var import_react54 = __toESM(require_react());

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head-cell-old.js
init_extends();
init_objectWithoutProperties();
var import_react53 = __toESM(require_react());
var _excluded10 = ["content", "inlineStyles", "testId", "isRanking", "innerRef", "isSortable", "onClick"];
var TableHeadCellOld = function TableHeadCellOld2(_ref) {
  var content = _ref.content, inlineStyles = _ref.inlineStyles, testId = _ref.testId, isRanking = _ref.isRanking, innerRef = _ref.innerRef, isSortable = _ref.isSortable, onClick = _ref.onClick, rest = _objectWithoutProperties(_ref, _excluded10);
  return import_react53.default.createElement(
    HeadCell,
    _extends({
      style: inlineStyles,
      testId: testId && "".concat(testId, "--head--cell"),
      ref: typeof innerRef !== "string" ? innerRef : null
      // string refs must be discarded as LegacyRefs are not compatible with FC forwardRefs
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, rest, {
      onClick,
      isSortable
    }),
    isSortable ? import_react53.default.createElement("button", {
      type: "button",
      "aria-roledescription": "Sort button"
    }, content) : content
  );
};
var table_head_cell_old_default = TableHeadCellOld;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/rankable/table-head-cell-old.js
var _excluded11 = ["isRanking", "refHeight", "refWidth"];
function _callSuper7(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct7() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct7() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct7 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var RankableTableHeadCellComponentOld = function(_React$Component) {
  function RankableTableHeadCellComponentOld2() {
    _classCallCheck(this, RankableTableHeadCellComponentOld2);
    return _callSuper7(this, RankableTableHeadCellComponentOld2, arguments);
  }
  _inherits(RankableTableHeadCellComponentOld2, _React$Component);
  return _createClass(RankableTableHeadCellComponentOld2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, isRanking = _this$props.isRanking, refHeight = _this$props.refHeight, refWidth = _this$props.refWidth, restProps = _objectWithoutProperties(_this$props, _excluded11);
      var inlineStyles = inlineStylesIfRanking(isRanking, refWidth);
      return import_react54.default.createElement(table_head_cell_old_default, _extends({
        inlineStyles
      }, restProps));
    }
  }]);
}(import_react54.default.Component);
var RankableTableHeadCellOld = withDimensions(RankableTableHeadCellComponentOld);
var table_head_cell_old_default2 = RankableTableHeadCellOld;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/table-head.js
var _excluded12 = ["cells"];
var _excluded24 = ["ascendingSortTooltip", "buttonAriaRoleDescription", "colSpan", "content", "descendingSortTooltip", "isIconOnlyHeader", "isSortable", "key", "shouldTruncate", "testId", "width"];
function _callSuper8(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct8() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct8() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct8 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var TableHead = function(_React$Component) {
  function TableHead2(props) {
    var _this;
    _classCallCheck(this, TableHead2);
    _this = _callSuper8(this, TableHead2, [props]);
    _this.state = {
      activeSortButtonId: null
    };
    return _this;
  }
  _inherits(TableHead2, _React$Component);
  return _createClass(TableHead2, [{
    key: "UNSAFE_componentWillMount",
    value: function UNSAFE_componentWillMount() {
      validateSortKey(this.props.sortKey, this.props.head);
    }
  }, {
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(nextProps) {
      if (this.props.sortKey !== nextProps.sortKey || this.props.head !== nextProps.head) {
        validateSortKey(nextProps.sortKey, nextProps.head);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props = this.props, head = _this$props.head, sortKey = _this$props.sortKey, sortOrder = _this$props.sortOrder, isFixedSize = _this$props.isFixedSize, onSort = _this$props.onSort, isRanking = _this$props.isRanking, isRankable = _this$props.isRankable, testId = _this$props.testId;
      var activeSortButtonId = this.state.activeSortButtonId;
      if (!head) {
        return null;
      }
      var HeadCellComponentOld = isRankable ? table_head_cell_old_default2 : table_head_cell_old_default;
      var HeadCellComponent = isRankable ? table_head_cell_default2 : table_head_cell_default;
      var cells = head.cells, rest = _objectWithoutProperties(head, _excluded12);
      return import_react55.default.createElement(Head, _extends({}, rest, {
        isRanking,
        testId: testId && "".concat(testId, "--head")
      }), import_react55.default.createElement("tr", null, cells.map(function(cell, index) {
        var ascendingSortTooltip = cell.ascendingSortTooltip, buttonAriaRoleDescription = cell.buttonAriaRoleDescription, colSpan = cell.colSpan, content = cell.content, descendingSortTooltip = cell.descendingSortTooltip, isIconOnlyHeader = cell.isIconOnlyHeader, isSortable = cell.isSortable, key = cell.key, shouldTruncate = cell.shouldTruncate, cellTestId = cell.testId, width = cell.width, restCellProps = _objectWithoutProperties(cell, _excluded24);
        var headCellId = "head-cell-".concat(index);
        var handleClick = function handleClick2() {
          _this2.setState({
            activeSortButtonId: headCellId
          });
          if (isSortable) {
            onSort(cell)();
          }
        };
        return fg("platform-component-visual-refresh") ? import_react55.default.createElement(HeadCellComponent, _extends({
          colSpan,
          content,
          isFixedSize,
          isIconOnlyHeader,
          isSortable: !!isSortable,
          isRanking,
          key: key || index,
          headCellId,
          activeSortButtonId,
          onClick: handleClick,
          testId: cellTestId || testId,
          shouldTruncate,
          sortOrder: key === sortKey ? sortOrder : void 0,
          width,
          ascendingSortTooltip,
          descendingSortTooltip,
          buttonAriaRoleDescription
        }, restCellProps)) : import_react55.default.createElement(HeadCellComponentOld, _extends({
          colSpan,
          content,
          isFixedSize,
          isSortable: !!isSortable,
          isRanking,
          key: key || index,
          onClick: isSortable ? onSort(cell) : void 0,
          testId: cellTestId || testId,
          shouldTruncate,
          sortOrder: key === sortKey ? sortOrder : void 0,
          width
        }, restCellProps));
      })));
    }
  }]);
}(import_react55.default.Component);
var table_head_default = TableHead;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/stateless.js
var _excluded13 = ["isRankable", "isRanking", "onRankStart", "onRankEnd", "isRankingDisabled"];
function toggleSortOrder(currentSortOrder) {
  switch (currentSortOrder) {
    case DESC:
      return ASC;
    case ASC:
      return DESC;
    default:
      return currentSortOrder;
  }
}
var DynamicTable = function DynamicTable2(_ref) {
  var caption = _ref.caption, head = _ref.head, highlightedRowIndex = _ref.highlightedRowIndex, rows = _ref.rows, sortKey = _ref.sortKey, sortOrder = _ref.sortOrder, loadingLabel = _ref.loadingLabel, onPageRowsUpdate = _ref.onPageRowsUpdate, testId = _ref.testId, passedDownTotalRows = _ref.totalRows, label = _ref.label, _ref$isLoading = _ref.isLoading, isLoading = _ref$isLoading === void 0 ? false : _ref$isLoading, _ref$isFixedSize = _ref.isFixedSize, isFixedSize = _ref$isFixedSize === void 0 ? false : _ref$isFixedSize, _ref$rowsPerPage = _ref.rowsPerPage, rowsPerPage = _ref$rowsPerPage === void 0 ? Infinity : _ref$rowsPerPage, _ref$onSetPage = _ref.onSetPage, onSetPage = _ref$onSetPage === void 0 ? noop : _ref$onSetPage, _ref$onSort = _ref.onSort, providedOnSort = _ref$onSort === void 0 ? noop : _ref$onSort, _ref$page = _ref.page, page = _ref$page === void 0 ? 1 : _ref$page, emptyView = _ref.emptyView, _ref$isRankable = _ref.isRankable, isRankable = _ref$isRankable === void 0 ? false : _ref$isRankable, _ref$isRankingDisable = _ref.isRankingDisabled, isRankingDisabled = _ref$isRankingDisable === void 0 ? false : _ref$isRankingDisable, _ref$onRankStart = _ref.onRankStart, onRankStart = _ref$onRankStart === void 0 ? noop : _ref$onRankStart, _ref$onRankEnd = _ref.onRankEnd, providedOnRankEnd = _ref$onRankEnd === void 0 ? noop : _ref$onRankEnd, loadingSpinnerSize = _ref.loadingSpinnerSize, _ref$paginationi18n = _ref.paginationi18n, paginationi18n = _ref$paginationi18n === void 0 ? {
    prev: "Previous Page",
    next: "Next Page",
    label: "Pagination",
    pageLabel: "Page"
  } : _ref$paginationi18n;
  var _useState = (0, import_react56.useState)(false), _useState2 = _slicedToArray(_useState, 2), isRanking = _useState2[0], setIsRanking = _useState2[1];
  var tableBodyRef = (0, import_react56.useRef)(null);
  var onSort = usePlatformLeafEventHandler({
    fn: providedOnSort,
    action: "sorted",
    componentName: "dynamicTable",
    packageName: "@atlaskit/dynamic-table",
    packageVersion: "0.0.0-development"
  });
  var onRankEnd = usePlatformLeafEventHandler({
    fn: providedOnRankEnd,
    action: "ranked",
    componentName: "dynamicTable",
    packageName: "@atlaskit/dynamic-table",
    packageVersion: "0.0.0-development"
  });
  (0, import_react56.useEffect)(function() {
    validateSortKey(sortKey, head);
    assertIsSortable(head);
  }, [sortKey, head]);
  var onSortHandler = function onSortHandler2(item) {
    return function() {
      var key = item.key;
      if (!key) {
        return;
      }
      if (onSort && isRankable && key === sortKey && sortOrder === DESC) {
        onSort({
          key: null,
          sortOrder: null,
          item
        });
        return;
      }
      var sortOrderFormatted = key !== sortKey ? ASC : toggleSortOrder(sortOrder);
      if (onSort) {
        onSort({
          key,
          item,
          sortOrder: sortOrderFormatted
        });
      }
    };
  };
  var onSetPageHandler = function onSetPageHandler2(page2, event) {
    onSetPage(page2, event);
  };
  var onRankStartHandler = function onRankStartHandler2(params) {
    setIsRanking(true);
    onRankStart(params);
  };
  var onRankEndHandler = function onRankEndHandler2(params) {
    setIsRanking(false);
    onRankEnd(params);
  };
  var getSpinnerSize = function getSpinnerSize2() {
    if (loadingSpinnerSize) {
      return loadingSpinnerSize;
    }
    return getPageRows(rows || [], page, rowsPerPage).length > 2 ? LARGE : SMALL;
  };
  var renderEmptyBody = function renderEmptyBody2() {
    if (isLoading) {
      return import_react56.default.createElement(EmptyViewWithFixedHeight, {
        testId
      });
    }
    return emptyView && import_react56.default.createElement(EmptyViewContainer, {
      testId
    }, emptyView);
  };
  var rowsLength = rows && rows.length;
  var totalPages;
  var isTotalPagesControlledExternally = false;
  if (passedDownTotalRows && Number.isInteger(passedDownTotalRows) && rowsPerPage && rowsLength && rowsLength <= passedDownTotalRows) {
    totalPages = Math.ceil(passedDownTotalRows / rowsPerPage);
    isTotalPagesControlledExternally = true;
  } else {
    totalPages = rowsLength && rowsPerPage ? Math.ceil(rowsLength / rowsPerPage) : 0;
  }
  totalPages = totalPages < 1 ? 1 : totalPages;
  var getPageNumber = page > totalPages ? totalPages : page;
  var rowsExist = !!rowsLength;
  var spinnerSize = getSpinnerSize();
  var emptyBody = renderEmptyBody();
  return import_react56.default.createElement(import_react56.default.Fragment, null, import_react56.default.createElement(LoadingContainerAdvanced, {
    isLoading: isLoading && rowsExist,
    spinnerSize,
    targetRef: function targetRef() {
      return tableBodyRef.current;
    },
    testId,
    loadingLabel
  }, import_react56.default.createElement(Table, {
    isFixedSize,
    "aria-label": label,
    hasDataRow: rowsExist,
    testId,
    isLoading
  }, !!caption && import_react56.default.createElement(Caption, null, caption), head && import_react56.default.createElement(table_head_default, {
    head,
    onSort: onSortHandler,
    sortKey,
    sortOrder,
    isRanking,
    isRankable,
    testId
  }), rowsExist && import_react56.default.createElement(TableBody, {
    ref: tableBodyRef,
    highlightedRowIndex,
    rows,
    head,
    sortKey,
    sortOrder,
    rowsPerPage,
    page: getPageNumber,
    isFixedSize: isFixedSize || false,
    onPageRowsUpdate,
    isTotalPagesControlledExternally,
    testId,
    isRankable,
    isRanking,
    onRankStart: onRankStartHandler,
    onRankEnd: onRankEndHandler,
    isRankingDisabled: isRankingDisabled || isLoading || false
  }))), totalPages <= 1 ? null : (
    // only show pagination if there's MORE than 1 page
    import_react56.default.createElement(PaginationWrapper, {
      testId
    }, import_react56.default.createElement(ManagedPagination, {
      value: getPageNumber,
      onChange: onSetPageHandler,
      total: totalPages,
      i18n: paginationi18n,
      isDisabled: isLoading,
      testId
    }))
  ), !rowsExist && emptyBody && import_react56.default.createElement(LoadingContainer, {
    isLoading,
    spinnerSize: LARGE,
    testId,
    loadingLabel
  }, emptyBody));
};
var RankableTableBody = (0, import_react56.lazy)(function() {
  return import(
    /* webpackChunkName: '@atlaskit-internal_dynamic-table' */
    "./body-BIRZSC76.js"
  );
});
var TableBody = (0, import_react56.forwardRef)(function TableBody2(_ref2, ref) {
  var _ref2$isRankable = _ref2.isRankable, isRankable = _ref2$isRankable === void 0 ? false : _ref2$isRankable, isRanking = _ref2.isRanking, onRankStart = _ref2.onRankStart, onRankEnd = _ref2.onRankEnd, isRankingDisabled = _ref2.isRankingDisabled, bodyProps = _objectWithoutProperties(_ref2, _excluded13);
  var canRank = isRankable && !bodyProps.sortKey;
  var _useState3 = (0, import_react56.useState)(false), _useState4 = _slicedToArray(_useState3, 2), canRenderRankable = _useState4[0], setCanRenderRankable = _useState4[1];
  (0, import_react56.useEffect)(function() {
    if (canRank) {
      setCanRenderRankable(true);
    }
  }, [canRank]);
  var nonRankableBody = import_react56.default.createElement(body_default, _extends({
    ref
  }, bodyProps));
  return canRank && canRenderRankable ? import_react56.default.createElement(ErrorBoundary, {
    fallback: nonRankableBody
  }, import_react56.default.createElement(import_react56.Suspense, {
    fallback: nonRankableBody
  }, import_react56.default.createElement(RankableTableBody, _extends({
    ref
  }, bodyProps, {
    isRanking,
    onRankStart,
    onRankEnd,
    isRankingDisabled
  })))) : nonRankableBody;
});
var stateless_default = DynamicTable;

// node_modules/@atlaskit/dynamic-table/dist/esm/components/stateful.js
function _callSuper9(t, o, e) {
  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct9() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
}
function _isNativeReflectConstruct9() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    }));
  } catch (t2) {
  }
  return (_isNativeReflectConstruct9 = function _isNativeReflectConstruct10() {
    return !!t;
  })();
}
var DynamicTable3 = function(_React$Component) {
  function DynamicTable4() {
    var _this;
    _classCallCheck(this, DynamicTable4);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper9(this, DynamicTable4, [].concat(args));
    _defineProperty(_this, "state", {
      page: _this.props.defaultPage,
      sortKey: _this.props.defaultSortKey,
      sortOrder: _this.props.defaultSortOrder,
      rows: _this.props.rows
    });
    _defineProperty(_this, "onSetPageHandler", function(page, analyticsEvent) {
      var onSetPage = _this.props.onSetPage;
      if (onSetPage) {
        onSetPage(page, analyticsEvent);
        _this.setState({
          page
        });
      }
    });
    _defineProperty(_this, "onSortHandler", function(_ref, analyticsEvent) {
      var key = _ref.key, item = _ref.item, sortOrder = _ref.sortOrder;
      var onSort = _this.props.onSort;
      if (onSort) {
        onSort({
          key,
          item,
          sortOrder
        }, analyticsEvent);
        _this.setState({
          sortKey: key,
          sortOrder
        });
      }
    });
    _defineProperty(_this, "onRankEndIfExistsHandler", function(params) {
      if (_this.props.onRankEnd) {
        _this.props.onRankEnd(params);
      }
    });
    _defineProperty(_this, "onRankEndHandler", function(params) {
      var destination = params.destination;
      var _this$state = _this.state, rows = _this$state.rows, page = _this$state.page;
      var rowsPerPage = _this.props.rowsPerPage;
      if (!destination || !rows) {
        _this.onRankEndIfExistsHandler(params);
        return;
      }
      var reordered = reorderRows(params, rows, page, rowsPerPage);
      _this.setState({
        rows: reordered
      });
      _this.onRankEndIfExistsHandler(params);
    });
    return _this;
  }
  _inherits(DynamicTable4, _React$Component);
  return _createClass(DynamicTable4, [{
    key: "UNSAFE_componentWillReceiveProps",
    value: function UNSAFE_componentWillReceiveProps(newProps) {
      var sortKey = newProps.sortKey || this.state.sortKey;
      var sortOrder = newProps.sortOrder || this.state.sortOrder;
      var page = newProps.page || this.state.page;
      this.setState({
        page,
        sortKey,
        sortOrder,
        rows: newProps.rows
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state2 = this.state, page = _this$state2.page, sortKey = _this$state2.sortKey, sortOrder = _this$state2.sortOrder, rows = _this$state2.rows;
      var _this$props = this.props, caption = _this$props.caption, emptyView = _this$props.emptyView, head = _this$props.head, highlightedRowIndex = _this$props.highlightedRowIndex, loadingSpinnerSize = _this$props.loadingSpinnerSize, isLoading = _this$props.isLoading, loadingLabel = _this$props.loadingLabel, isFixedSize = _this$props.isFixedSize, isRankable = _this$props.isRankable, isRankingDisabled = _this$props.isRankingDisabled, rowsPerPage = _this$props.rowsPerPage, paginationi18n = _this$props.paginationi18n, onRankStart = _this$props.onRankStart, onPageRowsUpdate = _this$props.onPageRowsUpdate, testId = _this$props.testId, label = _this$props.label;
      return import_react57.default.createElement(stateless_default, {
        paginationi18n,
        caption,
        emptyView,
        head,
        highlightedRowIndex,
        loadingSpinnerSize,
        isLoading,
        loadingLabel,
        isFixedSize,
        onSetPage: this.onSetPageHandler,
        onSort: this.onSortHandler,
        page,
        rows,
        rowsPerPage,
        sortKey,
        sortOrder,
        isRankable,
        isRankingDisabled,
        onRankEnd: this.onRankEndHandler,
        onRankStart,
        onPageRowsUpdate,
        testId,
        label
      });
    }
  }]);
}(import_react57.default.Component);
_defineProperty(DynamicTable3, "defaultProps", {
  defaultPage: 1,
  isLoading: false,
  isFixedSize: false,
  isRankable: false,
  onSetPage: noop,
  onSort: noop,
  rowsPerPage: Infinity
});
export {
  stateless_default as DynamicTableStateless,
  DynamicTable3 as default
};
//# sourceMappingURL=@atlaskit_dynamic-table.js.map

import {
  require_person
} from "./chunk-ZUD3FI22.js";
import {
  G300,
  G400,
  N0,
  N200,
  N40,
  N500,
  P300,
  R300,
  R400
} from "./chunk-XIW5VD7B.js";
import {
  base_new_exports,
  init_base_new
} from "./chunk-A6BIF3LE.js";
import {
  text_default,
  useId
} from "./chunk-3AN7UMVP.js";
import "./chunk-XUSVWCLU.js";
import "./chunk-TLEFSZT7.js";
import "./chunk-CGH4DJNJ.js";
import "./chunk-THB4Y6I7.js";
import {
  base_exports,
  init_base
} from "./chunk-6B65WPO5.js";
import "./chunk-KXQMNIDH.js";
import "./chunk-ATF5PCW4.js";
import {
  useAnalyticsEvents
} from "./chunk-7SLACSS6.js";
import {
  fg,
  init_esm
} from "./chunk-D7HT2YMK.js";
import {
  _slicedToArray,
  init_slicedToArray
} from "./chunk-OBM4VKST.js";
import "./chunk-SHSMMZOB.js";
import {
  ax,
  init_runtime
} from "./chunk-ZNWH4LFA.js";
import {
  _defineProperty,
  init_defineProperty
} from "./chunk-LBGAJG32.js";
import "./chunk-AAY5IJNO.js";
import {
  _extends,
  init_extends
} from "./chunk-64QIVKMX.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/icon/core/person.js
var require_person2 = __commonJS({
  "node_modules/@atlaskit/icon/core/person.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var PersonIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "PersonIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8 1.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5M4 4a4 4 0 1 1 8 0 4 4 0 0 1-8 0m-2 9a3.75 3.75 0 0 1 3.75-3.75h4.5A3.75 3.75 0 0 1 14 13v2h-1.5v-2a2.25 2.25 0 0 0-2.25-2.25h-4.5A2.25 2.25 0 0 0 3.5 13v2H2z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    PersonIcon2.displayName = "PersonIcon";
    var _default = exports.default = PersonIcon2;
  }
});

// node_modules/@atlaskit/icon/core/migration/person.js
var require_person3 = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/person.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _person = _interopRequireDefault(require_person2());
    var _person2 = _interopRequireDefault(require_person());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var PersonIcon2 = (props) => _react.default.createElement(_person.default, Object.assign({
      name: "PersonIcon",
      LEGACY_fallbackIcon: _person2.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    PersonIcon2.displayName = "PersonIconMigration";
    var _default = exports.default = PersonIcon2;
  }
});

// node_modules/@atlaskit/icon/core/release.js
var require_release = __commonJS({
  "node_modules/@atlaskit/icon/core/release.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ReleaseIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "ReleaseIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M4 2h3v2h2a.75.75 0 0 1 .648.372L11.18 7h4.069a.75.75 0 0 1 .646 1.132l-2.887 4.886a2 2 0 0 1-1.722.982H2a2 2 0 0 1-2-2V7.75A.75.75 0 0 1 .75 7H2V4.75A.75.75 0 0 1 2.75 4H4zm-.5 5h5.944L8.57 5.5H3.5zm-2 1.5V12a.5.5 0 0 0 .5.5h9.287a.5.5 0 0 0 .43-.246L13.936 8.5z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ReleaseIcon2.displayName = "ReleaseIcon";
    var _default = exports.default = ReleaseIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/ship.js
var require_ship = __commonJS({
  "node_modules/@atlaskit/icon/glyph/ship.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ShipIcon = (props) => _react.default.createElement(_base.Icon, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill="currentcolor" fill-rule="evenodd"><path fill-rule="nonzero" d="M6 12h8v-2H6zM4 8.99C4 8.445 4.456 8 5.002 8h9.996C15.55 8 16 8.451 16 8.99V14H4z"/><path d="M6 7.005C6 5.898 6.898 5 7.998 5h2.004C11.106 5 12 5.894 12 7.005V10H6zm4 0V7H7.999c.005 0 .002.003.002.005V8h2z"/><path fill-rule="nonzero" d="M4.5 17h13.994l1.002-3H4.14zm-2.495-4.012A.862.862 0 0 1 2.883 12h18.393c.55 0 .857.417.681.944l-1.707 5.112c-.174.521-.758.944-1.315.944H3.725a1.15 1.15 0 0 1-1.118-.988z"/></g></svg>`
    }, props));
    ShipIcon.displayName = "ShipIcon";
    var _default = exports.default = ShipIcon;
  }
});

// node_modules/@atlaskit/icon/core/migration/release--ship.js
var require_release_ship = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/release--ship.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _release = _interopRequireDefault(require_release());
    var _ship = _interopRequireDefault(require_ship());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ReleaseIcon2 = (props) => _react.default.createElement(_release.default, Object.assign({
      name: "ReleaseIcon",
      LEGACY_fallbackIcon: _ship.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    ReleaseIcon2.displayName = "ReleaseIconMigration";
    var _default = exports.default = ReleaseIcon2;
  }
});

// node_modules/@atlaskit/avatar/dist/esm/avatar.js
init_defineProperty();
var React6 = __toESM(require_react());
init_runtime();
var import_react6 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/avatar/dist/esm/avatar.compiled.css";

// node_modules/@atlaskit/avatar/dist/esm/avatar-content.js
init_extends();
init_defineProperty();
var React = __toESM(require_react());
init_runtime();
var import_react2 = __toESM(require_react());
init_esm();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/avatar/dist/esm/avatar-content.compiled.css";

// node_modules/@atlaskit/avatar/dist/esm/context.js
var import_react = __toESM(require_react());
var AvatarContext = (0, import_react.createContext)(void 0);
var useAvatarContext = function useAvatarContext2() {
  return (0, import_react.useContext)(AvatarContext);
};
var defaultAvatarContentProps = {
  as: "span",
  appearance: "circle",
  avatarImage: null,
  ref: null,
  size: "medium"
};
var AvatarContentContext = (0, import_react.createContext)(defaultAvatarContentProps);
var useAvatarContent = function useAvatarContent2() {
  return (0, import_react.useContext)(AvatarContentContext);
};
var EnsureIsInsideAvatarContext = (0, import_react.createContext)(false);
var useEnsureIsInsideAvatar = function useEnsureIsInsideAvatar2() {
  var context = (0, import_react.useContext)(EnsureIsInsideAvatarContext);
  if (!context) {
    throw new Error("Avatar sub-components must be used within a Avatar component.");
  }
};

// node_modules/@atlaskit/avatar/dist/esm/avatar-content.js
var boxShadowCssVar = "--avatar-box-shadow";
var bgColorCssVar = "--avatar-bg-color";
var styles = {
  root: "_19itglyw _12ji1r31 _1qu2glyw _12y31o36 _1reo15vq _18m915vq _v564ieh6 _1e0c1txw _kqswpfqs _4cvr1fhb _1bah1h6o _2lx21bp4 _80om1kw7 _6rthv77o _1pfhv77o _12l2v77o _ahbqv77o _85i5ze3t _1q51ze3t _y4tize3t _bozgze3t _t9ec1aqe _9v7aze3t _qc5o1p41 _z0ai1osq _18postnw _1hfk1j28 _aetrf705 _1peqidpf _11fnglyw _1ejjglyw _mizu194a _1ah3v77o _ra3xnqa1 _128mdkaa _4dave4h9",
  circle: "_2rko1qll _14mj1qll",
  positionRelative: "_kqswh2mm",
  disabled: "_80om13gf _1hfkvuon _1peqs237"
};
var unboundStyles = {
  root: "_vchh1ntv _bfhkcxp3 _16qs1nhn",
  interactive: "_80omtlke _4tpu1g4v _ez1ykb7n _gcm1182g _eeh8kb7n _jlxit94y"
};
var widthHeightMap = {
  xsmall: "_1bsb7vkz _4t3i7vkz",
  small: "_1bsb1tcg _4t3i1tcg",
  medium: "_1bsbzwfg _4t3izwfg",
  large: "_1bsb1ylp _4t3i1ylp",
  xlarge: "_1bsb16xz _4t3i16xz",
  xxlarge: "_1bsb1qr7 _4t3i1qr7"
};
var borderRadiusMap = {
  xsmall: "_2rkolb4i _14mjlb4i",
  small: "_2rkolb4i _14mjlb4i",
  medium: "_2rkofajl _14mjfajl",
  large: "_2rkofajl _14mjfajl",
  xlarge: "_2rko1qi0 _14mj1qi0",
  xxlarge: "_2rkopb1k _14mjpb1k"
};
var AvatarContent = (0, import_react2.forwardRef)(function(_ref, ref) {
  var children = _ref.children;
  useEnsureIsInsideAvatar();
  var _useAvatarContent = useAvatarContent(), Container = _useAvatarContent.as, appearance = _useAvatarContent.appearance, avatarImage = _useAvatarContent.avatarImage, _useAvatarContent$bor = _useAvatarContent.borderColor, borderColor = _useAvatarContent$bor === void 0 ? fg("platform-component-visual-refresh") ? "var(--ds-surface, #FFFFFF)" : "var(--ds-surface-overlay, #FFFFFF)" : _useAvatarContent$bor, href = _useAvatarContent.href, isDisabled = _useAvatarContent.isDisabled, label = _useAvatarContent.label, onClick = _useAvatarContent.onClick, contextRef = _useAvatarContent.ref, tabIndex = _useAvatarContent.tabIndex, target = _useAvatarContent.target, testId = _useAvatarContent.testId, size = _useAvatarContent.size, stackIndex = _useAvatarContent.stackIndex;
  var isInteractive = Boolean(onClick || href || isDisabled);
  return React.createElement(Container, _extends({
    style: _defineProperty(_defineProperty({}, bgColorCssVar, borderColor), boxShadowCssVar, "0 0 0 2px ".concat(borderColor)),
    ref: ref || contextRef,
    "aria-label": isInteractive ? label : void 0,
    onClick,
    tabIndex,
    "data-testid": testId,
    disabled: isDisabled,
    type: Container === "button" ? "button" : void 0
  }, href && {
    href,
    target,
    rel: target === "_blank" ? "noopener noreferrer" : void 0
  }, {
    className: ax([unboundStyles.root, styles.root, borderRadiusMap[size], appearance === "circle" && styles.circle, widthHeightMap[size], stackIndex !== void 0 && styles.positionRelative, isInteractive && !isDisabled && unboundStyles.interactive, isDisabled && styles.disabled])
  }), children || avatarImage);
});

// node_modules/@atlaskit/avatar/dist/esm/internal/avatar-image.js
init_slicedToArray();
var React2 = __toESM(require_react());
init_runtime();
var import_react3 = __toESM(require_react());
var import_person = __toESM(require_person3());
var import_release_ship = __toESM(require_release_ship());
init_esm();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/avatar/dist/esm/internal/avatar-image.compiled.css";
var styles2 = {
  image: "_16jlkb7n _1o9zkb7n _i0dl1osq _1e0c1txw _1bsb1osq _4t3i1osq",
  icon: "_1e0c1txw _1bsb1osq _4t3i1osq",
  iconBg: "_bfhkr4aa",
  iconBGVisualRefresh: "_bfhk1v33",
  circle: "_2rko1rr0"
};
var borderRadiusMap2 = {
  xsmall: "_2rkolb4i",
  small: "_2rkolb4i",
  medium: "_2rkofajl",
  large: "_2rkofajl",
  xlarge: "_2rko1qi0",
  xxlarge: "_2rkopb1k"
};
var nestedSvgStylesMap = {
  xsmall: "_w8l57vkz _17527vkz",
  small: "_w8l51tcg _17521tcg",
  medium: "_w8l5zwfg _1752zwfg",
  large: "_w8l51ylp _17521ylp",
  xlarge: "_w8l516xz _175216xz",
  xxlarge: "_w8l51qr7 _17521qr7"
};
var AvatarImage = function AvatarImage2(_ref) {
  var _ref$alt = _ref.alt, alt = _ref$alt === void 0 ? "" : _ref$alt, src = _ref.src, appearance = _ref.appearance, size = _ref.size, testId = _ref.testId, imgLoading = _ref.imgLoading;
  var _useState = (0, import_react3.useState)(false), _useState2 = _slicedToArray(_useState, 2), hasImageErrored = _useState2[0], setHasImageErrored = _useState2[1];
  (0, import_react3.useEffect)(function() {
    setHasImageErrored(false);
  }, [src]);
  if (!src || hasImageErrored) {
    return React2.createElement("span", {
      className: ax([styles2.icon, fg("platform-component-visual-refresh") ? styles2.iconBGVisualRefresh : styles2.iconBg, nestedSvgStylesMap[size]])
    }, appearance === "circle" ? React2.createElement(import_person.default, {
      label: alt,
      color: fg("platform-component-visual-refresh") ? "var(--ds-icon-subtle, #626F86)" : "var(--ds-icon-inverse, #FFFFFF)",
      testId: testId && "".concat(testId, "--person"),
      spacing: "spacious",
      LEGACY_secondaryColor: "var(--ds-icon-subtle, #626F86)"
    }) : React2.createElement(import_release_ship.default, {
      label: alt,
      color: fg("platform-component-visual-refresh") ? "var(--ds-icon-subtle, #626F86)" : "var(--ds-icon-inverse, #FFFFFF)",
      testId: testId && "".concat(testId, "--ship"),
      spacing: "spacious",
      LEGACY_secondaryColor: "var(--ds-icon-subtle, #626F86)"
    }));
  }
  return React2.createElement("img", {
    loading: imgLoading,
    src,
    alt,
    "data-testid": testId && "".concat(testId, "--image"),
    onError: function onError() {
      return setHasImageErrored(true);
    },
    "aria-hidden": !alt ? true : void 0,
    "data-vc": testId ? "".concat(testId, "--image") : "avatar-image",
    "data-ssr-placeholder-ignored": true,
    className: ax([styles2.image, borderRadiusMap2[size], appearance === "circle" && styles2.circle])
  });
};
var avatar_image_default = AvatarImage;

// node_modules/@atlaskit/avatar/dist/esm/presence.js
var React4 = __toESM(require_react());
init_runtime();
var import_react4 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/avatar/dist/esm/presence.compiled.css";

// node_modules/@atlaskit/avatar/dist/esm/internal/icon-wrapper.js
var React3 = __toESM(require_react());
init_runtime();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/avatar/dist/esm/internal/icon-wrapper.compiled.css";
var styles3 = {
  root: "_2rko1qll _1reo15vq _18m915vq _189e1dm9 _1dqonqa1 _1e0c1txw _vchhusvi _1bsb1osq _4t3i1osq _4cvr1h6o _ae4v1h6o _bfhk1bhr"
};
var unboundStyles2 = {
  root: "_1h6d1bhr"
};
var IconWrapper = function IconWrapper2(_ref) {
  var bgColor = _ref.bgColor, children = _ref.children;
  return React3.createElement("span", {
    role: "presentation",
    style: {
      borderColor: bgColor,
      backgroundColor: bgColor
    },
    className: ax([styles3.root, unboundStyles2.root])
  }, children);
};
var icon_wrapper_default = IconWrapper;

// node_modules/@atlaskit/avatar/dist/esm/presence.js
var BusyIndicator = React4.createElement(import_react4.Fragment, null, React4.createElement("circle", {
  fill: "var(--ds-icon-danger, ".concat(R300, ")"),
  cx: "4",
  cy: "4",
  r: "4"
}), React4.createElement("path", {
  fill: "var(--ds-surface-overlay, ".concat(N0, ")"),
  d: "M3.3,1.9l2.8,2.8c0.2,0.2,0.2,0.5,0,0.7L5.4,6.1c-0.2,0.2-0.5,0.2-0.7,0L1.9,3.3c-0.2-0.2-0.2-0.5,0-0.7l0.7-0.7C2.8,1.7,3.1,1.7,3.3,1.9z"
}));
var FocusIndicator = React4.createElement(import_react4.Fragment, null, React4.createElement("path", {
  fill: "var(--ds-icon-discovery, ".concat(P300, ")"),
  d: "M4,8 C1.790861,8 0,6.209139 0,4 C0,1.790861 1.790861,0 4,0 C6.209139,0 8,1.790861 8,4 C8,6.209139 6.209139,8 4,8 Z M4,6.66666667 C5.47275933,6.66666667 6.66666667,5.47275933 6.66666667,4 C6.66666667,2.52724067 5.47275933,1.33333333 4,1.33333333 C2.52724067,1.33333333 1.33333333,2.52724067 1.33333333,4 C1.33333333,5.47275933 2.52724067,6.66666667 4,6.66666667 Z M4,5.33333333 C3.26362033,5.33333333 2.66666667,4.73637967 2.66666667,4 C2.66666667,3.26362033 3.26362033,2.66666667 4,2.66666667 C4.73637967,2.66666667 5.33333333,3.26362033 5.33333333,4 C5.33333333,4.73637967 4.73637967,5.33333333 4,5.33333333 Z"
}));
var OfflineIndicator = React4.createElement(import_react4.Fragment, null, React4.createElement("path", {
  fill: "var(--ds-text-subtlest, ".concat(N200, ")"),
  d: "M4,8 C6.209139,8 8,6.209139 8,4 C8,1.790861 6.209139,0 4,0 C1.790861,0 0,1.790861 0,4 C0,6.209139 1.790861,8 4,8 Z M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z"
}), React4.createElement("path", {
  fill: "var(--ds-surface-overlay, ".concat(N40, ")"),
  d: "M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z"
}));
var OnlineIndicator = React4.createElement("circle", {
  fill: "var(--ds-icon-success, ".concat(G300, ")"),
  cx: "4",
  cy: "4",
  r: "4"
});
function getPresence(presence) {
  switch (presence) {
    case "busy":
      return BusyIndicator;
    case "focus":
      return FocusIndicator;
    case "offline":
      return OfflineIndicator;
    case "online":
      return OnlineIndicator;
  }
}
var AvatarPresence = function AvatarPresence2(_ref) {
  var borderColor = _ref.borderColor, children = _ref.children, presence = _ref.presence;
  return React4.createElement(icon_wrapper_default, {
    bgColor: borderColor
  }, presence ? React4.createElement("svg", {
    height: "100%",
    version: "1.1",
    viewBox: "0 0 8 8",
    width: "100%",
    xmlns: "http://www.w3.org/2000/svg"
  }, getPresence(presence)) : children);
};
var presence_default = AvatarPresence;
var styles4 = {
  root: "_kqswstnw _lcxvglyw"
};
var iconSizeMap = {
  small: "_4t3i1crf _1bsb1crf",
  medium: "_4t3idlk8 _1bsbdlk8",
  large: "_4t3io7ao _1bsbo7ao",
  xlarge: "_4t3if6fq _1bsbf6fq"
};
var iconOffsetMap = {
  square: "_94n5myb0 _1xi2myb0",
  small: "_94n5idpf _1xi2idpf",
  medium: "_94n5idpf _1xi2idpf",
  large: "_94n5t94y _1xi2t94y",
  xlarge: "_94n51v6z _1xi21v6z"
};
var PresenceWrapper = function PresenceWrapper2(_ref2) {
  var size = _ref2.size, appearance = _ref2.appearance, children = _ref2.children, borderColor = _ref2.borderColor, presence = _ref2.presence, testId = _ref2.testId;
  return React4.createElement("span", {
    "aria-hidden": "true",
    "data-testid": testId && "".concat(testId, "--presence"),
    className: ax([styles4.root, iconSizeMap[size], iconOffsetMap[size], appearance === "square" && iconOffsetMap["square"]])
  }, React4.createElement(AvatarPresence, {
    borderColor,
    presence: !children ? presence : void 0
  }, children));
};

// node_modules/@atlaskit/avatar/dist/esm/status.js
var React5 = __toESM(require_react());
init_runtime();
var import_react5 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/avatar/dist/esm/status.compiled.css";
var styles5 = {
  root: "_kqswstnw"
};
var iconSizeMap2 = {
  small: "_4t3i1crf _1bsb1crf",
  medium: "_4t3idlk8 _1bsbdlk8",
  large: "_4t3io7ao _1bsbo7ao",
  xlarge: "_4t3if6fq _1bsbf6fq"
};
var iconOffsetMap2 = {
  square: "_1xi2idpf _154iidpf",
  small: "_1xi2idpf _154iidpf",
  medium: "_1xi2idpf _154iidpf",
  large: "_1xi2t94y _154it94y",
  xlarge: "_1xi21v6z _154i1v6z"
};
var ApprovedIndicator = React5.createElement(import_react5.Fragment, null, React5.createElement("circle", {
  fill: "var(--ds-icon-success, ".concat(G400, ")"),
  cx: "4",
  cy: "4",
  r: "4"
}), React5.createElement("path", {
  fill: "var(--ds-surface-overlay, ".concat(N0, ")"),
  d: "M2.47140452,3.52859548 C2.21105499,3.26824595 1.78894501,3.26824595 1.52859548,3.52859548 C1.26824595,3.78894501 1.26824595,4.21105499 1.52859548,4.47140452 L2.86192881,5.80473785 C3.12227834,6.06508738 3.54438833,6.06508738 3.80473785,5.80473785 L6.47140452,3.13807119 C6.73175405,2.87772166 6.73175405,2.45561167 6.47140452,2.19526215 C6.21105499,1.93491262 5.78894501,1.93491262 5.52859548,2.19526215 L3.33333333,4.39052429 L2.47140452,3.52859548 Z"
}));
var DeclinedIndicator = React5.createElement(import_react5.Fragment, null, React5.createElement("circle", {
  fill: "var(--ds-icon-danger, ".concat(R400, ")"),
  cx: "4",
  cy: "4",
  r: "4"
}), React5.createElement("path", {
  fill: "var(--ds-surface-overlay, ".concat(N0, ")"),
  d: "M4.890661,4.0088336 L5.81806461,3.07802178 C6.06167933,2.83351177 6.06048933,2.43826992 5.81540668,2.19522442 C5.57032402,1.95217891 5.17415651,1.95336612 4.93054179,2.19787613 L4.00765946,3.12415007 L3.06906871,2.18377143 C2.82523777,1.93947602 2.42906937,1.93863765 2.18420182,2.18189887 C1.93933427,2.42516008 1.93849394,2.82040282 2.18232488,3.06469822 L3.12544091,4.00961077 L2.20275024,4.93569234 C1.95913552,5.18020236 1.96032551,5.5754442 2.20540817,5.81848971 C2.45049083,6.06153521 2.84665833,6.060348 3.09027306,5.81583799 L4.00844245,4.89429431 L4.9092123,5.79678001 C5.15304324,6.04107541 5.54921164,6.04191379 5.79407919,5.79865257 C6.03894674,5.55539135 6.03978708,5.16014862 5.79595614,4.91585321 L4.890661,4.0088336 Z"
}));
var LockedIndicator = React5.createElement(import_react5.Fragment, null, React5.createElement("circle", {
  fill: "var(--ds-text-subtlest, ".concat(N40, ")"),
  cx: "4",
  cy: "4",
  r: "4"
}), React5.createElement("path", {
  fill: "var(--ds-surface-overlay, ".concat(N500, ")"),
  d: "M4.13074827,1.21766493 L4.10368158,1.21766493 C3.36340745,1.21766493 2.76388015,1.80793503 2.76388015,2.5367787 L2.76388015,3.21632216 L3.44054754,3.21632216 L3.44054754,2.54344089 C3.44054754,2.17901906 3.74031119,1.88388401 4.11044825,1.88388401 L4.1239816,1.88388401 C4.49411866,1.88388401 4.79388232,2.17901906 4.79388232,2.54344089 L4.79388232,3.21632216 L5.47054971,3.21632216 L5.47054971,2.5367787 C5.47054971,1.80793503 4.8710224,1.21766493 4.13074827,1.21766493 M2.76388015,3.21632216 L3.44054754,3.21632216 L3.44054754,3.88254123 L2.76388015,3.88254123 L2.76388015,3.21632216 Z M4.79388232,3.21632216 L5.47054971,3.21632216 L5.47054971,3.88254123 L4.79388232,3.88254123 L4.79388232,3.21632216 Z M4.79401765,3.88254123 L3.44068287,3.88254123 L2.76401548,3.88254123 C2.39049508,3.88254123 2.08734809,4.18100738 2.08734809,4.54876031 L2.08734809,5.54808892 C2.08734809,6.10000287 2.53735205,6.54741753 3.09094491,6.54741753 L5.14375561,6.54741753 C5.69802683,6.54741753 6.14735243,6.10385072 6.14735243,5.54808892 L6.14735243,4.54876031 C6.14735243,4.18100738 5.84420544,3.88254123 5.47068504,3.88254123 L4.79401765,3.88254123 Z"
}));
function getStatus(status) {
  switch (status) {
    case "approved":
      return ApprovedIndicator;
    case "declined":
      return DeclinedIndicator;
    case "locked":
      return LockedIndicator;
  }
}
var AvatarStatus = function AvatarStatus2(_ref) {
  var borderColor = _ref.borderColor, children = _ref.children, status = _ref.status;
  return React5.createElement(icon_wrapper_default, {
    bgColor: borderColor
  }, status ? React5.createElement("svg", {
    height: "100%",
    version: "1.1",
    viewBox: "0 0 8 8",
    width: "100%",
    xmlns: "http://www.w3.org/2000/svg"
  }, getStatus(status)) : children);
};
var status_default = AvatarStatus;
var StatusWrapper = function StatusWrapper2(_ref2) {
  var size = _ref2.size, status = _ref2.status, appearance = _ref2.appearance, borderColor = _ref2.borderColor, children = _ref2.children, testId = _ref2.testId;
  return React5.createElement("span", {
    "aria-hidden": "true",
    "data-testid": testId && "".concat(testId, "--status"),
    className: ax([styles5.root, iconSizeMap2[size], iconOffsetMap2[size], appearance === "square" && iconOffsetMap2["square"]])
  }, React5.createElement(AvatarStatus, {
    borderColor,
    status: !children ? status : void 0
  }, children));
};

// node_modules/@atlaskit/avatar/dist/esm/utilities.js
var getCustomElement = function getCustomElement2(isDisabled, href, onClick) {
  if (href && !isDisabled) {
    return "a";
  }
  if (onClick || isDisabled) {
    return "button";
  }
  return "span";
};

// node_modules/@atlaskit/avatar/dist/esm/avatar.js
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var packageName = "@atlaskit/avatar";
var packageVersion = "25.1.18";
var Avatar = (0, import_react6.forwardRef)(function(_ref, ref) {
  var analyticsContext = _ref.analyticsContext, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "circle" : _ref$appearance, label = _ref.label, borderColor = _ref.borderColor, children = _ref.children, href = _ref.href, isDisabled = _ref.isDisabled, name = _ref.name, onClick = _ref.onClick, presence = _ref.presence, sizeProp = _ref.size, src = _ref.src, stackIndex = _ref.stackIndex, status = _ref.status, target = _ref.target, testId = _ref.testId, _ref$as = _ref.as, AvatarContainer = _ref$as === void 0 ? "div" : _ref$as, _ref$isDecorative = _ref.isDecorative, isDecorative = _ref$isDecorative === void 0 ? false : _ref$isDecorative, imgLoading = _ref.imgLoading;
  var _useAnalyticsEvents = useAnalyticsEvents(), createAnalyticsEvent = _useAnalyticsEvents.createAnalyticsEvent;
  var context = useAvatarContext();
  var size = sizeProp || (context === null || context === void 0 ? void 0 : context.size) || "medium";
  var customPresenceNode = (0, import_react6.isValidElement)(presence) ? presence : null;
  var customStatusNode = (0, import_react6.isValidElement)(status) ? status : null;
  var isValidIconSize = size !== "xxlarge" && size !== "xsmall";
  var lastAnalytics = (0, import_react6.useRef)(analyticsContext);
  var labelId = useId();
  (0, import_react6.useEffect)(function() {
    lastAnalytics.current = analyticsContext;
  }, [analyticsContext]);
  var onClickHandler = (0, import_react6.useCallback)(function(event) {
    if (isDisabled || typeof onClick !== "function") {
      return;
    }
    var analyticsEvent = createAnalyticsEvent({
      action: "clicked",
      actionSubject: "avatar",
      attributes: {
        componentName: "avatar",
        packageName,
        packageVersion
      }
    });
    var context2 = _objectSpread({
      componentName: "avatar",
      packageName,
      packageVersion
    }, lastAnalytics.current);
    analyticsEvent.context.push(context2);
    var clone = analyticsEvent.clone();
    if (clone) {
      clone.fire("atlaskit");
    }
    onClick(event, analyticsEvent);
  }, [createAnalyticsEvent, isDisabled, onClick]);
  var isPresence = isValidIconSize && presence && !status;
  var isStatus = isValidIconSize && status;
  var defaultLabel = [name, isStatus && !customStatusNode && "(".concat(status, ")"), isPresence && !customPresenceNode && "(".concat(presence, ")")].filter(Boolean).join(" ");
  var isInteractive = onClick || href || isDisabled;
  var containerShouldBeImage = Boolean(!isInteractive && defaultLabel);
  return React6.createElement(EnsureIsInsideAvatarContext.Provider, {
    value: true
  }, React6.createElement(AvatarContainer, {
    "data-testid": testId,
    role: containerShouldBeImage ? "img" : void 0,
    "aria-labelledby": containerShouldBeImage && !isDecorative ? labelId : void 0,
    style: {
      zIndex: stackIndex
    },
    className: ax(["_12ji1r31 _1qu2glyw _12y3idpf _1e0c1o8l _kqswh2mm"])
  }, React6.createElement(AvatarContentContext.Provider, {
    value: {
      as: getCustomElement(isDisabled, href, onClick),
      appearance,
      borderColor,
      href,
      isDisabled,
      label: label || defaultLabel,
      onClick: isInteractive ? onClickHandler : void 0,
      ref,
      size,
      stackIndex,
      target,
      testId: testId ? "".concat(testId, "--inner") : void 0,
      avatarImage: React6.createElement(avatar_image_default, {
        alt: !containerShouldBeImage && src ? name : void 0,
        src,
        appearance,
        size,
        testId,
        imgLoading
      })
    }
  }, children || React6.createElement(AvatarContent, null)), isPresence && React6.createElement(PresenceWrapper, {
    appearance,
    size,
    presence: typeof presence === "string" ? presence : void 0,
    testId
  }, customPresenceNode), isStatus && React6.createElement(StatusWrapper, {
    appearance,
    size,
    borderColor,
    status: typeof status === "string" ? status : void 0,
    testId
  }, customStatusNode), containerShouldBeImage ? React6.createElement("span", {
    "data-testid": testId && "".concat(testId, "--label"),
    id: labelId,
    hidden: true
  }, defaultLabel) : void 0));
});
Avatar.displayName = "Avatar";
var avatar_default = Avatar;

// node_modules/@atlaskit/avatar/dist/esm/avatar-item.js
init_extends();
init_defineProperty();
var React7 = __toESM(require_react());
init_runtime();
var import_react7 = __toESM(require_react());
init_esm();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/avatar/dist/esm/avatar-item.compiled.css";
var bgColorCssVar2 = "--avatar-item-bg-color";
var styles6 = {
  root: "_2rkofajl _12ji1r31 _1qu2glyw _12y31o36 _4bfu1r31 _1hmsglyw _ajmmnqa1 _1h6d1j28 _1dqonqa1 _189e1dm9 _1e0c1txw _vchhusvi _1bsb1osq _4cvr1h6o _bfhk1g13 _syaz1kw7 _1wyb1kw7 _zg8l4jg8 _k48pi7a9 _vwz4kb7n _6rthze3t _1pfhze3t _12l2ze3t _ahbqze3t _85i51b66 _1q511b66 _y4ti1b66 _bozg1b66 _y3gn1e5h",
  rootDisabled: "_80om13gf _tzy41e4z _lcxvglyw",
  rootInteractive: "_nt751r31 _49pcglyw _1hvw1o36 _858u194a _9oik1r31 _1bnxglyw _jf4cnqa1 _irr314ae _d0altlke _1di61l7b",
  avatarItem: "_16jlkb7n _1o9zkb7n _i0dl1osq _1ul9idpf _p12f1osq _vwz419ii _bozgu2gc",
  baseText: "_1e0c1ule _syaz1fxt",
  truncation: "_1reo15vq _1bto1l2s _o5721q9c",
  secondaryTextLegacy: "_syaz131l _1wyb181o"
};
var AvatarItem = (0, import_react7.forwardRef)(function(_ref, ref) {
  var avatar = _ref.avatar, _ref$backgroundColor = _ref.backgroundColor, backgroundColor = _ref$backgroundColor === void 0 ? "transparent" : _ref$backgroundColor, isTruncationDisabled = _ref.isTruncationDisabled, href = _ref.href, isDisabled = _ref.isDisabled, onClick = _ref.onClick, primaryText = _ref.primaryText, secondaryText = _ref.secondaryText, target = _ref.target, testId = _ref.testId, label = _ref.label;
  var Container = getCustomElement(isDisabled, href, onClick);
  var isInteractive = Boolean(onClick || href);
  return React7.createElement(Container, _extends({
    style: _defineProperty({}, bgColorCssVar2, backgroundColor),
    ref,
    "aria-label": isInteractive ? label : void 0,
    onClick,
    disabled: isDisabled,
    "data-testid": testId ? "".concat(testId, "--itemInner") : void 0,
    type: Container === "button" ? "button" : void 0
  }, href && {
    href,
    target,
    rel: target === "_blank" ? "noopener noreferrer" : void 0
  }, {
    className: ax([styles6.root, isInteractive && styles6.rootInteractive, isDisabled && styles6.rootDisabled])
  }), avatar, React7.createElement("div", {
    className: ax([styles6.avatarItem])
  }, fg("platform.design-system-team.avatar-item-font-size_830x6") ? React7.createElement(import_react7.Fragment, null, React7.createElement(text_default, {
    maxLines: isTruncationDisabled ? void 0 : 1
  }, primaryText), React7.createElement(text_default, {
    color: "color.text.subtlest",
    maxLines: isTruncationDisabled ? void 0 : 1,
    size: "UNSAFE_small"
  }, secondaryText)) : React7.createElement(import_react7.Fragment, null, React7.createElement("span", {
    className: ax([styles6.baseText, !isTruncationDisabled && styles6.truncation])
  }, primaryText), React7.createElement("span", {
    className: ax([styles6.baseText, styles6.secondaryTextLegacy, !isTruncationDisabled && styles6.truncation])
  }, secondaryText))));
});
AvatarItem.displayName = "AvatarItem";
var avatar_item_default = AvatarItem;

// node_modules/@atlaskit/avatar/dist/esm/skeleton.js
init_defineProperty();
var React8 = __toESM(require_react());
init_runtime();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/avatar/dist/esm/skeleton.compiled.css";
var bgColorCssVar3 = "--avatar-skeleton-background-color";
var styles7 = {
  root: "_2rko1qll _189e1dm9 _1dqonqa1 _1h6d1j28 _1e0c1o8l _bfhk1r8p _tzy4nh7s",
  strongOpacity: "_tzy4clii"
};
var sizeStyles = {
  xsmall: "_1bsb7vkz _4t3i7vkz",
  small: "_1bsb1tcg _4t3i1tcg",
  medium: "_1bsbzwfg _4t3izwfg",
  large: "_1bsb1ylp _4t3i1ylp",
  xlarge: "_1bsb16xz _4t3i16xz",
  xxlarge: "_1bsb1qr7 _4t3i1qr7"
};
var borderRadiusMap3 = {
  xsmall: "_2rkolb4i",
  small: "_2rkolb4i",
  medium: "_2rkofajl",
  large: "_2rkofajl",
  xlarge: "_2rko1qi0",
  xxlarge: "_2rkopb1k"
};
var Skeleton = function Skeleton2(_ref) {
  var size = _ref.size, appearance = _ref.appearance, color = _ref.color, weight = _ref.weight;
  return React8.createElement("div", {
    style: _defineProperty({}, bgColorCssVar3, color !== null && color !== void 0 ? color : "currentColor"),
    className: ax([styles7.root, sizeStyles[size !== null && size !== void 0 ? size : "medium"], appearance === "square" && borderRadiusMap3[size !== null && size !== void 0 ? size : "medium"], weight === "strong" && styles7.strongOpacity])
  });
};
var skeleton_default = Skeleton;

// node_modules/@atlaskit/avatar/dist/esm/constants.js
var AVATAR_SIZES = {
  xsmall: 16,
  small: 24,
  medium: 32,
  large: 40,
  xlarge: 96,
  xxlarge: 128
};
var AVATAR_RADIUS = {
  xsmall: 2,
  small: 2,
  medium: 3,
  large: 3,
  xlarge: 6,
  xxlarge: 12
};
var BORDER_WIDTH = 2;
var ACTIVE_SCALE_FACTOR = 0.9;
export {
  ACTIVE_SCALE_FACTOR,
  AVATAR_RADIUS,
  AVATAR_SIZES,
  AvatarContent,
  AvatarContext,
  avatar_item_default as AvatarItem,
  BORDER_WIDTH,
  presence_default as Presence,
  skeleton_default as Skeleton,
  status_default as Status,
  avatar_default as default,
  useAvatarContext
};
//# sourceMappingURL=@atlaskit_avatar.js.map

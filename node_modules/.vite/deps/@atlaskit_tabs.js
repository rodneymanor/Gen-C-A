import {
  B400,
  B500,
  N30,
  N500
} from "./chunk-XIW5VD7B.js";
import {
  focusable_default,
  text_default
} from "./chunk-TQ3LYX6L.js";
import "./chunk-XUSVWCLU.js";
import "./chunk-KXQMNIDH.js";
import {
  usePlatformLeafEventHandler
} from "./chunk-HFXFD3PR.js";
import "./chunk-OGTB5I7K.js";
import "./chunk-HWV3UU7C.js";
import "./chunk-CGH4DJNJ.js";
import "./chunk-ATF5PCW4.js";
import {
  fg,
  init_esm
} from "./chunk-76ISXXP4.js";
import {
  _arrayWithHoles,
  _iterableToArray,
  _nonIterableRest,
  _slicedToArray,
  init_arrayWithHoles,
  init_nonIterableRest,
  init_slicedToArray
} from "./chunk-XKORHSNM.js";
import {
  _unsupportedIterableToArray,
  init_unsupportedIterableToArray
} from "./chunk-KPKROJMQ.js";
import {
  ax,
  cssCustomPropertyValue,
  init_runtime
} from "./chunk-ZNWH4LFA.js";
import {
  _defineProperty,
  init_defineProperty
} from "./chunk-LBGAJG32.js";
import "./chunk-AAY5IJNO.js";
import "./chunk-64QIVKMX.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/tabs/dist/esm/components/tabs.js
init_defineProperty();

// node_modules/@babel/runtime/helpers/esm/toArray.js
init_arrayWithHoles();
init_unsupportedIterableToArray();
init_nonIterableRest();
function _toArray(r) {
  return _arrayWithHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableRest();
}

// node_modules/@atlaskit/tabs/dist/esm/components/tabs.js
init_slicedToArray();
var React = __toESM(require_react());
init_runtime();
var import_react2 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/tabs/dist/esm/components/tabs.compiled.css";

// node_modules/@atlaskit/tabs/dist/esm/internal/context.js
var import_react = __toESM(require_react());
var TabContext = (0, import_react.createContext)(null);
var TabListContext = (0, import_react.createContext)(null);
var TabPanelContext = (0, import_react.createContext)(null);

// node_modules/@atlaskit/tabs/dist/esm/components/tabs.js
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var analyticsAttributes = {
  componentName: "tabs",
  packageName: "@atlaskit/tabs",
  packageVersion: "0.0.0-development"
};
var getTabPanelWithContext = function getTabPanelWithContext2(_ref) {
  var tabPanel = _ref.tabPanel, index = _ref.index, isSelected = _ref.isSelected, tabsId = _ref.tabsId;
  return (
    // Ensure tabPanel exists in case it has been removed
    tabPanel && React.createElement(TabPanelContext.Provider, {
      value: {
        role: "tabpanel",
        id: "".concat(tabsId, "-").concat(index, "-tab"),
        hidden: isSelected ? void 0 : true,
        "aria-labelledby": "".concat(tabsId, "-").concat(index),
        tabIndex: isSelected ? 0 : -1
      },
      key: index
    }, tabPanel)
  );
};
var Tabs = function Tabs2(props) {
  var _props$shouldUnmountT = props.shouldUnmountTabPanelOnChange, shouldUnmountTabPanelOnChange = _props$shouldUnmountT === void 0 ? false : _props$shouldUnmountT, SelectedType = props.selected, defaultSelected = props.defaultSelected, onChangeProp = props.onChange, id = props.id, analyticsContext = props.analyticsContext, children = props.children, testId = props.testId;
  var _useState = (0, import_react2.useState)(SelectedType || defaultSelected || 0), _useState2 = _slicedToArray(_useState, 2), selectedState = _useState2[0], setSelected = _useState2[1];
  var selected = SelectedType === void 0 ? selectedState : SelectedType;
  var childrenArray = import_react2.Children.toArray(children).filter(function(child) {
    return Boolean(child);
  });
  var _childrenArray = _toArray(childrenArray), tabList = _childrenArray[0], tabPanels = _childrenArray.slice(1);
  var visited = (0, import_react2.useRef)(/* @__PURE__ */ new Set([selected]));
  if (!visited.current.has(selected)) {
    visited.current.add(selected);
  }
  var onChange = (0, import_react2.useCallback)(function(index, analyticsEvent) {
    if (onChangeProp) {
      onChangeProp(index, analyticsEvent);
    }
    setSelected(index);
  }, [onChangeProp]);
  var onChangeAnalytics = usePlatformLeafEventHandler(_objectSpread({
    fn: onChange,
    action: "clicked",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var tabPanelsWithContext = shouldUnmountTabPanelOnChange ? getTabPanelWithContext({
    tabPanel: tabPanels[selected],
    index: selected,
    isSelected: true,
    tabsId: id
  }) : (
    // If a panel has already been visited, don't unmount it
    Array.from(visited.current).map(function(tabIndex) {
      return getTabPanelWithContext({
        tabPanel: tabPanels[tabIndex],
        index: tabIndex,
        isSelected: tabIndex === selected,
        tabsId: id
      });
    })
  );
  return React.createElement("div", {
    "data-testid": testId,
    className: ax(["_1e0c1txw _p12f1osq _1tkeidpf _i0dl1osq _2lx21bp4 _16jlkb7n", "_1c3y1txw _ftfaidpf _18i0kb7n _185bglyw"])
  }, React.createElement(TabListContext.Provider, {
    value: {
      selected,
      onChange: onChangeAnalytics,
      tabsId: id
    }
  }, tabList), React.createElement(import_react2.Fragment, null, tabPanelsWithContext));
};
var tabs_default = Tabs;

// node_modules/@atlaskit/tabs/dist/esm/components/tab-panel.js
var import_react4 = __toESM(require_react());

// node_modules/@atlaskit/tabs/dist/esm/hooks.js
var import_react3 = __toESM(require_react());
var useTab = function useTab2() {
  var tabData = (0, import_react3.useContext)(TabContext);
  if (tabData == null || typeof tabData === "undefined") {
    throw Error("@atlaskit/tabs: A Tab must have a TabList parent.");
  }
  return tabData;
};
var useTabList = function useTabList2() {
  var tabListData = (0, import_react3.useContext)(TabListContext);
  if (tabListData === null || typeof tabListData === "undefined") {
    throw Error("@atlaskit/tabs: A TabList must have a Tabs parent.");
  }
  return tabListData;
};
var useTabPanel = function useTabPanel2() {
  var tabPanelData = (0, import_react3.useContext)(TabPanelContext);
  if (tabPanelData === null || typeof tabPanelData === "undefined") {
    throw Error("@atlaskit/tabs:  A TabPanel must have a Tabs parent.");
  }
  return tabPanelData;
};

// node_modules/@atlaskit/tabs/dist/esm/components/tab-panel.js
var TabPanel = function TabPanel2(_ref) {
  var children = _ref.children, testId = _ref.testId;
  var _useTabPanel = useTabPanel(), role = _useTabPanel.role, id = _useTabPanel.id, hidden = _useTabPanel.hidden, ariaLabelledBy = _useTabPanel["aria-labelledby"], tabIndex = _useTabPanel.tabIndex;
  return import_react4.default.createElement(focusable_default, {
    as: "div",
    isInset: true,
    testId,
    role,
    id,
    hidden,
    "aria-labelledby": ariaLabelledBy,
    tabIndex
  }, import_react4.default.createElement(import_react4.Fragment, null, children));
};
var tab_panel_default = TabPanel;

// node_modules/@atlaskit/tabs/dist/esm/components/tab.js
var import_react5 = __toESM(require_react());
var Tab = (0, import_react5.forwardRef)(function Tab2(_ref, ref) {
  var children = _ref.children, testId = _ref.testId;
  var _useTab = useTab(), onClick = _useTab.onClick, id = _useTab.id, ariaControls = _useTab["aria-controls"], ariaPosinset = _useTab["aria-posinset"], ariaSelected = _useTab["aria-selected"], ariaSetsize = _useTab["aria-setsize"], onKeyDown = _useTab.onKeyDown, role = _useTab.role, tabIndex = _useTab.tabIndex;
  return (
    // eslint-disable-next-line jsx-a11y/no-static-element-interactions
    import_react5.default.createElement(focusable_default, {
      as: "div",
      isInset: true,
      testId,
      onClick,
      id,
      "aria-controls": ariaControls,
      "aria-posinset": ariaPosinset,
      "aria-selected": ariaSelected,
      "aria-setsize": ariaSetsize,
      onKeyDown,
      role,
      tabIndex,
      ref
    }, import_react5.default.createElement(text_default, {
      weight: "medium",
      color: "inherit",
      maxLines: 1
    }, children))
  );
});
var tab_default = Tab;

// node_modules/@atlaskit/tabs/dist/esm/components/tab-list.js
var React4 = __toESM(require_react());
init_runtime();
var import_react6 = __toESM(require_react());
init_esm();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/tabs/dist/esm/components/tab-list.compiled.css";
var TabList = function TabList2(_ref) {
  var children = _ref.children;
  var _useTabList = useTabList(), tabsId = _useTabList.tabsId, selected = _useTabList.selected, onChange = _useTabList.onChange;
  var ref = (0, import_react6.createRef)();
  var childrenArray = import_react6.Children.toArray(children).filter(Boolean);
  var length = childrenArray.length;
  var selectTabByIndex = (0, import_react6.useCallback)(function(index) {
    var _ref$current;
    var newSelectedNode = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelector("[id='".concat(tabsId, "-").concat(index, "']"));
    if (newSelectedNode) {
      newSelectedNode.focus();
    }
    onChange(index);
  }, [tabsId, ref, onChange]);
  var onKeyDown = (0, import_react6.useCallback)(function(e) {
    if (!["ArrowRight", "ArrowLeft", "Home", "End"].includes(e.key)) {
      return;
    }
    e.preventDefault();
    var lastTabIndex = length - 1;
    if (["Home", "End"].includes(e.key)) {
      var _newSelected = e.key === "Home" ? 0 : lastTabIndex;
      selectTabByIndex(_newSelected);
      return;
    }
    var selectedIndex = parseInt(e.currentTarget.getAttribute("aria-posinset") || "0") - 1;
    var modifier = e.key === "ArrowRight" ? 1 : -1;
    var newSelected = selectedIndex + modifier;
    if (newSelected < 0 || newSelected >= length) {
      newSelected = newSelected < 0 ? lastTabIndex : 0;
    }
    selectTabByIndex(newSelected);
  }, [length, selectTabByIndex]);
  var getTabWithContext = (0, import_react6.useCallback)(function(_ref2) {
    var tab = _ref2.tab, isSelected = _ref2.isSelected, index = _ref2.index;
    return React4.createElement(TabContext.Provider, {
      value: {
        onClick: function onClick() {
          return onChange(index);
        },
        onKeyDown,
        "aria-setsize": length,
        role: "tab",
        id: "".concat(tabsId, "-").concat(index),
        "aria-posinset": index + 1,
        "aria-selected": isSelected,
        "aria-controls": "".concat(tabsId, "-").concat(index, "-tab"),
        tabIndex: isSelected ? 0 : -1
      },
      key: index
    }, tab);
  }, [length, onKeyDown, onChange, tabsId]);
  return React4.createElement("div", {
    role: "tablist",
    ref,
    className: ax(["_1e0c1txw _kqswh2mm _85i5ze3t _1q51ze3t _y4tize3t _bozgze3t", fg("platform-component-visual-refresh") ? "_k48p1wq8 _ahbqx0bf _gpbcidpf _10vzidpf _1mmwidpf _15plidpf _7hip15vq _1fud15vq _bb0mh2mm _1quz1425 _rzxytlke _1ofh12x7 _pryi12x7 _1a85u2gc _rmpau2gc _1dze1l2s _1tms1q9c _fiizidpf _1xrmidpf _xyihidpf _166qidpf _1lzufiwc _24g71kw7 _140sidpf _lycustnw _15d8b3bt _1fztidpf _wd7eu2gc _1olcu2gc _1oaz1fgx _w9ewidpf _170tidpf _y1g1idpf _1nvfidpf _1b8dfiwc _1n121kw7 _7p9oidpf _o2e1stnw _16u6b3bt _1yk1idpf _1lbou2gc _1c9uu2gc _1i2072d1 _bppridpf _1mbxidpf _kn0bidpf _wsgdidpf _rsmz12s7 _1m0e1kw7 _93pdidpf _1sglstnw _1ksob3bt _1p9sidpf _1qa1u2gc _1jjcu2gc _fiemln51 _pascidpf _eid3idpf _zr3eidpf _fntnidpf _1mp41kw7 _kfgte4h9 _1cs8stnw _1russudh _1kt9b3bt _1fkridpf _1enwidpf _z5wtu2gc" : "_k48p1wq8 _ahbqx0bf _gpbcidpf _10vzidpf _1mmwidpf _15plidpf _7hip15vq _1fud15vq _bb0mh2mm _1quz1425 _rzxytlke _1ofh12x7 _pryi12x7 _1a85u2gc _rmpau2gc _1dze1l2s _1tms1q9c _fiizidpf _1xrmidpf _xyihidpf _166qidpf _17hylb4i _1lzuownz _24g71kw7 _140sidpf _lycustnw _15d8b3bt _1fztidpf _wd7eu2gc _1olcu2gc _1oaz1fgx _w9ewidpf _170tidpf _y1g1idpf _1nvfidpf _1jaklb4i _1b8downz _1n121kw7 _7p9oidpf _o2e1stnw _16u6b3bt _1yk1idpf _1lbou2gc _1c9uu2gc _1i2072d1 _bppridpf _1mbxidpf _kn0bidpf _wsgdidpf _9r9ulb4i _rsmz73hj _1m0e1kw7 _93pdidpf _1sglstnw _1ksob3bt _1p9sidpf _1qa1u2gc _1jjcu2gc _fiemln51 _pascidpf _eid3idpf _zr3eidpf _fntnidpf _rfx3lb4i _1mp41kw7 _kfgt1dm9 _1cs8stnw _1russudh _1kt9b3bt _1fkridpf _1enwidpf _z5wtu2gc"]),
    style: {
      "--_13a5t4u": cssCustomPropertyValue("var(--ds-text-subtle, ".concat(N500, ")")),
      "--_kkbq40": cssCustomPropertyValue("var(--ds-text-subtle, ".concat(B400, ")")),
      "--_y4kn7q": cssCustomPropertyValue("3px solid ".concat("var(--ds-border, transparent)")),
      "--_71dbsd": cssCustomPropertyValue("var(--ds-text, ".concat(B500, ")")),
      "--_1hfkvbo": cssCustomPropertyValue("var(--ds-text-selected, ".concat(B400, ")")),
      "--_1c11uqn": cssCustomPropertyValue("3px solid ".concat("var(--ds-border-selected, ".concat(B400, ")"))),
      "--_lvpq93": cssCustomPropertyValue("var(--ds-border, ".concat(N30, ")")),
      "--_afs77": cssCustomPropertyValue("var(--ds-border-width-selected, 2px)".concat(" solid ", "var(--ds-border, transparent)")),
      "--_1q7mpl4": cssCustomPropertyValue("var(--ds-border-width-selected, 2px)".concat(" solid ", "var(--ds-border-selected, ".concat(B400, ")")))
    }
  }, childrenArray.map(function(child, index) {
    return getTabWithContext({
      tab: child,
      index,
      isSelected: index === selected
    });
  }));
};
var tab_list_default = TabList;
export {
  tab_default as Tab,
  tab_list_default as TabList,
  tab_panel_default as TabPanel,
  tabs_default as default,
  useTab,
  useTabPanel
};
//# sourceMappingURL=@atlaskit_tabs.js.map

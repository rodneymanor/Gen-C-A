import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __esm,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@compiled/react/dist/esm/runtime/ax.js
function ax(classNames) {
  if (!classNames.length) {
    return;
  }
  if (classNames.length === 1 && classNames[0] && // checking to see if `classNames[0]` is a string that contains other classnames
  !classNames[0].includes(" ")) {
    return classNames[0];
  }
  const map = {};
  for (const value of classNames) {
    if (!value) {
      continue;
    }
    const list = value.split(" ");
    for (const className of list) {
      const key = className.startsWith("_") ? className.slice(0, ATOMIC_GROUP_LENGTH) : className;
      map[key] = className;
    }
  }
  let result = "";
  for (const key in map) {
    result += map[key] + " ";
  }
  if (!result) {
    return;
  }
  return result.trimEnd();
}
var ATOMIC_GROUP_LENGTH;
var init_ax = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/ax.js"() {
    ATOMIC_GROUP_LENGTH = 5;
  }
});

// node_modules/@compiled/react/dist/esm/runtime/dev-warnings.js
var init_dev_warnings = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/dev-warnings.js"() {
  }
});

// node_modules/@compiled/react/dist/esm/runtime/is-server-environment.js
var isJsDomEnvironment, isServerEnvironment;
var init_is_server_environment = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/is-server-environment.js"() {
    isJsDomEnvironment = () => window.name === "nodejs" || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes("Node.js")) || (navigator === null || navigator === void 0 ? void 0 : navigator.userAgent.includes("jsdom"));
    isServerEnvironment = () => {
      if (typeof window === "undefined" || typeof process !== "undefined" && process.versions != null && process.versions.node != null) {
        return true;
      }
      if (isJsDomEnvironment()) {
        return true;
      }
      return false;
    };
  }
});

// node_modules/@compiled/react/dist/esm/runtime/cache.js
var init_cache = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/cache.js"() {
  }
});

// node_modules/@compiled/react/dist/esm/runtime/shorthand.js
var init_shorthand = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/shorthand.js"() {
  }
});

// node_modules/@compiled/react/dist/esm/runtime/sheet.js
var init_sheet = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/sheet.js"() {
    init_cache();
    init_shorthand();
  }
});

// node_modules/@compiled/react/dist/esm/runtime/style-cache.js
var React, import_react, Cache;
var init_style_cache = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/style-cache.js"() {
    React = __toESM(require_react());
    import_react = __toESM(require_react());
    init_cache();
    init_is_server_environment();
    Cache = isServerEnvironment() ? (0, import_react.createContext)(null) : {};
    if (!isServerEnvironment() && typeof document !== "undefined") {
      const ssrStyles = document.querySelectorAll("style[data-cmpld]");
      for (let i = 0; i < ssrStyles.length; i++) {
        document.head.appendChild(ssrStyles[i]);
      }
    }
  }
});

// node_modules/@compiled/react/dist/esm/runtime/style.js
var import_react2;
var init_style = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/style.js"() {
    import_react2 = __toESM(require_react());
    init_dev_warnings();
    init_is_server_environment();
    init_sheet();
    init_style_cache();
  }
});

// node_modules/@compiled/react/dist/esm/runtime/ac.js
function ac(classNames) {
  if (classNames.length <= 1 && !classNames[0])
    return void 0;
  const atomicGroups = /* @__PURE__ */ new Map();
  for (let i = 0; i < classNames.length; i++) {
    const cls = classNames[i];
    if (!cls) {
      continue;
    }
    if (typeof cls === "string") {
      const groups = cls.split(" ");
      for (let x = 0; x < groups.length; x++) {
        const atomic = groups[x];
        const isAtomic = atomic.charCodeAt(0) === UNDERSCORE_UNICODE;
        const isCompressed = isAtomic && atomic.charCodeAt(5) === UNDERSCORE_UNICODE;
        const atomicGroupName = isAtomic ? atomic.slice(0, ATOMIC_GROUP_LENGTH2) : atomic;
        atomicGroups.set(atomicGroupName, isCompressed ? atomic.slice(ATOMIC_GROUP_LENGTH2 + 1) : atomic);
      }
    } else {
      for (const [key, value] of cls.values) {
        atomicGroups.set(key, value);
      }
    }
  }
  return new AtomicGroups(atomicGroups);
}
function memoizedAc(classNames) {
  if (classNames.length <= 1 && !classNames[0])
    return void 0;
  let cacheKey = "";
  for (let i = 0; i < classNames.length; i += 1) {
    const current = classNames[i];
    if (!current)
      continue;
    cacheKey += current + " ";
  }
  cacheKey = cacheKey.slice(0, -1);
  if (cache.has(cacheKey))
    return cache.get(cacheKey);
  const result = ac(classNames);
  cache.set(cacheKey, result);
  return result;
}
var UNDERSCORE_UNICODE, ATOMIC_GROUP_LENGTH2, cache, AtomicGroups, ac_default;
var init_ac = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/ac.js"() {
    init_is_server_environment();
    UNDERSCORE_UNICODE = 95;
    ATOMIC_GROUP_LENGTH2 = 5;
    cache = /* @__PURE__ */ new Map();
    AtomicGroups = class {
      constructor(values) {
        this.values = values;
      }
      toString() {
        let str = "";
        for (const [, value] of this.values) {
          str += value + " ";
        }
        return str.slice(0, -1);
      }
    };
    ac_default = isServerEnvironment() ? ac : memoizedAc;
  }
});

// node_modules/@compiled/react/dist/esm/runtime/css-custom-property.js
function cssCustomPropertyValue(value, suffix, prefix) {
  if (value != void 0) {
    if (suffix) {
      if (prefix) {
        return prefix + value + suffix;
      }
      return value + suffix;
    }
    return value;
  }
  return "var(--c-, )";
}
var init_css_custom_property = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/css-custom-property.js"() {
  }
});

// node_modules/@compiled/react/dist/esm/runtime/index.js
var init_runtime = __esm({
  "node_modules/@compiled/react/dist/esm/runtime/index.js"() {
    init_style();
    init_style_cache();
    init_ax();
    init_ac();
    init_css_custom_property();
  }
});

// node_modules/@compiled/react/dist/esm/runtime.js
var init_runtime2 = __esm({
  "node_modules/@compiled/react/dist/esm/runtime.js"() {
    init_runtime();
  }
});

export {
  ax,
  cssCustomPropertyValue,
  init_runtime2 as init_runtime
};
//# sourceMappingURL=chunk-6RMDKNC5.js.map

import {
  box_default
} from "./chunk-3AN7UMVP.js";
import "./chunk-XUSVWCLU.js";
import "./chunk-UKQCMMS7.js";
import "./chunk-THB4Y6I7.js";
import "./chunk-CGH4DJNJ.js";
import "./chunk-KXQMNIDH.js";
import "./chunk-ATF5PCW4.js";
import "./chunk-7SLACSS6.js";
import {
  fg,
  init_esm
} from "./chunk-D7HT2YMK.js";
import "./chunk-OBM4VKST.js";
import "./chunk-SHSMMZOB.js";
import {
  ax,
  init_runtime
} from "./chunk-ZNWH4LFA.js";
import "./chunk-LBGAJG32.js";
import "./chunk-AAY5IJNO.js";
import "./chunk-64QIVKMX.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/lozenge/dist/esm/lozenge.js
var React = __toESM(require_react());
init_runtime();
var import_react = __toESM(require_react());
init_esm();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/lozenge/dist/esm/lozenge.compiled.css";
var stylesOld = {
  container: "_2rko12b0 _1reo15vq _18m915vq _18zr1b66 _1e0c116y _1kz6184x _kqswpfqs _vchhusvi",
  "text.bold.default": "_syaz15cr",
  "text.bold.inprogress": "_syaz15cr",
  "text.bold.moved": "_syazal3n",
  "text.bold.new": "_syaz15cr",
  "text.bold.removed": "_syaz15cr",
  "text.bold.success": "_syaz15cr",
  "text.subtle.default": "_syazjjyb",
  "text.subtle.inprogress": "_syaz1lpn",
  "text.subtle.moved": "_syaz1tm6",
  "text.subtle.new": "_syaz1mvf",
  "text.subtle.removed": "_syaz1ick",
  "text.subtle.success": "_syaz17fi"
};
var stylesOldUnbounded = {
  text: "_1reo15vq _18m915vq _ect41gqc _1wyb1skh _zg8l4jg8 _k48pmoej _vwz47vkz _1bto1l2s _1p1dangw _o5721q9c",
  customLetterspacing: "_1dyz9vsi"
};
var backgroundColorsOld = {
  bold: {
    default: "color.background.neutral.bold",
    inprogress: "color.background.information.bold",
    moved: "color.background.warning.bold",
    new: "color.background.discovery.bold",
    removed: "color.background.danger.bold",
    success: "color.background.success.bold"
  },
  subtle: {
    default: "color.background.neutral",
    inprogress: "color.background.information",
    moved: "color.background.warning",
    new: "color.background.discovery",
    removed: "color.background.danger",
    success: "color.background.success"
  }
};
var stylesNew = {
  container: "_2rkofajl _1reo15vq _18m915vq _1e0c116y _vchhusvi _kqswpfqs _1kz6184x _bozg1b66 _y4ti1b66",
  containerSubtle: "_1cwg1n1a",
  text: "_1reo15vq _18m915vq _ect41gqc _1wyb1skh _zg8l4jg8 _k48pmoej _vwz47vkz _1bto1l2s _1p1dangw _o5721q9c",
  customLetterspacing: "_1dyz9vsi",
  "bg.bold.default": "_bfhk1fkg",
  "bg.bold.inprogress": "_bfhk1ymo",
  "bg.bold.moved": "_bfhkxmjf",
  "bg.bold.new": "_bfhkshej",
  "bg.bold.removed": "_bfhk1366",
  "bg.bold.success": "_bfhk3uhp",
  "bg.subtle.default": "_bfhksm61",
  "bg.subtle.inprogress": "_bfhksm61",
  "bg.subtle.moved": "_bfhksm61",
  "bg.subtle.new": "_bfhksm61",
  "bg.subtle.removed": "_bfhksm61",
  "bg.subtle.success": "_bfhksm61",
  "border.subtle.default": "_19it14mp",
  "border.subtle.inprogress": "_19it1cy7",
  "border.subtle.moved": "_19itzi1n",
  "border.subtle.new": "_19it1apr",
  "border.subtle.removed": "_19itoa5t",
  "border.subtle.success": "_19it1am1",
  "outline.subtle.default": "_12ji14je _1qu2nqa1 _12y3t94y",
  "outline.subtle.inprogress": "_12jiuisw _1qu2nqa1 _12y3t94y",
  "outline.subtle.moved": "_12jih727 _1qu2nqa1 _12y3t94y",
  "outline.subtle.new": "_12ji157s _1qu2nqa1 _12y3t94y",
  "outline.subtle.removed": "_12jia2c0 _1qu2nqa1 _12y3t94y",
  "outline.subtle.success": "_12jin0nx _1qu2nqa1 _12y3t94y",
  "text.subtle": "_syaz1fxt",
  "text.bold": "_syazwwip"
};
var appearanceTypes = ["default", "inprogress", "moved", "new", "removed", "success"];
var Lozenge = (0, import_react.memo)(function(_ref) {
  var children = _ref.children, testId = _ref.testId, _ref$isBold = _ref.isBold, isBold = _ref$isBold === void 0 ? false : _ref$isBold, _ref$appearance = _ref.appearance, appearance = _ref$appearance === void 0 ? "default" : _ref$appearance, _ref$maxWidth = _ref.maxWidth, maxWidth = _ref$maxWidth === void 0 ? 200 : _ref$maxWidth, style = _ref.style;
  var appearanceStyle = isBold ? "bold" : "subtle";
  var appearanceType = (0, import_react.useMemo)(function() {
    return appearanceTypes.includes(appearance) ? appearance : "default";
  }, [appearance]);
  var maxWidthValue = typeof maxWidth === "string" ? maxWidth : "".concat(maxWidth, "px");
  var maxWidthIsPc = typeof maxWidth === "string" && /%$/.test(maxWidth);
  if (fg("platform-component-visual-refresh")) {
    return React.createElement("span", {
      style: {
        backgroundColor: style === null || style === void 0 ? void 0 : style.backgroundColor,
        maxWidth: maxWidthIsPc ? maxWidth : "100%"
      },
      "data-testid": testId,
      className: ax([stylesNew.container, stylesNew["bg.".concat(appearanceStyle, ".").concat(appearanceType)], appearanceStyle === "subtle" && !fg("visual-refresh_drop_5") && stylesNew["border.subtle.".concat(appearanceType)], appearanceStyle === "subtle" && fg("visual-refresh_drop_5") && stylesNew["outline.subtle.".concat(appearanceType)], appearanceStyle === "subtle" && fg("visual-refresh_drop_5") && stylesNew.containerSubtle])
    }, React.createElement("span", {
      style: {
        color: style === null || style === void 0 ? void 0 : style.color,
        // to negate paddingInline specified on Box above
        maxWidth: maxWidthIsPc ? "100%" : "calc(".concat(maxWidthValue, " - ", "var(--ds-space-100, 8px)", ")")
      },
      "data-testid": testId && "".concat(testId, "--text"),
      className: ax([stylesNew.text, fg("platform-lozenge-custom-letterspacing") && stylesNew.customLetterspacing, stylesNew["text.".concat(appearanceStyle)]])
    }, children));
  }
  return React.createElement(box_default, {
    as: "span",
    backgroundColor: backgroundColorsOld[appearanceStyle][appearanceType],
    style: {
      backgroundColor: style === null || style === void 0 ? void 0 : style.backgroundColor,
      maxWidth: maxWidthIsPc ? maxWidth : "100%"
    },
    paddingInline: "space.050",
    xcss: stylesOld.container,
    testId
  }, React.createElement("span", {
    style: {
      color: style === null || style === void 0 ? void 0 : style.color,
      // to negate paddingInline specified on Box above
      maxWidth: maxWidthIsPc ? "100%" : "calc(".concat(maxWidthValue, " - ", "var(--ds-space-100, 8px)", ")")
    },
    "data-testid": testId && "".concat(testId, "--text"),
    className: ax([stylesOldUnbounded.text, fg("platform-lozenge-custom-letterspacing") && stylesOldUnbounded.customLetterspacing, stylesOld["text.".concat(appearanceStyle, ".").concat(appearanceType)]])
  }, children));
});
Lozenge.displayName = "Lozenge";
var lozenge_default = Lozenge;
export {
  lozenge_default as default
};
//# sourceMappingURL=@atlaskit_lozenge.js.map

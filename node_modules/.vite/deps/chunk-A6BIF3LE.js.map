{
  "version": 3,
  "sources": ["../../@atlaskit/icon/dist/esm/components/icon-new.js", "../../@atlaskit/icon/dist/esm/entry-points/base-new.js"],
  "sourcesContent": ["/* icon-new.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./icon-new.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { memo } from 'react';\nimport { fg } from '@atlaskit/platform-feature-flags';\n\n/**\n * We are hiding this props from consumers as it's reserved\n * for use by Icon Tile.\n */\n\nvar svgStyles = null;\nvar iconStyles = null;\nvar utilityIconStyles = null;\nvar scaleStyles = null;\n\n/**\n * For windows high contrast mode\n */\nvar baseHcmStyles = null;\nvar scaleSize = null;\nvar coreSizeMedium = {\n  none: \"_1bsbpxbi _4t3ipxbi\",\n  compact: \"_1bsb1ejb _4t3i1ejb\",\n  spacious: \"_1bsb1ejb _4t3i1ejb\"\n};\nvar coreSizeSmall = {\n  none: \"_1bsbutpp _4t3iutpp\",\n  compact: \"_1bsbpxbi _4t3ipxbi\",\n  spacious: \"_1bsb1ejb _4t3i1ejb\"\n};\nvar utilSizes = {\n  none: \"_1bsbutpp _4t3iutpp\",\n  compact: \"_1bsbpxbi _4t3ipxbi\",\n  spacious: \"_1bsb1ejb _4t3i1ejb\"\n};\nvar baseSizeMap = {\n  core: 16,\n  utility: 12\n};\nvar paddingMap = {\n  core: {\n    medium: {\n      none: 0,\n      compact: 4,\n      spacious: 4\n    },\n    small: {\n      none: 0,\n      compact: 2.66,\n      spacious: 8\n    }\n  },\n  utility: {\n    medium: {\n      none: 0,\n      compact: 2,\n      spacious: 6\n    },\n    small: {\n      none: 0,\n      compact: 2,\n      spacious: 6\n    }\n  }\n};\n\n/**\n * __Icon__\n *\n * An icon is used as a visual representation of common actions and commands to provide context.\n *\n * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)\n */\nexport var Icon = /*#__PURE__*/memo(function Icon(props) {\n  var _props$type;\n  var _ref = props,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    testId = _ref.testId,\n    label = _ref.label,\n    LEGACY_primaryColor = _ref.LEGACY_primaryColor,\n    LEGACY_secondaryColor = _ref.LEGACY_secondaryColor,\n    LEGACY_size = _ref.LEGACY_size,\n    FallbackIcon = _ref.LEGACY_fallbackIcon,\n    dangerouslySetGlyph = _ref.dangerouslySetGlyph,\n    shouldScale = _ref.shouldScale,\n    LEGACY_margin = _ref.LEGACY_margin,\n    _ref$spacing = _ref.spacing,\n    spacing = _ref$spacing === void 0 ? 'none' : _ref$spacing,\n    name = _ref.name;\n  var dangerouslySetInnerHTML = dangerouslySetGlyph ? {\n    __html: dangerouslySetGlyph\n  } : undefined;\n\n  // Fall back to old icon\n  // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix\n  if (FallbackIcon && !fg('platform-visual-refresh-icons')) {\n    // parse out unnecessary props\n    return /*#__PURE__*/React.createElement(FallbackIcon, {\n      primaryColor: LEGACY_primaryColor !== null && LEGACY_primaryColor !== void 0 ? LEGACY_primaryColor : color,\n      secondaryColor: LEGACY_secondaryColor,\n      size: LEGACY_size,\n      label: label,\n      testId: testId\n      // @ts-ignore -next-line\n      ,\n      UNSAFE_margin: LEGACY_margin\n    });\n  }\n  var type = (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : 'core';\n  var size = 'medium';\n  if ('size' in props && props.size !== undefined) {\n    if (typeof props.size === 'string') {\n      size = props.size === 'small' || props.size === 'medium' ? props.size : size;\n    } else if (name) {\n      var newSize = props.size(name);\n      size = newSize === 'small' || newSize === 'medium' ? newSize : size;\n    }\n  }\n  var baseSize = baseSizeMap[type];\n  var viewBoxPadding = paddingMap[type][size][spacing];\n  var viewBoxSize = baseSize + 2 * viewBoxPadding;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": testId,\n    role: label ? 'img' : undefined,\n    \"aria-label\": label ? label : undefined,\n    \"aria-hidden\": label ? undefined : true,\n    style: {\n      color: color\n    },\n    className: ax([\"_1e0c1o8l _vchhusvi _1o9zidpf _vwz4kb7n _y4ti1igz _bozg1mb9\", \"_12va1onz _jcxd1r8n\", shouldScale && \"_1bsb1kw7 _4t3i1kw7\", (type === 'utility' || size === 'small') && \"_vwz4utpp\"])\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    fill: \"none\"\n    // Adjusting the viewBox allows the icon padding to scale with the contents of the SVG, which\n    // we want for Icon Tile\n    ,\n    viewBox: \"\".concat(0 - viewBoxPadding, \" \").concat(0 - viewBoxPadding, \" \").concat(viewBoxSize, \" \").concat(viewBoxSize),\n    role: \"presentation\",\n    dangerouslySetInnerHTML: dangerouslySetInnerHTML,\n    className: ax([\"_1reo15vq _18m915vq _syaz1r31 _lcxvglyw _s7n4yfq0 _vc881r31\", shouldScale ? \"_1bsb1kw7 _4t3i1kw7\" : type === 'utility' ? utilSizes[spacing] : size === 'small' ? coreSizeSmall[spacing] : coreSizeMedium[spacing]])\n  }));\n});\nexport default Icon;", "export { default, Icon } from '../components/icon-new';"],
  "mappings": "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",
  "names": ["Icon"]
}

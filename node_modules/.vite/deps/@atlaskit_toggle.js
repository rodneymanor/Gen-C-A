import {
  require_cross
} from "./chunk-YZMD5X5S.js";
import {
  base_new_exports,
  init_base_new
} from "./chunk-A6BIF3LE.js";
import {
  box_default,
  cx2 as cx,
  useId
} from "./chunk-3AN7UMVP.js";
import "./chunk-XUSVWCLU.js";
import "./chunk-UKQCMMS7.js";
import "./chunk-THB4Y6I7.js";
import "./chunk-CGH4DJNJ.js";
import {
  base_exports,
  init_base
} from "./chunk-6B65WPO5.js";
import {
  spinner_default
} from "./chunk-QTXTT6QA.js";
import {
  B200,
  G400,
  G500,
  N0,
  N20,
  N200,
  N400,
  N70
} from "./chunk-XIW5VD7B.js";
import {
  noop,
  visually_hidden_default
} from "./chunk-KXQMNIDH.js";
import "./chunk-ATF5PCW4.js";
import {
  usePlatformLeafEventHandler
} from "./chunk-7SLACSS6.js";
import {
  fg,
  init_esm
} from "./chunk-D7HT2YMK.js";
import {
  _slicedToArray,
  init_slicedToArray
} from "./chunk-OBM4VKST.js";
import "./chunk-SHSMMZOB.js";
import {
  ax,
  cssCustomPropertyValue,
  init_runtime
} from "./chunk-ZNWH4LFA.js";
import {
  _defineProperty,
  init_defineProperty
} from "./chunk-LBGAJG32.js";
import "./chunk-AAY5IJNO.js";
import {
  _extends,
  init_extends
} from "./chunk-64QIVKMX.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/icon/core/check-mark.js
var require_check_mark = __commonJS({
  "node_modules/@atlaskit/icon/core/check-mark.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var CheckMarkIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "CheckMarkIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" d="m13.959 3.97-7.25 9a.75.75 0 0 1-1.163.007l-3.5-4.25 1.158-.954 2.914 3.539 6.673-8.283z"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    CheckMarkIcon2.displayName = "CheckMarkIcon";
    var _default = exports.default = CheckMarkIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/editor/done.js
var require_done = __commonJS({
  "node_modules/@atlaskit/icon/glyph/editor/done.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var EditorDoneIcon = (props) => _react.default.createElement(_base.Icon, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" d="M7.356 10.942a.497.497 0 0 0-.713 0l-.7.701a.5.5 0 0 0-.003.71l3.706 3.707a.5.5 0 0 0 .705.003l7.712-7.712a.493.493 0 0 0-.006-.708l-.7-.7a.504.504 0 0 0-.714 0l-6.286 6.286a.506.506 0 0 1-.713 0z"/></svg>`
    }, props));
    EditorDoneIcon.displayName = "EditorDoneIcon";
    var _default = exports.default = EditorDoneIcon;
  }
});

// node_modules/@atlaskit/icon/core/migration/check-mark--editor-done.js
var require_check_mark_editor_done = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/check-mark--editor-done.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _checkMark = _interopRequireDefault(require_check_mark());
    var _done = _interopRequireDefault(require_done());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var CheckMarkIcon2 = (props) => _react.default.createElement(_checkMark.default, Object.assign({
      name: "CheckMarkIcon",
      LEGACY_fallbackIcon: _done.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    CheckMarkIcon2.displayName = "CheckMarkIconMigration";
    var _default = exports.default = CheckMarkIcon2;
  }
});

// node_modules/@atlaskit/icon/glyph/editor/close.js
var require_close = __commonJS({
  "node_modules/@atlaskit/icon/glyph/editor/close.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var EditorCloseIcon = (props) => _react.default.createElement(_base.Icon, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><path fill="currentcolor" fill-rule="evenodd" d="m15.185 7.4-3.184 3.185-3.186-3.186a.507.507 0 0 0-.712.003l-.7.701a.496.496 0 0 0-.004.712l3.185 3.184L7.4 15.185a.507.507 0 0 0 .004.712l.7.7c.206.207.516.2.712.004l3.186-3.185 3.184 3.185a.507.507 0 0 0 .712-.004l.701-.7a.496.496 0 0 0 .003-.712l-3.186-3.186 3.186-3.184a.507.507 0 0 0-.003-.712l-.7-.7a.5.5 0 0 0-.36-.153.5.5 0 0 0-.353.15"/></svg>`
    }, props));
    EditorCloseIcon.displayName = "EditorCloseIcon";
    var _default = exports.default = EditorCloseIcon;
  }
});

// node_modules/@atlaskit/icon/core/migration/cross--editor-close.js
var require_cross_editor_close = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/cross--editor-close.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _cross = _interopRequireDefault(require_cross());
    var _close = _interopRequireDefault(require_close());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var CrossIcon = (props) => _react.default.createElement(_cross.default, Object.assign({
      name: "CrossIcon",
      LEGACY_fallbackIcon: _close.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    CrossIcon.displayName = "CrossIconMigration";
    var _default = exports.default = CrossIcon;
  }
});

// node_modules/@atlaskit/toggle/dist/esm/toggle.js
init_extends();
init_defineProperty();
init_slicedToArray();
init_runtime();
var import_react = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/toggle/dist/esm/toggle.compiled.css";
var import_check_mark_editor_done = __toESM(require_check_mark_editor_done());
var import_cross_editor_close = __toESM(require_cross_editor_close());
init_esm();

// node_modules/@atlaskit/toggle/dist/esm/icon-container.js
var React = __toESM(require_react());
init_runtime();
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/toggle/dist/esm/icon-container.compiled.css";
init_esm();
var styles = {
  iconContainer: "_v5641hrg _1e0c116y _4cvr1h6o _1bah1h6o _kqswstnw _152tv77o",
  iconContainerRegular: "_1bsb7vkz _4t3i7vkz",
  iconContainerLarge: "_1bsbgktf _4t3igktf",
  hidden: "_tzy4idpf",
  left: "_1e021l7b",
  right: "_rjxp1l7b"
};
var IconContainer = function IconContainer2(_ref) {
  var children = _ref.children, size = _ref.size, isHidden = _ref.isHidden, position = _ref.position;
  return React.createElement(box_default, {
    as: "span",
    xcss: cx(styles.iconContainer, isHidden && fg("platform-visual-refresh-icons") && styles.hidden, size === "regular" && styles.iconContainerRegular, size === "large" && styles.iconContainerLarge, position === "left" && styles.left, position === "right" && styles.right)
  }, children);
};
var icon_container_default = IconContainer;

// node_modules/@atlaskit/toggle/dist/esm/toggle.js
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var LOADING_LABEL = ", Loading";
var sizeStyles = {
  regular: "_2rkopxbi _4t3ipxbi _1bsbxy5q _kfgtutpp _1mp41crf _p9c41fbe",
  large: "_2rkov47k _4t3iv47k _1bsb1jfw _kfgtpxbi _1mp47vkz _p9c4w12q"
};
var noop2 = noop;
var analyticsAttributes = {
  componentName: "toggle",
  packageName: "@atlaskit/toggle",
  packageVersion: "0.0.0-development"
};
var iconSizeMap = {
  regular: "small",
  large: "medium"
};
var Toggle = (0, import_react.memo)((0, import_react.forwardRef)(function(props, ref) {
  var _props$defaultChecked = props.defaultChecked, defaultChecked = _props$defaultChecked === void 0 ? false : _props$defaultChecked, _props$isDisabled = props.isDisabled, isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled, _props$onBlur = props.onBlur, providedOnBlur = _props$onBlur === void 0 ? noop2 : _props$onBlur, _props$onChange = props.onChange, providedChange = _props$onChange === void 0 ? noop2 : _props$onChange, _props$onFocus = props.onFocus, providedFocus = _props$onFocus === void 0 ? noop2 : _props$onFocus, _props$size = props.size, size = _props$size === void 0 ? "regular" : _props$size, _props$name = props.name, name = _props$name === void 0 ? "" : _props$name, _props$value = props.value, value = _props$value === void 0 ? "" : _props$value, isChecked = props.isChecked, isLoading = props.isLoading, analyticsContext = props.analyticsContext, id = props.id, testId = props.testId, label = props.label, descriptionId = props.descriptionId;
  var isControlled = typeof isChecked === "undefined";
  var _useState = (0, import_react.useState)(defaultChecked), _useState2 = _slicedToArray(_useState, 2), checked = _useState2[0], setChecked = _useState2[1];
  var loadingLabelId = useId();
  var handleBlur = usePlatformLeafEventHandler(_objectSpread({
    fn: providedOnBlur,
    action: "blur",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var handleFocus = usePlatformLeafEventHandler(_objectSpread({
    fn: providedFocus,
    action: "focus",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var handleChange = usePlatformLeafEventHandler(_objectSpread({
    fn: function fn(event, analyticsEvent) {
      if (isControlled) {
        setChecked(function(checked2) {
          return !checked2;
        });
      }
      return providedChange(event, analyticsEvent);
    },
    action: "change",
    analyticsData: analyticsContext
  }, analyticsAttributes));
  var shouldChecked = isControlled ? checked : isChecked;
  var controlProps = {
    "data-checked": shouldChecked ? shouldChecked : void 0,
    "data-disabled": isDisabled ? isDisabled : void 0,
    "data-size": size,
    "data-testid": testId ? testId : void 0
  };
  var legacyIconSize = iconSizeMap[size];
  var labelId = useId();
  return import_react.default.createElement("label", _extends({}, controlProps, {
    className: ax(["_v564kete _1h6d1j28 _1dqonqa1 _189e1dm9 _1e0c1o8l _vchh1ntv _kqswh2mm _1y1m1ntv _bfhk1tkq _syazw5hi _6rthv77o _1pfhv77o _12l2v77o _ahbqv77o _85i5v77o _1q51v77o _y4tiv77o _bozgv77o _1i2uidpf _1i3tidpf _se28idpf _3tunidpf _1423idpf _1hrtidpf _1bz2idpf _rqfvidpf _1yc0glyw _onsr1snc _1vgmagmp _1av610yn _1ulhidpf _rfx31qll _pdykkete _1cs8stnw _1rusw5hi _1kt9b3bt _1fkr1y44 _z5wt1y44 _7dwzglyw _1ys43zdg _krlfnqa1 _ju3ddkaa _1bki1ouc _1flt1ouc _3xv21ouc _94713286 _ucabw5hi _mqf8snw8 _3dj2snw8 _1dl9snw8 _1divw5hi _1il8kb7n _y54dw5hi _irr31mlc _d0altlke _19ja13gf _8muf13gf _1k1q13gf _1plu15bl _1uo81mlc _178c1ouc _16rslghj _ogf41r31 _1rtbnqa1 _5gg9t94y", size === "large" && !fg("platform-visual-refresh-icons") && "_1n82gktf _19vpgktf", sizeStyles[size]]),
    style: {
      "--_1lrlov9": cssCustomPropertyValue("var(--ds-background-neutral-bold, ".concat(N200, ")")),
      "--_1qgzj18": cssCustomPropertyValue("var(--ds-icon-inverse, ".concat(N0, ")")),
      "--_xjqa3d": cssCustomPropertyValue("var(--ds-border-focused, ".concat(B200, ")")),
      "--_r5pknd": cssCustomPropertyValue("var(--ds-background-disabled, ".concat(N20, ")")),
      "--_ouwnnt": cssCustomPropertyValue("var(--ds-background-neutral-bold-hovered, ".concat(N400, ")")),
      "--_16xemc6": cssCustomPropertyValue("var(--ds-background-success-bold, ".concat(G400, ")")),
      "--_2cuxaa": cssCustomPropertyValue("var(--ds-background-success-bold-hovered, ".concat(G500, ")")),
      "--_1xmcmw9": cssCustomPropertyValue("var(--ds-icon-disabled, ".concat(N70, ")"))
    }
  }), label ? import_react.default.createElement("span", {
    id: labelId,
    hidden: true
  }, isLoading ? "".concat(label).concat(LOADING_LABEL) : label) : null, import_react.default.createElement("input", {
    ref,
    checked: shouldChecked,
    disabled: isDisabled,
    id,
    name,
    onBlur: handleBlur,
    onChange: handleChange,
    onFocus: handleFocus,
    type: "checkbox",
    value,
    "data-testid": testId && "".concat(testId, "--input"),
    "aria-labelledby": isLoading && label ? "".concat(labelId, " ").concat(loadingLabelId) : label ? labelId : void 0,
    "aria-describedby": descriptionId
  }), import_react.default.createElement(icon_container_default, {
    size,
    isHidden: !shouldChecked,
    position: "left"
  }, isLoading && shouldChecked ? import_react.default.createElement(spinner_default, {
    size: "xsmall",
    appearance: "invert"
  }) : import_react.default.createElement(import_check_mark_editor_done.default, {
    label: "",
    color: "currentColor",
    LEGACY_size: legacyIconSize,
    testId: testId && "".concat(testId, "--toggle-check-icon"),
    size: "small"
  })), import_react.default.createElement(icon_container_default, {
    size,
    isHidden: shouldChecked,
    position: "right"
  }, isLoading && !shouldChecked ? import_react.default.createElement(spinner_default, {
    size: "xsmall",
    appearance: "invert"
  }) : import_react.default.createElement(import_cross_editor_close.default, {
    label: "",
    color: "currentColor",
    LEGACY_size: legacyIconSize,
    testId: testId && "".concat(testId, "--toggle-cross-icon"),
    size: "small"
  })), isLoading && !label && import_react.default.createElement(visually_hidden_default, {
    id: loadingLabelId
  }, LOADING_LABEL));
}));
Toggle.displayName = "Toggle";
var toggle_default = Toggle;
export {
  toggle_default as default
};
//# sourceMappingURL=@atlaskit_toggle.js.map

import {
  base_new_exports,
  init_base_new
} from "./chunk-A6BIF3LE.js";
import {
  HasTextAncestorProvider,
  SurfaceContext,
  useHasTextAncestor,
  useId,
  useSurface,
  use_router_link_default
} from "./chunk-3AN7UMVP.js";
import {
  invariant
} from "./chunk-XUSVWCLU.js";
import {
  CURRENT_SURFACE_CSS_VAR
} from "./chunk-THB4Y6I7.js";
import {
  require_dist
} from "./chunk-CGH4DJNJ.js";
import {
  base_exports,
  init_base
} from "./chunk-6B65WPO5.js";
import {
  css,
  jsx
} from "./chunk-LES4B5AP.js";
import {
  esm_default,
  noop,
  visually_hidden_default
} from "./chunk-KXQMNIDH.js";
import {
  usePlatformLeafEventHandler
} from "./chunk-7SLACSS6.js";
import {
  _objectWithoutProperties,
  _slicedToArray,
  _toConsumableArray,
  init_objectWithoutProperties,
  init_slicedToArray
} from "./chunk-OBM4VKST.js";
import {
  _defineProperty,
  _typeof,
  init_defineProperty,
  init_typeof
} from "./chunk-LBGAJG32.js";
import {
  _extends,
  init_extends
} from "./chunk-64QIVKMX.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/icon/core/status-error.js
var require_status_error = __commonJS({
  "node_modules/@atlaskit/icon/core/status-error.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var StatusErrorIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "StatusErrorIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M6.586.603a2 2 0 0 1 2.828 0l5.983 5.983a2 2 0 0 1 0 2.828l-5.983 5.982a2 2 0 0 1-2.828 0L.604 9.414a2 2 0 0 1 0-2.828zM8 10.25a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-.75-6.5V9h1.5V3.75z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    StatusErrorIcon.displayName = "StatusErrorIcon";
    var _default = exports.default = StatusErrorIcon;
  }
});

// node_modules/@atlaskit/icon/glyph/error.js
var require_error = __commonJS({
  "node_modules/@atlaskit/icon/glyph/error.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _base = (init_base(), __toCommonJS(base_exports));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var ErrorIcon = (props) => _react.default.createElement(_base.Icon, Object.assign({
      dangerouslySetGlyph: `<svg width="24" height="24" viewBox="0 0 24 24" role="presentation"><g fill-rule="evenodd"><path fill="currentcolor" d="M13.416 4.417a2 2 0 0 0-2.832 0l-6.168 6.167a2 2 0 0 0 0 2.833l6.168 6.167a2 2 0 0 0 2.832 0l6.168-6.167a2 2 0 0 0 0-2.833z"/><path fill="inherit" d="M12 14a1 1 0 0 1-1-1V8a1 1 0 0 1 2 0v5a1 1 0 0 1-1 1m0 3a1 1 0 0 1 0-2 1 1 0 0 1 0 2"/></g></svg>`
    }, props));
    ErrorIcon.displayName = "ErrorIcon";
    var _default = exports.default = ErrorIcon;
  }
});

// node_modules/@atlaskit/icon/core/migration/status-error--error.js
var require_status_error_error = __commonJS({
  "node_modules/@atlaskit/icon/core/migration/status-error--error.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _statusError = _interopRequireDefault(require_status_error());
    var _error = _interopRequireDefault(require_error());
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var StatusErrorIcon = (props) => _react.default.createElement(_statusError.default, Object.assign({
      name: "StatusErrorIcon",
      LEGACY_fallbackIcon: _error.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    StatusErrorIcon.displayName = "StatusErrorIconMigration";
    var _default = exports.default = StatusErrorIcon;
  }
});

// node_modules/@atlaskit/primitives/dist/esm/xcss/xcss.js
init_defineProperty();
init_slicedToArray();
init_typeof();

// node_modules/@atlaskit/primitives/dist/esm/xcss/style-maps.partial.js
init_defineProperty();
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var dimensionMap = {
  "100%": "100%",
  "size.100": "1rem",
  "size.200": "1.5rem",
  "size.300": "2rem",
  "size.400": "2.5rem",
  "size.500": "3rem",
  "size.600": "6rem",
  "size.1000": "12rem"
};
var positiveSpaceMap = {
  "space.0": "var(--ds-space-0, 0px)",
  "space.025": "var(--ds-space-025, 2px)",
  "space.050": "var(--ds-space-050, 4px)",
  "space.075": "var(--ds-space-075, 6px)",
  "space.100": "var(--ds-space-100, 8px)",
  "space.150": "var(--ds-space-150, 12px)",
  "space.200": "var(--ds-space-200, 16px)",
  "space.250": "var(--ds-space-250, 20px)",
  "space.300": "var(--ds-space-300, 24px)",
  "space.400": "var(--ds-space-400, 32px)",
  "space.500": "var(--ds-space-500, 40px)",
  "space.600": "var(--ds-space-600, 48px)",
  "space.800": "var(--ds-space-800, 64px)",
  "space.1000": "var(--ds-space-1000, 80px)"
};
var negativeSpaceMap = {
  "space.negative.025": "var(--ds-space-negative-025, -2px)",
  "space.negative.050": "var(--ds-space-negative-050, -4px)",
  "space.negative.075": "var(--ds-space-negative-075, -6px)",
  "space.negative.100": "var(--ds-space-negative-100, -8px)",
  "space.negative.150": "var(--ds-space-negative-150, -12px)",
  "space.negative.200": "var(--ds-space-negative-200, -16px)",
  "space.negative.250": "var(--ds-space-negative-250, -20px)",
  "space.negative.300": "var(--ds-space-negative-300, -24px)",
  "space.negative.400": "var(--ds-space-negative-400, -32px)"
};
var allSpaceMap = _objectSpread(_objectSpread({}, positiveSpaceMap), negativeSpaceMap);
var inverseColorMap = {
  "color.background.neutral.bold": "color.text.inverse",
  "color.background.neutral.bold.hovered": "color.text.inverse",
  "color.background.neutral.bold.pressed": "color.text.inverse",
  "color.background.selected.bold": "color.text.inverse",
  "color.background.selected.bold.hovered": "color.text.inverse",
  "color.background.selected.bold.pressed": "color.text.inverse",
  "color.background.brand.bold": "color.text.inverse",
  "color.background.brand.bold.hovered": "color.text.inverse",
  "color.background.brand.bold.pressed": "color.text.inverse",
  "color.background.brand.boldest": "color.text.inverse",
  "color.background.brand.boldest.hovered": "color.text.inverse",
  "color.background.brand.boldest.pressed": "color.text.inverse",
  "color.background.danger.bold": "color.text.inverse",
  "color.background.danger.bold.hovered": "color.text.inverse",
  "color.background.danger.bold.pressed": "color.text.inverse",
  "color.background.warning.bold": "color.text.warning.inverse",
  "color.background.warning.bold.hovered": "color.text.warning.inverse",
  "color.background.warning.bold.pressed": "color.text.warning.inverse",
  "color.background.success.bold": "color.text.inverse",
  "color.background.success.bold.hovered": "color.text.inverse",
  "color.background.success.bold.pressed": "color.text.inverse",
  "color.background.discovery.bold": "color.text.inverse",
  "color.background.discovery.bold.hovered": "color.text.inverse",
  "color.background.discovery.bold.pressed": "color.text.inverse",
  "color.background.information.bold": "color.text.inverse",
  "color.background.information.bold.hovered": "color.text.inverse",
  "color.background.information.bold.pressed": "color.text.inverse"
};
var opacityMap = {
  "opacity.disabled": "var(--ds-opacity-disabled, 0.4)",
  "opacity.loading": "var(--ds-opacity-loading, 0.2)"
};
var shadowMap = {
  "elevation.shadow.overflow": "var(--ds-shadow-overflow, 0px 0px 8px #091e423f, 0px 0px 1px #091e424f)",
  "elevation.shadow.overflow.perimeter": "var(--ds-shadow-overflow-perimeter, #091e421f)",
  "elevation.shadow.overflow.spread": "var(--ds-shadow-overflow-spread, #091e4229)",
  "elevation.shadow.overlay": "var(--ds-shadow-overlay, 0px 8px 12px #091e423f, 0px 0px 1px #091e424f)",
  "elevation.shadow.raised": "var(--ds-shadow-raised, 0px 1px 1px #091e423f, 0px 0px 1px #091e4221)"
};
var surfaceColorMap = {
  "elevation.surface": "var(--ds-surface, #FFFFFF)",
  "elevation.surface.hovered": "var(--ds-surface-hovered, #FAFBFC)",
  "elevation.surface.pressed": "var(--ds-surface-pressed, #F4F5F7)",
  "elevation.surface.overlay": "var(--ds-surface-overlay, #FFFFFF)",
  "elevation.surface.overlay.hovered": "var(--ds-surface-overlay-hovered, #FAFBFC)",
  "elevation.surface.overlay.pressed": "var(--ds-surface-overlay-pressed, #F4F5F7)",
  "elevation.surface.raised": "var(--ds-surface-raised, #FFFFFF)",
  "elevation.surface.raised.hovered": "var(--ds-surface-raised-hovered, #FAFBFC)",
  "elevation.surface.raised.pressed": "var(--ds-surface-raised-pressed, #F4F5F7)",
  "elevation.surface.sunken": "var(--ds-surface-sunken, #F4F5F7)"
};
var borderColorMap = {
  "color.border": "var(--ds-border, #091e4221)",
  "color.border.accent.lime": "var(--ds-border-accent-lime, #6A9A23)",
  "color.border.accent.red": "var(--ds-border-accent-red, #FF5630)",
  "color.border.accent.orange": "var(--ds-border-accent-orange, #D94008)",
  "color.border.accent.yellow": "var(--ds-border-accent-yellow, #FFAB00)",
  "color.border.accent.green": "var(--ds-border-accent-green, #36B37E)",
  "color.border.accent.teal": "var(--ds-border-accent-teal, #00B8D9)",
  "color.border.accent.blue": "var(--ds-border-accent-blue, #0065FF)",
  "color.border.accent.purple": "var(--ds-border-accent-purple, #6554C0)",
  "color.border.accent.magenta": "var(--ds-border-accent-magenta, #CD519D)",
  "color.border.accent.gray": "var(--ds-border-accent-gray, #5E6C84)",
  "color.border.disabled": "var(--ds-border-disabled, #FAFBFC)",
  "color.border.focused": "var(--ds-border-focused, #2684FF)",
  "color.border.input": "var(--ds-border-input, #FAFBFC)",
  "color.border.inverse": "var(--ds-border-inverse, #FFFFFF)",
  "color.border.selected": "var(--ds-border-selected, #0052CC)",
  "color.border.brand": "var(--ds-border-brand, #0052CC)",
  "color.border.danger": "var(--ds-border-danger, #FF5630)",
  "color.border.warning": "var(--ds-border-warning, #FFC400)",
  "color.border.success": "var(--ds-border-success, #00875A)",
  "color.border.discovery": "var(--ds-border-discovery, #998DD9)",
  "color.border.information": "var(--ds-border-information, #0065FF)",
  "color.border.bold": "var(--ds-border-bold, #344563)"
};
var backgroundColorMap = {
  "color.background.accent.lime.subtlest": "var(--ds-background-accent-lime-subtlest, #EEFBDA)",
  "color.background.accent.lime.subtlest.hovered": "var(--ds-background-accent-lime-subtlest-hovered, #D3F1A7)",
  "color.background.accent.lime.subtlest.pressed": "var(--ds-background-accent-lime-subtlest-pressed, #B3DF72)",
  "color.background.accent.lime.subtler": "var(--ds-background-accent-lime-subtler, #D3F1A7)",
  "color.background.accent.lime.subtler.hovered": "var(--ds-background-accent-lime-subtler-hovered, #B3DF72)",
  "color.background.accent.lime.subtler.pressed": "var(--ds-background-accent-lime-subtler-pressed, #94C748)",
  "color.background.accent.lime.subtle": "var(--ds-background-accent-lime-subtle, #94C748)",
  "color.background.accent.lime.subtle.hovered": "var(--ds-background-accent-lime-subtle-hovered, #B3DF72)",
  "color.background.accent.lime.subtle.pressed": "var(--ds-background-accent-lime-subtle-pressed, #D3F1A7)",
  "color.background.accent.lime.bolder": "var(--ds-background-accent-lime-bolder, #5B7F24)",
  "color.background.accent.lime.bolder.hovered": "var(--ds-background-accent-lime-bolder-hovered, #37471F)",
  "color.background.accent.lime.bolder.pressed": "var(--ds-background-accent-lime-bolder-pressed, #37471F)",
  "color.background.accent.red.subtlest": "var(--ds-background-accent-red-subtlest, #FF8F73)",
  "color.background.accent.red.subtlest.hovered": "var(--ds-background-accent-red-subtlest-hovered, #FF7452)",
  "color.background.accent.red.subtlest.pressed": "var(--ds-background-accent-red-subtlest-pressed, #FF5630)",
  "color.background.accent.red.subtler": "var(--ds-background-accent-red-subtler, #FF7452)",
  "color.background.accent.red.subtler.hovered": "var(--ds-background-accent-red-subtler-hovered, #FF5630)",
  "color.background.accent.red.subtler.pressed": "var(--ds-background-accent-red-subtler-pressed, #DE350B)",
  "color.background.accent.red.subtle": "var(--ds-background-accent-red-subtle, #DE350B)",
  "color.background.accent.red.subtle.hovered": "var(--ds-background-accent-red-subtle-hovered, #FF5630)",
  "color.background.accent.red.subtle.pressed": "var(--ds-background-accent-red-subtle-pressed, #FF7452)",
  "color.background.accent.red.bolder": "var(--ds-background-accent-red-bolder, #DE350B)",
  "color.background.accent.red.bolder.hovered": "var(--ds-background-accent-red-bolder-hovered, #FF5630)",
  "color.background.accent.red.bolder.pressed": "var(--ds-background-accent-red-bolder-pressed, #FF7452)",
  "color.background.accent.orange.subtlest": "var(--ds-background-accent-orange-subtlest, #F18D13)",
  "color.background.accent.orange.subtlest.hovered": "var(--ds-background-accent-orange-subtlest-hovered, #FEC57B)",
  "color.background.accent.orange.subtlest.pressed": "var(--ds-background-accent-orange-subtlest-pressed, #FFE2BD)",
  "color.background.accent.orange.subtler": "var(--ds-background-accent-orange-subtler, #B65C02)",
  "color.background.accent.orange.subtler.hovered": "var(--ds-background-accent-orange-subtler-hovered, #F18D13)",
  "color.background.accent.orange.subtler.pressed": "var(--ds-background-accent-orange-subtler-pressed, #FEC57B)",
  "color.background.accent.orange.subtle": "var(--ds-background-accent-orange-subtle, #5F3811)",
  "color.background.accent.orange.subtle.hovered": "var(--ds-background-accent-orange-subtle-hovered, #974F0C)",
  "color.background.accent.orange.subtle.pressed": "var(--ds-background-accent-orange-subtle-pressed, #B65C02)",
  "color.background.accent.orange.bolder": "var(--ds-background-accent-orange-bolder, #43290F)",
  "color.background.accent.orange.bolder.hovered": "var(--ds-background-accent-orange-bolder-hovered, #5F3811)",
  "color.background.accent.orange.bolder.pressed": "var(--ds-background-accent-orange-bolder-pressed, #974F0C)",
  "color.background.accent.yellow.subtlest": "var(--ds-background-accent-yellow-subtlest, #FFE380)",
  "color.background.accent.yellow.subtlest.hovered": "var(--ds-background-accent-yellow-subtlest-hovered, #FFC400)",
  "color.background.accent.yellow.subtlest.pressed": "var(--ds-background-accent-yellow-subtlest-pressed, #FFAB00)",
  "color.background.accent.yellow.subtler": "var(--ds-background-accent-yellow-subtler, #FFC400)",
  "color.background.accent.yellow.subtler.hovered": "var(--ds-background-accent-yellow-subtler-hovered, #FFAB00)",
  "color.background.accent.yellow.subtler.pressed": "var(--ds-background-accent-yellow-subtler-pressed, #FF991F)",
  "color.background.accent.yellow.subtle": "var(--ds-background-accent-yellow-subtle, #FF991F)",
  "color.background.accent.yellow.subtle.hovered": "var(--ds-background-accent-yellow-subtle-hovered, #FFAB00)",
  "color.background.accent.yellow.subtle.pressed": "var(--ds-background-accent-yellow-subtle-pressed, #FFC400)",
  "color.background.accent.yellow.bolder": "var(--ds-background-accent-yellow-bolder, #FF991F)",
  "color.background.accent.yellow.bolder.hovered": "var(--ds-background-accent-yellow-bolder-hovered, #FFAB00)",
  "color.background.accent.yellow.bolder.pressed": "var(--ds-background-accent-yellow-bolder-pressed, #FFC400)",
  "color.background.accent.green.subtlest": "var(--ds-background-accent-green-subtlest, #79F2C0)",
  "color.background.accent.green.subtlest.hovered": "var(--ds-background-accent-green-subtlest-hovered, #57D9A3)",
  "color.background.accent.green.subtlest.pressed": "var(--ds-background-accent-green-subtlest-pressed, #36B37E)",
  "color.background.accent.green.subtler": "var(--ds-background-accent-green-subtler, #57D9A3)",
  "color.background.accent.green.subtler.hovered": "var(--ds-background-accent-green-subtler-hovered, #36B37E)",
  "color.background.accent.green.subtler.pressed": "var(--ds-background-accent-green-subtler-pressed, #00875A)",
  "color.background.accent.green.subtle": "var(--ds-background-accent-green-subtle, #00875A)",
  "color.background.accent.green.subtle.hovered": "var(--ds-background-accent-green-subtle-hovered, #36B37E)",
  "color.background.accent.green.subtle.pressed": "var(--ds-background-accent-green-subtle-pressed, #57D9A3)",
  "color.background.accent.green.bolder": "var(--ds-background-accent-green-bolder, #00875A)",
  "color.background.accent.green.bolder.hovered": "var(--ds-background-accent-green-bolder-hovered, #36B37E)",
  "color.background.accent.green.bolder.pressed": "var(--ds-background-accent-green-bolder-pressed, #57D9A3)",
  "color.background.accent.teal.subtlest": "var(--ds-background-accent-teal-subtlest, #79E2F2)",
  "color.background.accent.teal.subtlest.hovered": "var(--ds-background-accent-teal-subtlest-hovered, #00C7E6)",
  "color.background.accent.teal.subtlest.pressed": "var(--ds-background-accent-teal-subtlest-pressed, #00B8D9)",
  "color.background.accent.teal.subtler": "var(--ds-background-accent-teal-subtler, #00C7E6)",
  "color.background.accent.teal.subtler.hovered": "var(--ds-background-accent-teal-subtler-hovered, #00B8D9)",
  "color.background.accent.teal.subtler.pressed": "var(--ds-background-accent-teal-subtler-pressed, #00A3BF)",
  "color.background.accent.teal.subtle": "var(--ds-background-accent-teal-subtle, #00A3BF)",
  "color.background.accent.teal.subtle.hovered": "var(--ds-background-accent-teal-subtle-hovered, #00B8D9)",
  "color.background.accent.teal.subtle.pressed": "var(--ds-background-accent-teal-subtle-pressed, #00C7E6)",
  "color.background.accent.teal.bolder": "var(--ds-background-accent-teal-bolder, #00A3BF)",
  "color.background.accent.teal.bolder.hovered": "var(--ds-background-accent-teal-bolder-hovered, #00B8D9)",
  "color.background.accent.teal.bolder.pressed": "var(--ds-background-accent-teal-bolder-pressed, #00C7E6)",
  "color.background.accent.blue.subtlest": "var(--ds-background-accent-blue-subtlest, #4C9AFF)",
  "color.background.accent.blue.subtlest.hovered": "var(--ds-background-accent-blue-subtlest-hovered, #2684FF)",
  "color.background.accent.blue.subtlest.pressed": "var(--ds-background-accent-blue-subtlest-pressed, #0065FF)",
  "color.background.accent.blue.subtler": "var(--ds-background-accent-blue-subtler, #2684FF)",
  "color.background.accent.blue.subtler.hovered": "var(--ds-background-accent-blue-subtler-hovered, #0065FF)",
  "color.background.accent.blue.subtler.pressed": "var(--ds-background-accent-blue-subtler-pressed, #0052CC)",
  "color.background.accent.blue.subtle": "var(--ds-background-accent-blue-subtle, #0052CC)",
  "color.background.accent.blue.subtle.hovered": "var(--ds-background-accent-blue-subtle-hovered, #0065FF)",
  "color.background.accent.blue.subtle.pressed": "var(--ds-background-accent-blue-subtle-pressed, #2684FF)",
  "color.background.accent.blue.bolder": "var(--ds-background-accent-blue-bolder, #0052CC)",
  "color.background.accent.blue.bolder.hovered": "var(--ds-background-accent-blue-bolder-hovered, #0065FF)",
  "color.background.accent.blue.bolder.pressed": "var(--ds-background-accent-blue-bolder-pressed, #2684FF)",
  "color.background.accent.purple.subtlest": "var(--ds-background-accent-purple-subtlest, #998DD9)",
  "color.background.accent.purple.subtlest.hovered": "var(--ds-background-accent-purple-subtlest-hovered, #8777D9)",
  "color.background.accent.purple.subtlest.pressed": "var(--ds-background-accent-purple-subtlest-pressed, #6554C0)",
  "color.background.accent.purple.subtler": "var(--ds-background-accent-purple-subtler, #8777D9)",
  "color.background.accent.purple.subtler.hovered": "var(--ds-background-accent-purple-subtler-hovered, #6554C0)",
  "color.background.accent.purple.subtler.pressed": "var(--ds-background-accent-purple-subtler-pressed, #5243AA)",
  "color.background.accent.purple.subtle": "var(--ds-background-accent-purple-subtle, #5243AA)",
  "color.background.accent.purple.subtle.hovered": "var(--ds-background-accent-purple-subtle-hovered, #6554C0)",
  "color.background.accent.purple.subtle.pressed": "var(--ds-background-accent-purple-subtle-pressed, #8777D9)",
  "color.background.accent.purple.bolder": "var(--ds-background-accent-purple-bolder, #5243AA)",
  "color.background.accent.purple.bolder.hovered": "var(--ds-background-accent-purple-bolder-hovered, #6554C0)",
  "color.background.accent.purple.bolder.pressed": "var(--ds-background-accent-purple-bolder-pressed, #8777D9)",
  "color.background.accent.magenta.subtlest": "var(--ds-background-accent-magenta-subtlest, #FFECF8)",
  "color.background.accent.magenta.subtlest.hovered": "var(--ds-background-accent-magenta-subtlest-hovered, #FDD0EC)",
  "color.background.accent.magenta.subtlest.pressed": "var(--ds-background-accent-magenta-subtlest-pressed, #F797D2)",
  "color.background.accent.magenta.subtler": "var(--ds-background-accent-magenta-subtler, #FDD0EC)",
  "color.background.accent.magenta.subtler.hovered": "var(--ds-background-accent-magenta-subtler-hovered, #F797D2)",
  "color.background.accent.magenta.subtler.pressed": "var(--ds-background-accent-magenta-subtler-pressed, #E774BB)",
  "color.background.accent.magenta.subtle": "var(--ds-background-accent-magenta-subtle, #E774BB)",
  "color.background.accent.magenta.subtle.hovered": "var(--ds-background-accent-magenta-subtle-hovered, #F797D2)",
  "color.background.accent.magenta.subtle.pressed": "var(--ds-background-accent-magenta-subtle-pressed, #FDD0EC)",
  "color.background.accent.magenta.bolder": "var(--ds-background-accent-magenta-bolder, #AE4787)",
  "color.background.accent.magenta.bolder.hovered": "var(--ds-background-accent-magenta-bolder-hovered, #943D73)",
  "color.background.accent.magenta.bolder.pressed": "var(--ds-background-accent-magenta-bolder-pressed, #50253F)",
  "color.background.accent.gray.subtlest": "var(--ds-background-accent-gray-subtlest, #6B778C)",
  "color.background.accent.gray.subtlest.hovered": "var(--ds-background-accent-gray-subtlest-hovered, #5E6C84)",
  "color.background.accent.gray.subtlest.pressed": "var(--ds-background-accent-gray-subtlest-pressed, #505F79)",
  "color.background.accent.gray.subtler": "var(--ds-background-accent-gray-subtler, #5E6C84)",
  "color.background.accent.gray.subtler.hovered": "var(--ds-background-accent-gray-subtler-hovered, #505F79)",
  "color.background.accent.gray.subtler.pressed": "var(--ds-background-accent-gray-subtler-pressed, #42526E)",
  "color.background.accent.gray.subtle": "var(--ds-background-accent-gray-subtle, #505F79)",
  "color.background.accent.gray.subtle.hovered": "var(--ds-background-accent-gray-subtle-hovered, #5E6C84)",
  "color.background.accent.gray.subtle.pressed": "var(--ds-background-accent-gray-subtle-pressed, #6B778C)",
  "color.background.accent.gray.bolder": "var(--ds-background-accent-gray-bolder, #42526E)",
  "color.background.accent.gray.bolder.hovered": "var(--ds-background-accent-gray-bolder-hovered, #344563)",
  "color.background.accent.gray.bolder.pressed": "var(--ds-background-accent-gray-bolder-pressed, #253858)",
  "color.background.disabled": "var(--ds-background-disabled, #091e4289)",
  "color.background.input": "var(--ds-background-input, #FAFBFC)",
  "color.background.input.hovered": "var(--ds-background-input-hovered, #EBECF0)",
  "color.background.input.pressed": "var(--ds-background-input-pressed, #FFFFFF)",
  "color.background.inverse.subtle": "var(--ds-background-inverse-subtle, #00000029)",
  "color.background.inverse.subtle.hovered": "var(--ds-background-inverse-subtle-hovered, #0000003D)",
  "color.background.inverse.subtle.pressed": "var(--ds-background-inverse-subtle-pressed, #00000052)",
  "color.background.neutral": "var(--ds-background-neutral, #DFE1E6)",
  "color.background.neutral.hovered": "var(--ds-background-neutral-hovered, #091e4214)",
  "color.background.neutral.pressed": "var(--ds-background-neutral-pressed, #B3D4FF)",
  "color.background.neutral.subtle": "var(--ds-background-neutral-subtle, transparent)",
  "color.background.neutral.subtle.hovered": "var(--ds-background-neutral-subtle-hovered, #091e4214)",
  "color.background.neutral.subtle.pressed": "var(--ds-background-neutral-subtle-pressed, #B3D4FF)",
  "color.background.neutral.bold": "var(--ds-background-neutral-bold, #42526E)",
  "color.background.neutral.bold.hovered": "var(--ds-background-neutral-bold-hovered, #505F79)",
  "color.background.neutral.bold.pressed": "var(--ds-background-neutral-bold-pressed, #344563)",
  "color.background.selected": "var(--ds-background-selected, #DEEBFF)",
  "color.background.selected.hovered": "var(--ds-background-selected-hovered, #B3D4FF)",
  "color.background.selected.pressed": "var(--ds-background-selected-pressed, #4C9AFF)",
  "color.background.selected.bold": "var(--ds-background-selected-bold, #0052CC)",
  "color.background.selected.bold.hovered": "var(--ds-background-selected-bold-hovered, #2684FF)",
  "color.background.selected.bold.pressed": "var(--ds-background-selected-bold-pressed, #0052CC)",
  "color.background.brand.subtlest": "var(--ds-background-brand-subtlest, #B3D4FF)",
  "color.background.brand.subtlest.hovered": "var(--ds-background-brand-subtlest-hovered, #DEEBFF)",
  "color.background.brand.subtlest.pressed": "var(--ds-background-brand-subtlest-pressed, #4C9AFF)",
  "color.background.brand.bold": "var(--ds-background-brand-bold, #0052CC)",
  "color.background.brand.bold.hovered": "var(--ds-background-brand-bold-hovered, #0065FF)",
  "color.background.brand.bold.pressed": "var(--ds-background-brand-bold-pressed, #0747A6)",
  "color.background.brand.boldest": "var(--ds-background-brand-boldest, #0747A6)",
  "color.background.brand.boldest.hovered": "var(--ds-background-brand-boldest-hovered, #0052CC)",
  "color.background.brand.boldest.pressed": "var(--ds-background-brand-boldest-pressed, #0747A6)",
  "color.background.danger": "var(--ds-background-danger, #FFEBE6)",
  "color.background.danger.hovered": "var(--ds-background-danger-hovered, #FFBDAD)",
  "color.background.danger.pressed": "var(--ds-background-danger-pressed, #FF8F73)",
  "color.background.danger.bold": "var(--ds-background-danger-bold, #DE350B)",
  "color.background.danger.bold.hovered": "var(--ds-background-danger-bold-hovered, #FF5630)",
  "color.background.danger.bold.pressed": "var(--ds-background-danger-bold-pressed, #BF2600)",
  "color.background.warning": "var(--ds-background-warning, #FFFAE6)",
  "color.background.warning.hovered": "var(--ds-background-warning-hovered, #FFF0B3)",
  "color.background.warning.pressed": "var(--ds-background-warning-pressed, #FFE380)",
  "color.background.warning.bold": "var(--ds-background-warning-bold, #FFAB00)",
  "color.background.warning.bold.hovered": "var(--ds-background-warning-bold-hovered, #FFC400)",
  "color.background.warning.bold.pressed": "var(--ds-background-warning-bold-pressed, #FF991F)",
  "color.background.success": "var(--ds-background-success, #E3FCEF)",
  "color.background.success.hovered": "var(--ds-background-success-hovered, #ABF5D1)",
  "color.background.success.pressed": "var(--ds-background-success-pressed, #79F2C0)",
  "color.background.success.bold": "var(--ds-background-success-bold, #00875A)",
  "color.background.success.bold.hovered": "var(--ds-background-success-bold-hovered, #57D9A3)",
  "color.background.success.bold.pressed": "var(--ds-background-success-bold-pressed, #00875A)",
  "color.background.discovery": "var(--ds-background-discovery, #EAE6FF)",
  "color.background.discovery.hovered": "var(--ds-background-discovery-hovered, #C0B6F2)",
  "color.background.discovery.pressed": "var(--ds-background-discovery-pressed, #998DD9)",
  "color.background.discovery.bold": "var(--ds-background-discovery-bold, #5243AA)",
  "color.background.discovery.bold.hovered": "var(--ds-background-discovery-bold-hovered, #8777D9)",
  "color.background.discovery.bold.pressed": "var(--ds-background-discovery-bold-pressed, #5243AA)",
  "color.background.information": "var(--ds-background-information, #DEEBFF)",
  "color.background.information.hovered": "var(--ds-background-information-hovered, #B3D4FF)",
  "color.background.information.pressed": "var(--ds-background-information-pressed, #4C9AFF)",
  "color.background.information.bold": "var(--ds-background-information-bold, #0052CC)",
  "color.background.information.bold.hovered": "var(--ds-background-information-bold-hovered, #2684FF)",
  "color.background.information.bold.pressed": "var(--ds-background-information-bold-pressed, #0052CC)",
  "color.blanket": "var(--ds-blanket, #091e4289)",
  "color.blanket.selected": "var(--ds-blanket-selected, #388BFF14)",
  "color.blanket.danger": "var(--ds-blanket-danger, #EF5C4814)",
  "color.skeleton": "var(--ds-skeleton, #F4F5F7)",
  "color.skeleton.subtle": "var(--ds-skeleton-subtle, #091e420a)",
  "elevation.surface": "var(--ds-surface, #FFFFFF)",
  "elevation.surface.hovered": "var(--ds-surface-hovered, #FAFBFC)",
  "elevation.surface.pressed": "var(--ds-surface-pressed, #F4F5F7)",
  "elevation.surface.overlay": "var(--ds-surface-overlay, #FFFFFF)",
  "elevation.surface.overlay.hovered": "var(--ds-surface-overlay-hovered, #FAFBFC)",
  "elevation.surface.overlay.pressed": "var(--ds-surface-overlay-pressed, #F4F5F7)",
  "elevation.surface.raised": "var(--ds-surface-raised, #FFFFFF)",
  "elevation.surface.raised.hovered": "var(--ds-surface-raised-hovered, #FAFBFC)",
  "elevation.surface.raised.pressed": "var(--ds-surface-raised-pressed, #F4F5F7)",
  "elevation.surface.sunken": "var(--ds-surface-sunken, #F4F5F7)",
  "utility.elevation.surface.current": "var(--ds-elevation-surface-current, #FFFFFF)"
};
var textColorMap = {
  "color.text": "var(--ds-text, #172B4D)",
  "color.text.accent.lime": "var(--ds-text-accent-lime, #4C6B1F)",
  "color.text.accent.lime.bolder": "var(--ds-text-accent-lime-bolder, #37471F)",
  "color.text.accent.red": "var(--ds-text-accent-red, #DE350B)",
  "color.text.accent.red.bolder": "var(--ds-text-accent-red-bolder, #BF2600)",
  "color.text.accent.orange": "var(--ds-text-accent-orange, #F18D13)",
  "color.text.accent.orange.bolder": "var(--ds-text-accent-orange-bolder, #B65C02)",
  "color.text.accent.yellow": "var(--ds-text-accent-yellow, #FF991F)",
  "color.text.accent.yellow.bolder": "var(--ds-text-accent-yellow-bolder, #FF8B00)",
  "color.text.accent.green": "var(--ds-text-accent-green, #00875A)",
  "color.text.accent.green.bolder": "var(--ds-text-accent-green-bolder, #006644)",
  "color.text.accent.teal": "var(--ds-text-accent-teal, #00A3BF)",
  "color.text.accent.teal.bolder": "var(--ds-text-accent-teal-bolder, #008DA6)",
  "color.text.accent.blue": "var(--ds-text-accent-blue, #0052CC)",
  "color.text.accent.blue.bolder": "var(--ds-text-accent-blue-bolder, #0747A6)",
  "color.text.accent.purple": "var(--ds-text-accent-purple, #5243AA)",
  "color.text.accent.purple.bolder": "var(--ds-text-accent-purple-bolder, #403294)",
  "color.text.accent.magenta": "var(--ds-text-accent-magenta, #E774BB)",
  "color.text.accent.magenta.bolder": "var(--ds-text-accent-magenta-bolder, #DA62AC)",
  "color.text.accent.gray": "var(--ds-text-accent-gray, #505F79)",
  "color.text.accent.gray.bolder": "var(--ds-text-accent-gray-bolder, #172B4D)",
  "color.text.disabled": "var(--ds-text-disabled, #A5ADBA)",
  "color.text.inverse": "var(--ds-text-inverse, #FFFFFF)",
  "color.text.selected": "var(--ds-text-selected, #0052CC)",
  "color.text.brand": "var(--ds-text-brand, #0065FF)",
  "color.text.danger": "var(--ds-text-danger, #DE350B)",
  "color.text.warning": "var(--ds-text-warning, #974F0C)",
  "color.text.warning.inverse": "var(--ds-text-warning-inverse, #172B4D)",
  "color.text.success": "var(--ds-text-success, #006644)",
  "color.text.discovery": "var(--ds-text-discovery, #403294)",
  "color.text.information": "var(--ds-text-information, #0052CC)",
  "color.text.subtlest": "var(--ds-text-subtlest, #7A869A)",
  "color.text.subtle": "var(--ds-text-subtle, #42526E)",
  "color.link": "var(--ds-link, #0052CC)",
  "color.link.pressed": "var(--ds-link-pressed, #0747A6)",
  "color.link.visited": "var(--ds-link-visited, #403294)",
  "color.link.visited.pressed": "var(--ds-link-visited-pressed, #403294)"
};
var layerMap = {
  "1": 1,
  card: 100,
  navigation: 200,
  dialog: 300,
  layer: 400,
  blanket: 500,
  modal: 510,
  flag: 600,
  spotlight: 700,
  tooltip: 800
};
var borderWidthMap = {
  "border.width": "var(--ds-border-width, 1px)",
  // @deprecated
  "border.width.0": "var(--ds-border-width-0, 0px)",
  // @deprecated
  "border.width.indicator": "var(--ds-border-width-indicator, 3px)",
  // @deprecated
  "border.width.outline": "var(--ds-border-width-outline, 2px)",
  "border.width.selected": "var(--ds-border-width-selected, 2px)",
  "border.width.focused": "var(--ds-border-width-focused, 2px)"
};
var borderRadiusMap = {
  "radius.xsmall": "var(--ds-radius-xsmall, 2px)",
  "radius.small": "var(--ds-radius-small, 3px)",
  "radius.medium": "var(--ds-radius-medium, 6px)",
  "radius.large": "var(--ds-radius-large, 8px)",
  "radius.xlarge": "var(--ds-radius-xlarge, 12px)",
  "radius.full": "var(--ds-radius-full, 9999px)",
  "radius.tile": "var(--ds-radius-tile, 25%)",
  // @deprecated
  "border.radius": "var(--ds-border-radius, 3px)",
  // @deprecated
  "border.radius.050": "var(--ds-border-radius-050, 2px)",
  // @deprecated
  "border.radius.100": "var(--ds-border-radius-100, 3px)",
  // @deprecated
  "border.radius.200": "var(--ds-border-radius-200, 8px)",
  // @deprecated
  "border.radius.300": "var(--ds-border-radius-300, 12px)",
  // @deprecated
  "border.radius.400": "var(--ds-border-radius-400, 16px)",
  // @deprecated
  "border.radius.circle": "var(--ds-border-radius-circle, 9999px)"
};
var fontMap = {
  "font.body": 'var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.body.UNSAFE_small": 'var(--ds-font-body-UNSAFE_small, normal 400 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.body.large": 'var(--ds-font-body-large, normal 400 16px/24px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.body.small": 'var(--ds-font-body-small, normal 400 11px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.code": 'var(--ds-font-code, normal 400 0.875em/1 ui-monospace, Menlo, "Segoe UI Mono", "Ubuntu Mono", monospace)',
  "font.heading.large": 'var(--ds-font-heading-large, normal 500 24px/28px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.heading.medium": 'var(--ds-font-heading-medium, normal 500 20px/24px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.heading.small": 'var(--ds-font-heading-small, normal 600 16px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.heading.xlarge": 'var(--ds-font-heading-xlarge, normal 600 29px/32px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.heading.xsmall": 'var(--ds-font-heading-xsmall, normal 600 14px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.heading.xxlarge": 'var(--ds-font-heading-xxlarge, normal 500 35px/40px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.heading.xxsmall": 'var(--ds-font-heading-xxsmall, normal 600 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.metric.large": 'var(--ds-font-metric-large, normal 653 28px/32px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.metric.medium": 'var(--ds-font-metric-medium, normal 653 24px/28px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.metric.small": 'var(--ds-font-metric-small, normal 653 16px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)'
};
var fontWeightMap = {
  "font.weight.bold": "var(--ds-font-weight-bold, 700)",
  "font.weight.medium": "var(--ds-font-weight-medium, 500)",
  "font.weight.regular": "var(--ds-font-weight-regular, 400)",
  "font.weight.semibold": "var(--ds-font-weight-semibold, 600)"
};
var fontFamilyMap = {
  "font.family.body": 'var(--ds-font-family-body, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.family.brand.body": 'var(--ds-font-family-brand-body, "Charlie Text", ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.family.brand.heading": 'var(--ds-font-family-brand-heading, "Charlie Display", ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  "font.family.code": 'var(--ds-font-family-code, ui-monospace, Menlo, "Segoe UI Mono", "Ubuntu Mono", monospace)',
  "font.family.heading": 'var(--ds-font-family-heading, ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)'
};
var textSizeMap = {
  medium: 'var(--ds-font-body, normal 400 14px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  UNSAFE_small: 'var(--ds-font-body-UNSAFE_small, normal 400 12px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  large: 'var(--ds-font-body-large, normal 400 16px/24px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  small: 'var(--ds-font-body-small, normal 400 11px/16px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)'
};
var textWeightMap = {
  bold: "var(--ds-font-weight-bold, 700)",
  medium: "var(--ds-font-weight-medium, 500)",
  regular: "var(--ds-font-weight-regular, 400)",
  semibold: "var(--ds-font-weight-semibold, 600)"
};
var metricTextSizeMap = {
  large: 'var(--ds-font-metric-large, normal 653 28px/32px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  medium: 'var(--ds-font-metric-medium, normal 653 24px/28px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)',
  small: 'var(--ds-font-metric-small, normal 653 16px/20px ui-sans-serif, -apple-system, BlinkMacSystemFont, "Segoe UI", Ubuntu, "Helvetica Neue", sans-serif)'
};
var spacingProperties = [
  // Used by Box
  "padding",
  "paddingBlock",
  "paddingBlockStart",
  "paddingBlockEnd",
  "paddingInline",
  "paddingInlineStart",
  "paddingInlineEnd",
  // Used by Inline and Stack
  "gap",
  "rowGap",
  "columnGap"
];
var getSerializedStylesMap = function getSerializedStylesMap2(cssProperty, tokenMap) {
  return Object.keys(tokenMap).reduce(function(emotionSpacingMap, token) {
    emotionSpacingMap[token] = css(_defineProperty({}, cssProperty, tokenMap[token]));
    return emotionSpacingMap;
  }, {});
};
var paddingStylesMap = spacingProperties.reduce(function(styleMap, spacingProperty) {
  styleMap[spacingProperty] = getSerializedStylesMap(spacingProperty, positiveSpaceMap);
  return styleMap;
}, {});
var spaceStylesMap = spacingProperties.reduce(function(styleMap, spacingProperty) {
  styleMap[spacingProperty] = getSerializedStylesMap(spacingProperty, positiveSpaceMap);
  return styleMap;
}, {});
var backgroundColorStylesMap = getSerializedStylesMap("backgroundColor", backgroundColorMap);
var textColorStylesMap = getSerializedStylesMap("color", textColorMap);
var fontWeightStylesMap = getSerializedStylesMap("fontWeight", fontWeightMap);
var fontFamilyStylesMap = getSerializedStylesMap("fontFamily", fontFamilyMap);
var fontStylesMap = getSerializedStylesMap("font", fontMap);
var textSizeStylesMap = getSerializedStylesMap("font", textSizeMap);
var textWeightStylesMap = getSerializedStylesMap("fontWeight", textWeightMap);
var surfaceColorStylesMap = getSerializedStylesMap(CURRENT_SURFACE_CSS_VAR, surfaceColorMap);
var isSurfaceColorToken = function isSurfaceColorToken2(color) {
  return surfaceColorMap[color] !== void 0;
};
var metricTextSizeStylesMap = getSerializedStylesMap("font", metricTextSizeMap);

// node_modules/@atlaskit/primitives/dist/esm/xcss/xcss.js
function _createForOfIteratorHelper(r, e) {
  var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (!t) {
    if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
      t && (r = t);
      var _n = 0, F = function F2() {
      };
      return { s: F, n: function n() {
        return _n >= r.length ? { done: true } : { done: false, value: r[_n++] };
      }, e: function e2(r2) {
        throw r2;
      }, f: F };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  var o, a = true, u = false;
  return { s: function s() {
    t = t.call(r);
  }, n: function n() {
    var r2 = t.next();
    return a = r2.done, r2;
  }, e: function e2(r2) {
    u = true, o = r2;
  }, f: function f() {
    try {
      a || null == t.return || t.return();
    } finally {
      if (u)
        throw o;
    }
  } };
}
function _unsupportedIterableToArray(r, a) {
  if (r) {
    if ("string" == typeof r)
      return _arrayLikeToArray(r, a);
    var t = {}.toString.call(r).slice(8, -1);
    return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
  }
}
function _arrayLikeToArray(r, a) {
  (null == a || a > r.length) && (a = r.length);
  for (var e = 0, n = Array(a); e < a; e++)
    n[e] = r[e];
  return n;
}
var tokensMap = {
  backgroundColor: backgroundColorMap,
  blockSize: dimensionMap,
  borderBlockColor: borderColorMap,
  borderBlockEndColor: borderColorMap,
  borderBlockEndWidth: borderWidthMap,
  borderBlockStartColor: borderColorMap,
  borderBlockStartWidth: borderWidthMap,
  borderBlockWidth: borderWidthMap,
  borderBottomColor: borderColorMap,
  borderBottomLeftRadius: borderRadiusMap,
  borderBottomRightRadius: borderRadiusMap,
  borderBottomWidth: borderWidthMap,
  borderColor: borderColorMap,
  borderEndEndRadius: borderRadiusMap,
  borderEndStartRadius: borderRadiusMap,
  borderInlineColor: borderColorMap,
  borderInlineEndColor: borderColorMap,
  borderInlineEndWidth: borderWidthMap,
  borderInlineStartColor: borderColorMap,
  borderInlineStartWidth: borderWidthMap,
  borderInlineWidth: borderWidthMap,
  borderLeftColor: borderColorMap,
  borderLeftWidth: borderWidthMap,
  borderRadius: borderRadiusMap,
  borderRightColor: borderColorMap,
  borderRightWidth: borderWidthMap,
  borderStartEndRadius: borderRadiusMap,
  borderStartStartRadius: borderRadiusMap,
  borderTopColor: borderColorMap,
  borderTopLeftRadius: borderRadiusMap,
  borderTopRightRadius: borderRadiusMap,
  borderTopWidth: borderWidthMap,
  borderWidth: borderWidthMap,
  bottom: allSpaceMap,
  boxShadow: shadowMap,
  color: textColorMap,
  columnGap: positiveSpaceMap,
  font: fontMap,
  fontFamily: fontFamilyMap,
  fontWeight: fontWeightMap,
  gap: positiveSpaceMap,
  height: dimensionMap,
  inlineSize: dimensionMap,
  inset: allSpaceMap,
  insetBlock: allSpaceMap,
  insetBlockEnd: allSpaceMap,
  insetBlockStart: allSpaceMap,
  insetInline: allSpaceMap,
  insetInlineEnd: allSpaceMap,
  insetInlineStart: allSpaceMap,
  left: allSpaceMap,
  margin: allSpaceMap,
  marginBlock: allSpaceMap,
  marginBlockEnd: allSpaceMap,
  marginBlockStart: allSpaceMap,
  marginBottom: allSpaceMap,
  marginInline: allSpaceMap,
  marginInlineEnd: allSpaceMap,
  marginInlineStart: allSpaceMap,
  marginLeft: allSpaceMap,
  marginRight: allSpaceMap,
  marginTop: allSpaceMap,
  maxBlockSize: dimensionMap,
  maxHeight: dimensionMap,
  maxInlineSize: dimensionMap,
  maxWidth: dimensionMap,
  minBlockSize: dimensionMap,
  minHeight: dimensionMap,
  minInlineSize: dimensionMap,
  minWidth: dimensionMap,
  opacity: opacityMap,
  outlineColor: borderColorMap,
  outlineOffset: allSpaceMap,
  outlineWidth: borderWidthMap,
  padding: positiveSpaceMap,
  paddingBlock: positiveSpaceMap,
  paddingBlockEnd: positiveSpaceMap,
  paddingBlockStart: positiveSpaceMap,
  paddingBottom: positiveSpaceMap,
  paddingInline: positiveSpaceMap,
  paddingInlineEnd: positiveSpaceMap,
  paddingInlineStart: positiveSpaceMap,
  paddingLeft: positiveSpaceMap,
  paddingRight: positiveSpaceMap,
  paddingTop: positiveSpaceMap,
  right: allSpaceMap,
  rowGap: positiveSpaceMap,
  top: allSpaceMap,
  width: dimensionMap,
  zIndex: layerMap
};
var uniqueSymbol = Symbol("UNSAFE_INTERNAL_styles");
var isSafeEnvToThrow = function isSafeEnvToThrow2() {
  return (typeof process === "undefined" ? "undefined" : _typeof(process)) === "object" && _typeof(process.env) === "object" && true;
};
var reNestedSelectors = /(\.|\s|&+|\*\>|#|\[.*\])/;
var safeSelectors = /^@media .*$|^::?.*$|^@supports .*$/;
var _transformStyles = function transformStyles(styleObj) {
  if (!styleObj || _typeof(styleObj) !== "object") {
    return styleObj;
  }
  if (Array.isArray(styleObj)) {
    return styleObj.map(_transformStyles);
  }
  Object.entries(styleObj).forEach(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
    if (_typeof(value) === "object" && safeSelectors.test(key)) {
      styleObj[key] = _transformStyles(value);
      return;
    }
    if (isSafeEnvToThrow()) {
      if (reNestedSelectors.test(key)) {
        throw new Error("Styles not supported for key '".concat(key, "'."));
      }
    }
    if (!(key in tokensMap)) {
      return;
    }
    var tokenValue = tokensMap[key][value];
    styleObj[key] = tokenValue !== null && tokenValue !== void 0 ? tokenValue : value;
  });
  return styleObj;
};
var baseXcss = function baseXcss2(style) {
  var transformedStyles = _transformStyles(style);
  return _defineProperty({}, uniqueSymbol, css(transformedStyles));
};
var _parseXcss = function parseXcss(args) {
  if (Array.isArray(args)) {
    var emotion = [];
    var staticArr = [];
    var _iterator = _createForOfIteratorHelper(args), _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
        var arg = _step.value;
        var result = _parseXcss(arg);
        if (result.emotion) {
          emotion.push.apply(emotion, _toConsumableArray(result.emotion));
        }
        if (result.static) {
          staticArr.push(result.static);
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    return {
      emotion,
      static: staticArr.join(" ")
    };
  }
  var objArgs = args;
  var _ref4 = objArgs || {}, styles = _ref4[uniqueSymbol];
  if (styles) {
    return {
      emotion: [styles]
    };
  }
  if (args) {
    var stringifiedArgs = "".concat(args);
    if (stringifiedArgs) {
      return {
        static: stringifiedArgs
      };
    }
  }
  return {};
};
function xcss(style) {
  return baseXcss(style);
}

// node_modules/@atlaskit/primitives/dist/esm/components/flex.js
var import_react3 = __toESM(require_react());
var justifyContentMap = {
  start: css({
    justifyContent: "start"
  }),
  center: css({
    justifyContent: "center"
  }),
  end: css({
    justifyContent: "end"
  }),
  "space-between": css({
    justifyContent: "space-between"
  }),
  "space-around": css({
    justifyContent: "space-around"
  }),
  "space-evenly": css({
    justifyContent: "space-evenly"
  }),
  stretch: css({
    justifyContent: "stretch"
  })
};
var flexDirectionMap = {
  column: css({
    flexDirection: "column"
  }),
  row: css({
    flexDirection: "row"
  })
};
var flexWrapMap = {
  wrap: css({
    flexWrap: "wrap"
  }),
  nowrap: css({
    flexWrap: "nowrap"
  })
};
var alignItemsMap = {
  start: css({
    alignItems: "start"
  }),
  center: css({
    alignItems: "center"
  }),
  baseline: css({
    alignItems: "baseline"
  }),
  end: css({
    alignItems: "end"
  }),
  stretch: css({
    alignItems: "stretch"
  })
};
var baseStyles = css({
  display: "flex",
  boxSizing: "border-box"
});
var Flex = (0, import_react3.memo)((0, import_react3.forwardRef)(function(_ref, ref) {
  var _ref$as = _ref.as, Component = _ref$as === void 0 ? "div" : _ref$as, role = _ref.role, alignItems = _ref.alignItems, justifyContent = _ref.justifyContent, gap = _ref.gap, columnGap = _ref.columnGap, rowGap = _ref.rowGap, children = _ref.children, testId = _ref.testId, direction = _ref.direction, wrap = _ref.wrap, xcss2 = _ref.xcss, id = _ref.id;
  var resolvedStyles = _parseXcss(xcss2);
  return jsx(Component, {
    id,
    role,
    className: resolvedStyles.static,
    css: [
      baseStyles,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      gap && spaceStylesMap.gap[gap],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      columnGap && spaceStylesMap.columnGap[columnGap],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      rowGap && spaceStylesMap.rowGap[rowGap],
      alignItems && alignItemsMap[alignItems],
      direction && flexDirectionMap[direction],
      justifyContent && justifyContentMap[justifyContent],
      wrap && flexWrapMap[wrap]
    ].concat(_toConsumableArray(resolvedStyles.emotion || [])),
    "data-testid": testId,
    ref
  }, children);
}));
Flex.displayName = "Flex";
var flex_default = Flex;

// node_modules/@atlaskit/primitives/dist/esm/components/box.js
init_extends();
init_objectWithoutProperties();
var import_react5 = __toESM(require_react());
var _excluded = ["as", "children", "backgroundColor", "padding", "paddingBlock", "paddingBlockStart", "paddingBlockEnd", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "style", "testId", "xcss"];
var _excluded2 = ["className"];
var Box = (0, import_react5.forwardRef)(
  function(_ref, ref) {
    var _ref$as = _ref.as, Component = _ref$as === void 0 ? "div" : _ref$as, children = _ref.children, backgroundColor = _ref.backgroundColor, padding = _ref.padding, paddingBlock = _ref.paddingBlock, paddingBlockStart = _ref.paddingBlockStart, paddingBlockEnd = _ref.paddingBlockEnd, paddingInline = _ref.paddingInline, paddingInlineStart = _ref.paddingInlineStart, paddingInlineEnd = _ref.paddingInlineEnd, style = _ref.style, testId = _ref.testId, xcss2 = _ref.xcss, htmlAttributes = _objectWithoutProperties(_ref, _excluded);
    var _spreadClass = htmlAttributes.className, safeHtmlAttributes = _objectWithoutProperties(htmlAttributes, _excluded2);
    var resolvedStyles = _parseXcss(xcss2);
    var node = (
      // @ts-expect-error Expression produces a union type that is too complex to represent. I think this is unavoidable
      jsx(
        Component,
        _extends({
          style,
          ref,
          className: resolvedStyles.static
        }, safeHtmlAttributes, {
          css: [
            baseStyles2,
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            backgroundColor && backgroundColorStylesMap[backgroundColor],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            isSurfaceColorToken(backgroundColor) && surfaceColorStylesMap[backgroundColor],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            padding && paddingStylesMap.padding[padding],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            paddingBlock && paddingStylesMap.paddingBlock[paddingBlock],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            paddingBlockStart && paddingStylesMap.paddingBlockStart[paddingBlockStart],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            paddingBlockEnd && paddingStylesMap.paddingBlockEnd[paddingBlockEnd],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            paddingInline && paddingStylesMap.paddingInline[paddingInline],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            paddingInlineStart && paddingStylesMap.paddingInlineStart[paddingInlineStart],
            // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
            paddingInlineEnd && paddingStylesMap.paddingInlineEnd[paddingInlineEnd],
            resolvedStyles.emotion
          ],
          "data-testid": testId
        }),
        children
      )
    );
    return backgroundColor ? jsx(SurfaceContext.Provider, {
      value: backgroundColor
    }, node) : node;
  }
  // @ts-ignore This typescript error has been surpessed while locally enrolling `@atlaskit/primitives` into Jira
  // The return type of `BoxComponent` does not match the return type of `forwardRef` in React 18
);
var baseStyles2 = css({
  boxSizing: "border-box",
  appearance: "none",
  border: "none"
});

// node_modules/@atlaskit/primitives/dist/esm/components/inline.js
var import_react7 = __toESM(require_react());
var flexGrowMap = {
  hug: xcss({
    flexGrow: 0
  }),
  fill: xcss({
    width: "100%",
    flexGrow: 1
  })
};
var separatorStyles = css({
  color: "var(--ds-text-subtle, #42526E)",
  marginBlock: "var(--ds-space-0, 0px)",
  marginInline: "var(--ds-space-negative-025, -2px)",
  pointerEvents: "none",
  userSelect: "none"
});
var Separator = function Separator2(_ref) {
  var children = _ref.children;
  return jsx("span", {
    css: separatorStyles
  }, children);
};
var Inline = (0, import_react7.memo)((0, import_react7.forwardRef)(function(_ref2, ref) {
  var as = _ref2.as, alignInline = _ref2.alignInline, _ref2$alignBlock = _ref2.alignBlock, alignItems = _ref2$alignBlock === void 0 ? "start" : _ref2$alignBlock, _ref2$shouldWrap = _ref2.shouldWrap, shouldWrap = _ref2$shouldWrap === void 0 ? false : _ref2$shouldWrap, spread = _ref2.spread, grow = _ref2.grow, space = _ref2.space, rowSpace = _ref2.rowSpace, separator = _ref2.separator, xcss2 = _ref2.xcss, testId = _ref2.testId, role = _ref2.role, id = _ref2.id, rawChildren = _ref2.children;
  var separatorComponent = typeof separator === "string" ? jsx(Separator, null, separator) : separator;
  var children = separatorComponent ? import_react7.Children.toArray(rawChildren).filter(Boolean).map(function(child, index) {
    return jsx(import_react7.Fragment, {
      key: index
    }, separator && index > 0 ? separatorComponent : null, child);
  }) : rawChildren;
  var justifyContent = spread || alignInline;
  var styles = grow ? [flexGrowMap[grow]].concat(_toConsumableArray(Array.isArray(xcss2) ? xcss2 : [xcss2])) : xcss2;
  return jsx(flex_default, {
    id,
    as,
    role,
    alignItems,
    justifyContent,
    direction: "row",
    gap: space,
    rowGap: rowSpace,
    wrap: shouldWrap ? "wrap" : void 0,
    xcss: styles,
    testId,
    ref
  }, children);
}));
Inline.displayName = "Inline";

// node_modules/@atlaskit/primitives/dist/esm/components/stack.js
var import_react9 = __toESM(require_react());
var flexGrowMap2 = {
  hug: xcss({
    flexGrow: 0
  }),
  fill: xcss({
    width: "100%",
    flexGrow: 1
  })
};
var Stack = (0, import_react9.memo)((0, import_react9.forwardRef)(function(_ref, ref) {
  var as = _ref.as, alignItems = _ref.alignInline, _ref$alignBlock = _ref.alignBlock, alignBlock = _ref$alignBlock === void 0 ? "stretch" : _ref$alignBlock, spread = _ref.spread, grow = _ref.grow, space = _ref.space, children = _ref.children, testId = _ref.testId, xcss2 = _ref.xcss, role = _ref.role, id = _ref.id;
  var justifyContent = spread || alignBlock;
  var styles = grow ? [flexGrowMap2[grow]].concat(_toConsumableArray(Array.isArray(xcss2) ? xcss2 : [xcss2])) : xcss2;
  return jsx(flex_default, {
    id,
    as,
    role,
    gap: space,
    direction: "column",
    alignItems,
    justifyContent,
    xcss: styles,
    testId,
    ref
  }, children);
}));
Stack.displayName = "Stack";

// node_modules/@atlaskit/primitives/dist/esm/components/grid.js
init_defineProperty();
var import_react11 = __toESM(require_react());
var gridTemplateAreasVar = "--ds-grid--grid-template-areas";
var gridTemplateColumnsVar = "--ds-grid--grid-template-columns";
var gridTemplateRowsVar = "--ds-grid--grid-template-rows";
var justifyContentMap2 = {
  start: css({
    justifyContent: "start"
  }),
  center: css({
    justifyContent: "center"
  }),
  end: css({
    justifyContent: "end"
  }),
  "space-between": css({
    justifyContent: "space-between"
  }),
  "space-around": css({
    justifyContent: "space-around"
  }),
  "space-evenly": css({
    justifyContent: "space-evenly"
  }),
  stretch: css({
    justifyContent: "stretch"
  })
};
var justifyItemsMap = {
  start: css({
    justifyItems: "start"
  }),
  center: css({
    justifyItems: "center"
  }),
  end: css({
    justifyItems: "end"
  }),
  stretch: css({
    justifyItems: "stretch"
  })
};
var alignContentMap = {
  start: css({
    alignContent: "start"
  }),
  center: css({
    alignContent: "center"
  }),
  end: css({
    alignContent: "end"
  }),
  "space-between": css({
    alignContent: "space-between"
  }),
  "space-around": css({
    alignContent: "space-around"
  }),
  "space-evenly": css({
    alignContent: "space-evenly"
  }),
  stretch: css({
    alignContent: "stretch"
  })
};
var alignItemsMap2 = {
  start: css({
    alignItems: "start"
  }),
  center: css({
    alignItems: "center"
  }),
  baseline: css({
    alignItems: "baseline"
  }),
  end: css({
    alignItems: "end"
  })
};
var baseStyles3 = css({
  display: "grid",
  boxSizing: "border-box",
  gridTemplateAreas: "var(".concat(gridTemplateAreasVar, ")"),
  gridTemplateColumns: "var(".concat(gridTemplateColumnsVar, ")"),
  gridTemplateRows: "var(".concat(gridTemplateRowsVar, ")")
});
var gridAutoFlowMap = {
  row: css({
    gridAutoFlow: "row"
  }),
  column: css({
    gridAutoFlow: "column"
  }),
  dense: css({
    gridAutoFlow: "dense"
  }),
  "row dense": css({
    gridAutoFlow: "row dense"
  }),
  "column dense": css({
    gridAutoFlow: "column dense"
  })
};
var Grid = (0, import_react11.memo)((0, import_react11.forwardRef)(function(_ref, ref) {
  var as = _ref.as, alignItems = _ref.alignItems, alignContent = _ref.alignContent, justifyContent = _ref.justifyContent, gap = _ref.gap, columnGap = _ref.columnGap, rowGap = _ref.rowGap, children = _ref.children, id = _ref.id, role = _ref.role, testId = _ref.testId, autoFlow = _ref.autoFlow, gridTemplateAreas = _ref.templateAreas, gridTemplateRows = _ref.templateRows, gridTemplateColumns = _ref.templateColumns, xcss2 = _ref.xcss;
  var Component = as || "div";
  var resolvedStyles = _parseXcss(xcss2);
  var style = (0, import_react11.useMemo)(function() {
    return _defineProperty(_defineProperty(_defineProperty({}, gridTemplateAreasVar, gridTemplateAreas ? gridTemplateAreas.map(function(str) {
      return '"'.concat(str, '"');
    }).join("\n") || "initial" : "initial"), gridTemplateColumnsVar, gridTemplateColumns || "initial"), gridTemplateRowsVar, gridTemplateRows || "initial");
  }, [gridTemplateAreas, gridTemplateColumns, gridTemplateRows]);
  return jsx(Component, {
    id,
    role,
    style,
    className: resolvedStyles.static,
    css: [
      baseStyles3,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      gap && spaceStylesMap.gap[gap],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      columnGap && spaceStylesMap.columnGap[columnGap],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      rowGap && spaceStylesMap.rowGap[rowGap],
      alignItems && alignItemsMap2[alignItems],
      alignContent && alignContentMap[alignContent],
      justifyContent && justifyContentMap2[justifyContent],
      autoFlow && gridAutoFlowMap[autoFlow]
    ].concat(_toConsumableArray(resolvedStyles.emotion || [])),
    "data-testid": testId,
    ref
  }, children);
}));
Grid.displayName = "Grid";

// node_modules/@atlaskit/primitives/dist/esm/components/bleed.js
var import_react13 = __toESM(require_react());
var baseStyles4 = css({
  boxSizing: "border-box"
});
var blockBleedMap = {
  "space.025": css({
    marginBlock: "var(--ds-space-negative-025, -0.125rem)"
  }),
  "space.050": css({
    marginBlock: "var(--ds-space-negative-050, -0.25rem)"
  }),
  "space.100": css({
    marginBlock: "var(--ds-space-negative-100, -0.5rem)"
  }),
  "space.150": css({
    marginBlock: "var(--ds-space-negative-150, -0.75rem)"
  }),
  "space.200": css({
    marginBlock: "var(--ds-space-negative-200, -1rem)"
  })
};
var inlineBleedMap = {
  "space.025": css({
    marginInline: "var(--ds-space-negative-025, -0.125rem)"
  }),
  "space.050": css({
    marginInline: "var(--ds-space-negative-050, -0.25rem)"
  }),
  "space.100": css({
    marginInline: "var(--ds-space-negative-100, -0.5rem)"
  }),
  "space.150": css({
    marginInline: "var(--ds-space-negative-150, -0.75rem)"
  }),
  "space.200": css({
    marginInline: "var(--ds-space-negative-200, -1rem)"
  })
};
var Bleed = import_react13.default.memo(function(_ref) {
  var children = _ref.children, testId = _ref.testId, inline = _ref.inline, block = _ref.block, all = _ref.all, xcss2 = _ref.xcss;
  var resolvedStyles = _parseXcss(xcss2);
  return jsx("div", {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    className: resolvedStyles.static,
    css: [baseStyles4, (inline || all) && inlineBleedMap[inline || all], (block || all) && blockBleedMap[block || all]].concat(_toConsumableArray(resolvedStyles.emotion || [])),
    "data-testid": testId
  }, children);
});
Bleed.displayName = "Bleed";

// node_modules/@atlaskit/primitives/dist/esm/components/text.js
var import_react15 = __toESM(require_react());
var asAllowlist = ["span", "p", "strong", "em"];
var resetStyles = css({
  margin: 0,
  overflowWrap: "anywhere"
});
var strongStyles = css({
  fontWeight: "var(--ds-font-weight-bold, 700)"
});
var emStyles = css({
  fontStyle: "italic"
});
var textAlignMap = {
  center: css({
    textAlign: "center"
  }),
  end: css({
    textAlign: "end"
  }),
  start: css({
    textAlign: "start"
  })
};
var truncationStyles = css({
  display: "-webkit-box",
  overflow: "hidden",
  WebkitBoxOrient: "vertical"
});
var wordBreakMap = {
  breakAll: css({
    wordBreak: "break-all"
  })
};
var useColor = function useColor2(colorProp, hasTextAncestor) {
  var surface = useSurface();
  if (colorProp === "inherit") {
    return void 0;
  }
  if (colorProp) {
    return colorProp;
  }
  if (hasTextAncestor) {
    return void 0;
  }
  if (inverseColorMap.hasOwnProperty(surface)) {
    return inverseColorMap[surface];
  }
  return "color.text";
};
var Text = (0, import_react15.forwardRef)(function(_ref, ref) {
  var _ref$as = _ref.as, Component = _ref$as === void 0 ? "span" : _ref$as, colorProp = _ref.color, align = _ref.align, testId = _ref.testId, id = _ref.id, size = _ref.size, weight = _ref.weight, maxLines = _ref.maxLines, children = _ref.children;
  invariant(asAllowlist.includes(Component), '@atlaskit/primitives: Text received an invalid "as" value of "'.concat(Component, '"'));
  var hasTextAncestor = useHasTextAncestor();
  var color = useColor(colorProp, hasTextAncestor);
  if (!size && !hasTextAncestor) {
    size = "medium";
  }
  var component = jsx(Component, {
    ref,
    css: [
      resetStyles,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
      size && textSizeStylesMap[size],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
      color && textColorStylesMap[color],
      maxLines && truncationStyles,
      maxLines === 1 && wordBreakMap.breakAll,
      align && textAlignMap[align],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
      weight && textWeightStylesMap[weight],
      Component === "em" && emStyles,
      Component === "strong" && strongStyles
    ],
    style: {
      WebkitLineClamp: maxLines
    },
    "data-testid": testId,
    id
  }, children);
  return hasTextAncestor ? (
    // no need to re-apply context if the text is already wrapped
    component
  ) : jsx(HasTextAncestorProvider, {
    value: true
  }, component);
});

// node_modules/@atlaskit/primitives/dist/esm/components/metric-text.js
var import_react17 = __toESM(require_react());
var asAllowlist2 = ["span", "div"];
var resetStyles2 = css({
  margin: 0
});
var textAlignMap2 = {
  center: css({
    textAlign: "center"
  }),
  end: css({
    textAlign: "end"
  }),
  start: css({
    textAlign: "start"
  })
};
var MetricText = (0, import_react17.forwardRef)(function(_ref, ref) {
  var _ref$as = _ref.as, Component = _ref$as === void 0 ? "span" : _ref$as, align = _ref.align, testId = _ref.testId, id = _ref.id, size = _ref.size, children = _ref.children;
  invariant(asAllowlist2.includes(Component), '@atlaskit/primitives: MetricText received an invalid "as" value of "'.concat(Component, '"'));
  var component = jsx(Component, {
    ref,
    css: [
      resetStyles2,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values
      size && metricTextSizeStylesMap[size],
      align && textAlignMap2[align]
    ],
    "data-testid": testId,
    id
  }, children);
  return component;
});

// node_modules/@atlaskit/primitives/dist/esm/components/pressable.js
init_extends();
init_objectWithoutProperties();
var import_react19 = __toESM(require_react());
var _excluded3 = ["children", "backgroundColor", "padding", "paddingBlock", "paddingBlockStart", "paddingBlockEnd", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "isDisabled", "type", "onClick", "interactionName", "componentName", "analyticsContext", "style", "testId", "xcss"];
var _excluded22 = ["className"];
var focusRingStyles = css({
  "&:focus, &:focus-visible": {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values
    outlineColor: borderColorMap["color.border.focused"],
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values
    outlineOffset: positiveSpaceMap["space.025"],
    outlineStyle: "solid",
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values
    outlineWidth: borderWidthMap["border.width.focused"]
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors
  "&:focus:not(:focus-visible)": {
    outline: "none"
  },
  "@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)": {
    "&:focus-visible": {
      outline: "1px solid"
    }
  }
});
var baseStyles5 = css({
  boxSizing: "border-box",
  appearance: "none",
  border: "none"
});
var enabledStyles = css({
  cursor: "pointer"
});
var disabledStyles = css({
  cursor: "not-allowed"
});
var Pressable = (0, import_react19.forwardRef)(function(_ref, ref) {
  var children = _ref.children, backgroundColor = _ref.backgroundColor, padding = _ref.padding, paddingBlock = _ref.paddingBlock, paddingBlockStart = _ref.paddingBlockStart, paddingBlockEnd = _ref.paddingBlockEnd, paddingInline = _ref.paddingInline, paddingInlineStart = _ref.paddingInlineStart, paddingInlineEnd = _ref.paddingInlineEnd, isDisabled = _ref.isDisabled, _ref$type = _ref.type, type = _ref$type === void 0 ? "button" : _ref$type, _ref$onClick = _ref.onClick, providedOnClick = _ref$onClick === void 0 ? noop : _ref$onClick, interactionName = _ref.interactionName, componentName = _ref.componentName, analyticsContext = _ref.analyticsContext, style = _ref.style, testId = _ref.testId, xcss2 = _ref.xcss, htmlAttributes = _objectWithoutProperties(_ref, _excluded3);
  var interactionContext = (0, import_react19.useContext)(esm_default);
  var handleClick = (0, import_react19.useCallback)(function(e, analyticsEvent) {
    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);
    providedOnClick(e, analyticsEvent);
  }, [providedOnClick, interactionContext, interactionName]);
  var onClick = usePlatformLeafEventHandler({
    fn: handleClick,
    action: "clicked",
    componentName: componentName || "Pressable",
    packageName: "@atlaskit/primitives",
    packageVersion: "0.0.0-development",
    analyticsData: analyticsContext,
    actionSubject: "button"
  });
  var _spreadClass = htmlAttributes.className, safeHtmlAttributes = _objectWithoutProperties(htmlAttributes, _excluded22);
  var resolvedStyles = _parseXcss(xcss2);
  return jsx("button", _extends({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style,
    ref,
    className: resolvedStyles.static
  }, safeHtmlAttributes, {
    // eslint-disable-next-line react/button-has-type
    type,
    onClick,
    disabled: isDisabled,
    css: [
      baseStyles5,
      focusRingStyles,
      isDisabled ? disabledStyles : enabledStyles,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      backgroundColor && backgroundColorStylesMap[backgroundColor],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      padding && paddingStylesMap.padding[padding],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      paddingBlock && paddingStylesMap.paddingBlock[paddingBlock],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      paddingBlockStart && paddingStylesMap.paddingBlockStart[paddingBlockStart],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      paddingBlockEnd && paddingStylesMap.paddingBlockEnd[paddingBlockEnd],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      paddingInline && paddingStylesMap.paddingInline[paddingInline],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      paddingInlineStart && paddingStylesMap.paddingInlineStart[paddingInlineStart],
      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
      paddingInlineEnd && paddingStylesMap.paddingInlineEnd[paddingInlineEnd]
    ].concat(_toConsumableArray(resolvedStyles.emotion || [])),
    "data-testid": testId
  }), children);
});

// node_modules/@atlaskit/primitives/dist/esm/components/anchor.js
init_extends();
init_typeof();
init_objectWithoutProperties();
var import_react21 = __toESM(require_react());
var _excluded4 = ["href", "children", "backgroundColor", "newWindowLabel", "padding", "paddingBlock", "paddingBlockStart", "paddingBlockEnd", "paddingInline", "paddingInlineStart", "paddingInlineEnd", "onClick", "interactionName", "componentName", "analyticsContext", "aria-label", "aria-labelledby", "style", "target", "testId", "xcss"];
var _excluded23 = ["className"];
var focusRingStyles2 = css({
  "&:focus, &:focus-visible": {
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values
    outlineColor: borderColorMap["color.border.focused"],
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values
    outlineOffset: positiveSpaceMap["space.025"],
    outlineStyle: "solid",
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values, @atlaskit/ui-styling-standard/no-unsafe-values
    outlineWidth: borderWidthMap["border.width.focused"]
  },
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-unsafe-selectors
  "&:focus:not(:focus-visible)": {
    outline: "none"
  },
  "@media screen and (forced-colors: active), screen and (-ms-high-contrast: active)": {
    "&:focus-visible": {
      outline: "1px solid"
    }
  }
});
var baseStyles6 = css({
  boxSizing: "border-box",
  textDecoration: "underline"
});
var positionStyles = css({
  position: "relative"
});
var IS_EXTERNAL_LINK_REGEX = /^(?:(http|https):\/\/)/;
var IS_NON_HTTP_BASED = /^(((mailto|tel|sms|blob):)|(#))/;
var OPENS_NEW_WINDOW_LABEL = "(opens new window)";
var AnchorNoRef = function AnchorNoRef2(_ref, ref) {
  var href = _ref.href, children = _ref.children, backgroundColor = _ref.backgroundColor, newWindowLabel = _ref.newWindowLabel, padding = _ref.padding, paddingBlock = _ref.paddingBlock, paddingBlockStart = _ref.paddingBlockStart, paddingBlockEnd = _ref.paddingBlockEnd, paddingInline = _ref.paddingInline, paddingInlineStart = _ref.paddingInlineStart, paddingInlineEnd = _ref.paddingInlineEnd, _ref$onClick = _ref.onClick, providedOnClick = _ref$onClick === void 0 ? noop : _ref$onClick, interactionName = _ref.interactionName, componentName = _ref.componentName, analyticsContext = _ref.analyticsContext, ariaLabel = _ref["aria-label"], ariaLabelledBy = _ref["aria-labelledby"], style = _ref.style, target = _ref.target, testId = _ref.testId, xcss2 = _ref.xcss, htmlAttributes = _objectWithoutProperties(_ref, _excluded4);
  var interactionContext = (0, import_react21.useContext)(esm_default);
  var handleClick = (0, import_react21.useCallback)(function(e, analyticsEvent) {
    interactionContext && interactionContext.tracePress(interactionName, e.timeStamp);
    providedOnClick(e, analyticsEvent);
  }, [providedOnClick, interactionContext, interactionName]);
  var opensNewWindowLabelId = useId();
  var onClick = usePlatformLeafEventHandler({
    fn: handleClick,
    action: "clicked",
    componentName: componentName || "Anchor",
    packageName: "@atlaskit/primitives",
    packageVersion: "0.0.0-development",
    analyticsData: analyticsContext,
    actionSubject: "link"
  });
  var _spreadClass = htmlAttributes.className, safeHtmlAttributes = _objectWithoutProperties(htmlAttributes, _excluded23);
  var resolvedStyles = _parseXcss(xcss2);
  var RouterLink = use_router_link_default();
  var isExternal = typeof href === "string" && IS_EXTERNAL_LINK_REGEX.test(href);
  var isNonHttpBased = typeof href === "string" && IS_NON_HTTP_BASED.test(href);
  var isRouterLink = RouterLink && !isExternal && !isNonHttpBased;
  var hrefObjectUsedWithoutRouterLink = RouterLink === void 0 && _typeof(href) === "object";
  invariant(!hrefObjectUsedWithoutRouterLink, "@atlaskit/primitives: Anchor primitive cannot pass an object to 'href' unless a router link is configured in the AppProvider");
  var Component = isRouterLink ? RouterLink : "a";
  return jsx(
    Component,
    _extends({
      style,
      ref,
      className: resolvedStyles.static
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, safeHtmlAttributes, {
      // @ts-expect-error
      href: !isRouterLink && typeof href !== "string" ? void 0 : href,
      target,
      onClick,
      "aria-label": ariaLabel && target === "_blank" && !ariaLabelledBy ? (
        //`${ariaLabel} ${OPENS_NEW_WINDOW_LABEL}`
        "".concat(ariaLabel, " , ").concat(newWindowLabel ? newWindowLabel : OPENS_NEW_WINDOW_LABEL)
      ) : ariaLabel,
      "aria-labelledby": ariaLabelledBy && target === "_blank" ? "".concat(ariaLabelledBy, " ").concat(opensNewWindowLabelId) : ariaLabelledBy,
      css: [
        baseStyles6,
        positionStyles,
        focusRingStyles2,
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        backgroundColor && backgroundColorStylesMap[backgroundColor],
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        padding && paddingStylesMap.padding[padding],
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        paddingBlock && paddingStylesMap.paddingBlock[paddingBlock],
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        paddingBlockStart && paddingStylesMap.paddingBlockStart[paddingBlockStart],
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        paddingBlockEnd && paddingStylesMap.paddingBlockEnd[paddingBlockEnd],
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        paddingInline && paddingStylesMap.paddingInline[paddingInline],
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        paddingInlineStart && paddingStylesMap.paddingInlineStart[paddingInlineStart],
        // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
        paddingInlineEnd && paddingStylesMap.paddingInlineEnd[paddingInlineEnd]
      ].concat(_toConsumableArray(resolvedStyles.emotion || [])),
      "data-testid": testId,
      "data-is-router-link": testId ? isRouterLink ? "true" : "false" : void 0
    }),
    children,
    target === "_blank" && (children && !ariaLabel && !ariaLabelledBy || ariaLabelledBy) && jsx(visually_hidden_default, {
      id: opensNewWindowLabelId
    }, ", ".concat(newWindowLabel ? newWindowLabel : OPENS_NEW_WINDOW_LABEL))
  );
};
var Anchor = (0, import_react21.forwardRef)(AnchorNoRef);

// node_modules/@atlaskit/primitives/dist/esm/responsive/media-helper.js
var media = {
  above: {
    xxs: "@media all",
    xs: "@media (min-width: 30rem)",
    sm: "@media (min-width: 48rem)",
    md: "@media (min-width: 64rem)",
    lg: "@media (min-width: 90rem)",
    xl: "@media (min-width: 110.5rem)"
  },
  only: {
    xxs: "@media (min-width: 0rem) and (max-width: 29.99rem)",
    xs: "@media (min-width: 30rem) and (max-width: 47.99rem)",
    sm: "@media (min-width: 48rem) and (max-width: 63.99rem)",
    md: "@media (min-width: 64rem) and (max-width: 89.99rem)",
    lg: "@media (min-width: 90rem) and (max-width: 110.49rem)",
    xl: "@media (min-width: 110.5rem)"
  },
  below: {
    xs: "@media not all and (min-width: 30rem)",
    sm: "@media not all and (min-width: 48rem)",
    md: "@media not all and (min-width: 64rem)",
    lg: "@media not all and (min-width: 90rem)",
    xl: "@media not all and (min-width: 110.5rem)"
  }
};
var UNSAFE_media = media;

// node_modules/@atlaskit/primitives/dist/esm/responsive/build-media-query-css.js
init_defineProperty();

// node_modules/@atlaskit/primitives/dist/esm/responsive/constants.js
var UNSAFE_BREAKPOINTS_CONFIG = {
  // mobile
  xxs: {
    gridItemGutter: "var(--ds-space-200, 16px)",
    gridMargin: "var(--ds-space-200, 16px)",
    min: "0rem",
    max: "29.99rem"
  },
  // phablet
  xs: {
    gridItemGutter: "var(--ds-space-200, 16px)",
    gridMargin: "var(--ds-space-200, 16px)",
    min: "30rem",
    max: "47.99rem"
  },
  // tablet
  sm: {
    gridItemGutter: "var(--ds-space-200, 16px)",
    gridMargin: "var(--ds-space-300, 24px)",
    min: "48rem",
    max: "63.99rem"
  },
  // laptop desktop
  md: {
    gridItemGutter: "var(--ds-space-300, 24px)",
    gridMargin: "var(--ds-space-400, 32px)",
    min: "64rem",
    max: "89.99rem"
  },
  // monitor
  lg: {
    gridItemGutter: "var(--ds-space-400, 32px)",
    gridMargin: "var(--ds-space-400, 32px)",
    min: "90rem",
    max: "110.49rem"
  },
  // large high res
  xl: {
    gridItemGutter: "var(--ds-space-400, 32px)",
    gridMargin: "var(--ds-space-500, 40px)",
    min: "110.5rem",
    max: null
  }
  // NOTE: We previously had an `xxl=135rem` breakpoint, but it was removed as it was not used anywhere and felt too large
};
var UNSAFE_BREAKPOINTS_ORDERED_LIST = Object.keys(UNSAFE_BREAKPOINTS_CONFIG);
var SMALLEST_BREAKPOINT = UNSAFE_BREAKPOINTS_ORDERED_LIST[0];

// node_modules/@atlaskit/primitives/dist/esm/responsive/build-media-query-css.js
function ownKeys2(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread2(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys2(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys2(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var UNSAFE_buildAboveMediaQueryCSS = function UNSAFE_buildAboveMediaQueryCSS2(input) {
  return UNSAFE_BREAKPOINTS_ORDERED_LIST.reduce(function(acc, breakpoint) {
    return _objectSpread2(_objectSpread2({}, acc), {}, _defineProperty({}, breakpoint, css(_defineProperty({}, media.above[breakpoint], typeof input === "function" ? input(breakpoint) : input))));
  }, {});
};
var UNSAFE_buildBelowMediaQueryCSS = function UNSAFE_buildBelowMediaQueryCSS2(input) {
  return UNSAFE_BREAKPOINTS_ORDERED_LIST.reduce(function(acc, breakpoint) {
    if (breakpoint === "xxs") {
      return acc;
    }
    return _objectSpread2(_objectSpread2({}, acc), {}, _defineProperty({}, breakpoint, css(_defineProperty({}, UNSAFE_media.below[breakpoint], typeof input === "function" ? input(breakpoint) : input))));
  }, {});
};

// node_modules/@atlaskit/primitives/dist/esm/responsive/use-media-query.js
var import_react25 = __toESM(require_react());
var import_bind_event_listener = __toESM(require_dist());

// node_modules/@atlaskit/ds-lib/dist/esm/hooks/use-layout-effect.js
var import_react24 = __toESM(require_react());

// node_modules/@atlaskit/primitives/dist/esm/responsive/use-media-query.js
var _window;
var _window$matchMedia;
var _window2;
var _window2$matchMedia;
var _window3;
var _window3$matchMedia;
var _window4;
var _window4$matchMedia;
var _window5;
var _window5$matchMedia;
var _window6;
var _window6$matchMedia;
var _window7;
var _window7$matchMedia;
var _window8;
var _window8$matchMedia;
var _window9;
var _window9$matchMedia;
var _window0;
var _window0$matchMedia;
var _window1;
var _window1$matchMedia;
var queries = {
  "above.xxs": typeof window === "undefined" ? void 0 : (_window = window) === null || _window === void 0 || (_window$matchMedia = _window.matchMedia) === null || _window$matchMedia === void 0 ? void 0 : _window$matchMedia.call(_window, UNSAFE_media.above.xxs.replace("@media ", "").trim()),
  "above.xs": typeof window === "undefined" ? void 0 : (_window2 = window) === null || _window2 === void 0 || (_window2$matchMedia = _window2.matchMedia) === null || _window2$matchMedia === void 0 ? void 0 : _window2$matchMedia.call(_window2, UNSAFE_media.above.xs.replace("@media ", "").trim()),
  "above.sm": typeof window === "undefined" ? void 0 : (_window3 = window) === null || _window3 === void 0 || (_window3$matchMedia = _window3.matchMedia) === null || _window3$matchMedia === void 0 ? void 0 : _window3$matchMedia.call(_window3, UNSAFE_media.above.sm.replace("@media ", "").trim()),
  "above.md": typeof window === "undefined" ? void 0 : (_window4 = window) === null || _window4 === void 0 || (_window4$matchMedia = _window4.matchMedia) === null || _window4$matchMedia === void 0 ? void 0 : _window4$matchMedia.call(_window4, UNSAFE_media.above.md.replace("@media ", "").trim()),
  "above.lg": typeof window === "undefined" ? void 0 : (_window5 = window) === null || _window5 === void 0 || (_window5$matchMedia = _window5.matchMedia) === null || _window5$matchMedia === void 0 ? void 0 : _window5$matchMedia.call(_window5, UNSAFE_media.above.lg.replace("@media ", "").trim()),
  "above.xl": typeof window === "undefined" ? void 0 : (_window6 = window) === null || _window6 === void 0 || (_window6$matchMedia = _window6.matchMedia) === null || _window6$matchMedia === void 0 ? void 0 : _window6$matchMedia.call(_window6, UNSAFE_media.above.xl.replace("@media ", "").trim()),
  "below.xs": typeof window === "undefined" ? void 0 : (_window7 = window) === null || _window7 === void 0 || (_window7$matchMedia = _window7.matchMedia) === null || _window7$matchMedia === void 0 ? void 0 : _window7$matchMedia.call(_window7, UNSAFE_media.below.xs.replace("@media ", "").trim()),
  "below.sm": typeof window === "undefined" ? void 0 : (_window8 = window) === null || _window8 === void 0 || (_window8$matchMedia = _window8.matchMedia) === null || _window8$matchMedia === void 0 ? void 0 : _window8$matchMedia.call(_window8, UNSAFE_media.below.sm.replace("@media ", "").trim()),
  "below.md": typeof window === "undefined" ? void 0 : (_window9 = window) === null || _window9 === void 0 || (_window9$matchMedia = _window9.matchMedia) === null || _window9$matchMedia === void 0 ? void 0 : _window9$matchMedia.call(_window9, UNSAFE_media.below.md.replace("@media ", "").trim()),
  "below.lg": typeof window === "undefined" ? void 0 : (_window0 = window) === null || _window0 === void 0 || (_window0$matchMedia = _window0.matchMedia) === null || _window0$matchMedia === void 0 ? void 0 : _window0$matchMedia.call(_window0, UNSAFE_media.below.lg.replace("@media ", "").trim()),
  "below.xl": typeof window === "undefined" ? void 0 : (_window1 = window) === null || _window1 === void 0 || (_window1$matchMedia = _window1.matchMedia) === null || _window1$matchMedia === void 0 ? void 0 : _window1$matchMedia.call(_window1, UNSAFE_media.below.xl.replace("@media ", "").trim())
};

// node_modules/@atlaskit/primitives/dist/esm/responsive/show.js
var showAboveQueries = UNSAFE_buildAboveMediaQueryCSS({
  display: "revert"
});
var showBelowQueries = UNSAFE_buildBelowMediaQueryCSS({
  display: "revert"
});
var defaultHiddenStyles = css({
  display: "none"
});

// node_modules/@atlaskit/primitives/dist/esm/responsive/hide.js
var hideAboveQueries = UNSAFE_buildAboveMediaQueryCSS({
  display: "none"
});
var hideBelowQueries = UNSAFE_buildBelowMediaQueryCSS({
  display: "none"
});

export {
  inverseColorMap,
  xcss,
  flex_default,
  require_status_error_error
};
//# sourceMappingURL=chunk-EUS2L7NG.js.map

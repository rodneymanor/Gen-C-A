{
  "version": 3,
  "sources": ["../../@atlaskit/layering/dist/esm/hooks/index.js", "../../@atlaskit/layering/dist/esm/components/layering-context.js", "../../@atlaskit/platform-feature-flags-react/dist/esm/utils/component-with-condition/index.js", "../../@atlaskit/platform-feature-flags-react/dist/esm/utils/component-with-fg/index.js", "../../@atlaskit/platform-feature-flags-react/dist/esm/utils/function-with-fg/index.js", "../../@atlaskit/platform-feature-flags-react/dist/esm/utils/conditional-hooks-factory/index.js", "../../@atlaskit/layering/dist/esm/classes/layer-node.js"],
  "sourcesContent": ["import { useCallback, useContext, useEffect, useRef } from 'react';\nimport { bindAll } from 'bind-event-listener';\nimport { fg } from '@atlaskit/platform-feature-flags';\nimport { LevelContext, LevelNodeContext, RootNodeContext, TopLevelContext } from '../components/layering-context';\nvar ESCAPE = 'Escape';\n/**\n * Calls back when the escape key is pressed.\n * To be used exclusively for closing layered components.\n * Use the `isDisabled` argument to ignore closing events.\n *\n * ```js\n * useCloseOnEscapePress({\n *   onClose: () => {},\n *   isDisabled: false,\n * });\n * ```\n */\nexport function useCloseOnEscapePress(_ref) {\n  var onClose = _ref.onClose,\n    isDisabled = _ref.isDisabled;\n  var escapePressed = useRef(false);\n  var _useLayering = useLayering(),\n    isLayerDisabled = _useLayering.isLayerDisabled;\n  var onKeyDown = useCallback(function (e) {\n    var isDisabledLayer = isLayerDisabled();\n    if (isDisabled || escapePressed.current || e.key !== ESCAPE || isDisabledLayer) {\n      // We're either already handling the key down event or it's not escape or disabled.\n      // Bail early!\n      return;\n    }\n    escapePressed.current = true;\n    onClose(e);\n  }, [onClose, isDisabled, isLayerDisabled]);\n  var onKeyUp = useCallback(function () {\n    escapePressed.current = false;\n  }, []);\n  useEffect(function () {\n    return bindAll(window, [{\n      type: 'keydown',\n      listener: onKeyDown\n    }, {\n      type: 'keyup',\n      listener: onKeyUp\n    }], {\n      capture: false\n    });\n  }, [onKeyDown, onKeyUp]);\n}\n\n/**\n *\n * Layering hook to get layering info like the current level, the top level of the given component\n *\n */\nexport function useLayering() {\n  var currentLevel = useContext(LevelContext);\n\n  // Remove TopLevelContext on FG cleanup layering-tree-graph\n  var _useContext = useContext(TopLevelContext),\n    topLevelRef = _useContext.topLevelRef,\n    layerList = _useContext.layerList;\n  var layerNode;\n  var rootNode;\n  if (fg('layering-tree-graph')) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    layerNode = useContext(LevelNodeContext);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    rootNode = useContext(RootNodeContext);\n  }\n  var isLayerDisabled = useCallback(function () {\n    var _layerList$current$le, _layerList$current;\n    if (fg('layering-tree-graph')) {\n      var _layerNode, _rootNode;\n      // This is an impossible case, added for type safety\n      if (!((_layerNode = layerNode) !== null && _layerNode !== void 0 && _layerNode.current) || !((_rootNode = rootNode) !== null && _rootNode !== void 0 && _rootNode.current)) {\n        return false;\n      }\n      return layerNode.current.getLevel() < rootNode.current.getHeight();\n    }\n    return ((_layerList$current$le = layerList === null || layerList === void 0 || (_layerList$current = layerList.current) === null || _layerList$current === void 0 ? void 0 : _layerList$current.length) !== null && _layerList$current$le !== void 0 ? _layerList$current$le : 0) !== currentLevel;\n  }, [currentLevel, layerList, layerNode, rootNode]);\n  var getTopLevel = useCallback(function () {\n    var _rootNode2;\n    return (_rootNode2 = rootNode) !== null && _rootNode2 !== void 0 && _rootNode2.current ? rootNode.current.getHeight() : null;\n  }, [rootNode]);\n  return fg('layering-tree-graph') ? {\n    currentLevel: currentLevel,\n    isLayerDisabled: isLayerDisabled,\n    getTopLevel: getTopLevel\n  } : {\n    currentLevel: currentLevel,\n    topLevelRef: topLevelRef,\n    isLayerDisabled: isLayerDisabled,\n    layerList: layerList\n  };\n}", "import React, { createContext, useContext, useEffect, useMemo, useRef } from 'react';\nimport __noop from '@atlaskit/ds-lib/noop';\nimport { componentWithFG } from '@atlaskit/platform-feature-flags-react';\nimport { LayerNode } from '../classes/layer-node';\n\n/**\n *\n *  @internal\n * LevelContext which maintains the current level of nested layers\n * Default is 0\n */\nexport var LevelContext = /*#__PURE__*/createContext(0);\n\n/**\n *\n *  @internal\n * LevelNodeContext maintains the current layer node of nested layers.\n * Default ref value is null\n */\nexport var LevelNodeContext = /*#__PURE__*/createContext({\n  current: null\n});\n\n/**\n *\n *  @internal\n * RootNodeContext maintains the root node of the layer tree.\n * Default ref value is null\n */\nexport var RootNodeContext = /*#__PURE__*/createContext({\n  current: null\n});\n\n/**\n *\n *  @internal @deprecated\n * TopLevelContext which maintains the top level ref and setTopLevel method of layers\n * Default ref value is null\n *\n */\nexport var TopLevelContext = /*#__PURE__*/createContext({\n  topLevelRef: {\n    current: null\n  },\n  layerList: {\n    current: null\n  },\n  setTopLevel: __noop\n});\n\n/**\n *\n *  @internal\n * Context Provider Component which provider the current level of nested layers\n * It handles level management when it mounts and unmounts\n *\n */\nvar LevelProvider = function LevelProvider(_ref) {\n  var children = _ref.children,\n    currentLevel = _ref.currentLevel,\n    levelNode = _ref.node;\n  useEffect(function () {\n    var levelNodeSafe = levelNode.current;\n    var parentNode = levelNodeSafe.parent;\n    parentNode === null || parentNode === void 0 || parentNode.addChild(levelNodeSafe);\n    return function () {\n      parentNode === null || parentNode === void 0 || parentNode.removeChild(levelNodeSafe);\n    };\n  }, [levelNode]);\n  return /*#__PURE__*/React.createElement(LevelContext.Provider, {\n    value: currentLevel\n  }, /*#__PURE__*/React.createElement(LevelNodeContext.Provider, {\n    value: levelNode\n  }, children));\n};\n\n/**\n *\n *  @internal @deprecated\n * Context Provider Component which provider the current level of nested layers\n * It handles level management when it mounts and unmounts\n *\n */\nvar LevelProviderOld = function LevelProviderOld(_ref2) {\n  var children = _ref2.children,\n    currentLevel = _ref2.currentLevel;\n  var _useContext = useContext(TopLevelContext),\n    layerList = _useContext.layerList;\n  // This is not unstable, it will run once for ref creation.\n  // eslint-disable-next-line  @repo/internal/react/disallow-unstable-values\n  var id = useRef(Math.random().toString(36));\n  useEffect(function () {\n    var safeLayerList = layerList === null || layerList === void 0 ? void 0 : layerList.current;\n    var safeId = id.current;\n    if (!safeLayerList) {\n      return;\n    }\n    safeLayerList.push(safeId);\n    return function () {\n      var index = safeLayerList.indexOf(safeId);\n      if (index > -1) {\n        safeLayerList.splice(index, 1);\n      }\n    };\n  }, [layerList, id]);\n  return /*#__PURE__*/React.createElement(LevelContext.Provider, {\n    value: currentLevel\n  }, children);\n};\n\n/**\n *\n *  @internal @deprecated\n * Context Provider Component which provides the top level of all nested layers\n * It provides initial top level ref value as 0 and set top level method\n *\n */\nvar LayeringProvider = function LayeringProvider(_ref3) {\n  var children = _ref3.children;\n  var topLevelRef = useRef(0);\n  var layerList = useRef([]);\n  var value = useMemo(function () {\n    return {\n      topLevelRef: topLevelRef,\n      setTopLevel: function setTopLevel(level) {\n        topLevelRef.current = level;\n      },\n      layerList: layerList\n    };\n  }, [topLevelRef, layerList]);\n  return /*#__PURE__*/React.createElement(TopLevelContext.Provider, {\n    value: value\n  }, children);\n};\n\n/**\n *\n * @deprecated\n * @important the component is toggled by isDisabled props, the default isDisabled is true\n *\n * Layering component is a wrapper to let children to consume layer contexts and hooks.\n *\n */\nvar LayeringOld = function LayeringOld(_ref4) {\n  var children = _ref4.children,\n    _ref4$isDisabled = _ref4.isDisabled,\n    isDisabled = _ref4$isDisabled === void 0 ? true : _ref4$isDisabled;\n  var currentLevel = useContext(LevelContext);\n  if (isDisabled) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  }\n  var isNested = currentLevel > 0;\n  var content = /*#__PURE__*/React.createElement(LevelProviderOld, {\n    currentLevel: currentLevel + 1\n  }, children);\n  return isNested ? content : /*#__PURE__*/React.createElement(LayeringProvider, null, content);\n};\n\n/**\n *\n * @important the component is toggled by isDisabled props, the default isDisabled is true\n *\n * Layering component is a wrapper to let children to consume layer contexts and hooks.\n *\n */\nvar LayeringNew = function LayeringNew(_ref5) {\n  var children = _ref5.children,\n    _ref5$isDisabled = _ref5.isDisabled,\n    isDisabled = _ref5$isDisabled === void 0 ? true : _ref5$isDisabled;\n  var currentLevel = useContext(LevelContext);\n  var parentNode = useContext(LevelNodeContext);\n\n  // eslint-disable-next-line  @repo/internal/react/disallow-unstable-values\n  var newNode = useRef(new LayerNode(Math.random().toString(36), parentNode.current));\n  if (isDisabled) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n  }\n  var isNested = currentLevel > 0;\n  var content = /*#__PURE__*/React.createElement(LevelProvider, {\n    currentLevel: currentLevel + 1,\n    node: newNode\n  }, children);\n  return isNested ? content : /*#__PURE__*/React.createElement(RootNodeContext.Provider, {\n    value: newNode\n  }, content);\n};\n\n/**\n *\n * @important the component is toggled by isDisabled props, the default isDisabled is true\n *\n * Layering component is a wrapper to let children to consume layer contexts and hooks.\n * For more information on the implementation: https://hello.atlassian.net/wiki/x/FQCDQwE\n *\n */\nexport var Layering = componentWithFG('layering-tree-graph', LayeringNew, LayeringOld);", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { forwardRef } from 'react';\n\n/**\n * Gets all available ref types from two prop sets and returns\n * them in a ref prop\n *\n * @example\n * ```\n * type P1 = { ref: Ref(HTMLDivElement), ... };\n * type P2 = { ref: Ref(HTMLSpanElement), ... };\n *\n * GetRefAttributes(P1, P2) // {ref: Ref(HTMLDivElement | HTMLSpanElement)}\n * ```\n */\n\n/**\n * Returns one of components depending on a boolean condition.\n * The result component will be a union of the two props and\n * an or on both ref types.\n *\n * @example\n * ```\n * const Component = componentWithCondition(\n *      isBooleanConditionMet,\n *      ComponentWithConditionMet,\n *      ComponentWithConditionNotMet,\n * );\n *\n * @param condition Function returning boolean value\n * @param componentTrue Component that will be returned if conditionGetter is \"true\"\n * @param componentFalse Component that will be returned if conditionGetter is \"false\"\n * @returns Component Depending on a Condition result\n */\nexport function componentWithCondition(condition, ComponentTrue, ComponentFalse) {\n  var ComponentWithCondition = /*#__PURE__*/forwardRef(function (props, ref) {\n    return condition() ? /*#__PURE__*/React.createElement(ComponentTrue, _extends({}, props, {\n      ref: ref\n    })) : /*#__PURE__*/React.createElement(ComponentFalse, _extends({}, props, {\n      ref: ref\n    }));\n  });\n  if (ComponentTrue.name !== '') {\n    ComponentWithCondition.displayName = \"ComponentWithCondition[\".concat(condition.name, \"]\");\n  }\n\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  return ComponentWithCondition;\n}", "import { fg } from '@atlaskit/platform-feature-flags';\nimport { componentWithCondition } from '../component-with-condition';\nexport var componentWithFG = function componentWithFG(featureFlagName, ComponentTrue, ComponentFalse\n// eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-registration, @atlaskit/platform/static-feature-flags\n) {\n  return componentWithCondition(function () {\n    return fg(featureFlagName);\n  }, ComponentTrue, ComponentFalse);\n};", "import { fg } from '@atlaskit/platform-feature-flags';\nimport { functionWithCondition } from '../function-with-condition';\nexport var functionWithFG = function functionWithFG(featureFlagName, functionTrue, functionFalse\n// eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-registration, @atlaskit/platform/static-feature-flags\n) {\n  return functionWithCondition(function () {\n    return fg(featureFlagName);\n  }, functionTrue, functionFalse);\n};", "import { fg } from '@atlaskit/platform-feature-flags';\nimport { functionWithCondition } from '../function-with-condition';\n\n// Shorthand alias for the global cache map key because it's (intentionally) a long name\nvar CACHE_MAP_KEY = '__conditionalHooksFactory_conditionCacheMap_dont_modify_this_manually_unless_you_want_react_to_blow_up';\n// Initialize the global cache map once\nglobalThis[CACHE_MAP_KEY] = globalThis[CACHE_MAP_KEY] || new WeakMap();\n\n/**\n * Resets the cache used by the conditional hooks factory.\n * This is useful for testing purposes or when you want to clear the cache between runs.\n * You should **never** use this in production code as it will break the rules of hooks.\n * Seriously, don't do it.\n *\n * Calling this function will cause all instances of conditional hooks to be re-evaluated\n * and may lead to unexpected behaviour if the conditions change.\n */\nexport function DO_NOT_USE_THIS_IN_PRODUCTION_EVER_resetConditionalHooksFactoryCache() {\n  globalThis[CACHE_MAP_KEY] = new WeakMap();\n}\n\n/**\n * A factory function to create a conditional hook. The condition must return a boolean value\n * that does not change after initialisation. This function will cache the result of the condition\n * and use it to determine which hook to call. If the condition changes between renders,\n * unexpected behaviour may occur.\n *\n * The hook generated by this factory will also force the condition to be effectively constant\n * by caching the result of the condition on the first call. In non-production environments,\n * it will throw an error if the condition changes between renders to help catch potential issues.\n *\n * If for some reason you need to reset the cache (i.e. for tests where you change the condition between runs),\n * you can call `DO_NOT_USE_THIS_IN_PRODUCTION_EVER_resetConditionalHooksFactoryCache()`.\n *\n * **This hook should only be used for Feature Gates & Experiments where the value doesn't change.**\n * ```ts\n * // Acceptable use\n * const useMyHook = conditionalHooksFactory(\n *   () => isFeatureEnabled('my-feature'),\n *   useMyNewHook,\n *   useMyOldHook,\n * );\n *\n * // Not acceptable use\n * const useMyHook = conditionalHooksFactory(\n *    () => someVarThatCouldChange === 'my-value',\n *    useMyNewHook,\n *    useMyOldHook,\n * );\n * ```\n *\n * @param condition The condition function that will be used to determine which hook to call.\n * @param newHook The new hook to call if the condition is true.\n * @param oldHook The old hook to call if the condition is false.\n * @returns A migrator hook that will call either the new hook or the old hook based on the condition.\n */\nexport function conditionalHooksFactory(condition, newHook, oldHook) {\n  // Since we are conditionally rendering hooks, we need to ensure the condition result won't change\n  // between renders. We can do this by caching the result of the condition.\n  // Clean up with platform_editor_global_conditional_factory_cache\n  var localConditionCache = null;\n\n  // Because the gate to use or not use the global cache needs to stay constant,\n  // we need a separate cache to force that to also be constant.\n  // Clean up with platform_editor_global_conditional_factory_cache\n  var globalCacheGateCache = null;\n  var _globalCacheHookFn = function globalCacheHookFn() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    // call each time so we can track exposures\n    var conditionResult = condition();\n    var cache = globalThis[CACHE_MAP_KEY];\n    if (!cache.has(_globalCacheHookFn)) {\n      cache.set(_globalCacheHookFn, conditionResult);\n    }\n\n    // Extra level of safety for dev environment to notify devs of changed condition\n    if (process.env.NODE_ENV !== 'production') {\n      if (cache.get(_globalCacheHookFn) !== conditionResult) {\n        throw new Error('Conditional hook called with different condition, this breaks the rules of hooks!');\n      }\n    }\n    if (cache.get(_globalCacheHookFn)) {\n      return newHook.apply(void 0, args);\n    } else {\n      return oldHook.apply(void 0, args);\n    }\n  };\n\n  // Clean up this branch with platform_editor_global_conditional_factory_cache\n  var localCacheHookFn = function localCacheHookFn() {\n    // call each time so we can track exposures\n    var conditionResult = condition();\n    if (localConditionCache === null) {\n      localConditionCache = conditionResult;\n    }\n\n    // Extra level of safety for dev environment to notify devs of changed condition\n    if (process.env.NODE_ENV !== 'production') {\n      if (localConditionCache !== conditionResult) {\n        throw new Error('Conditional hook called with different condition, this breaks the rules of hooks!');\n      }\n    }\n    if (localConditionCache) {\n      return newHook.apply(void 0, arguments);\n    } else {\n      return oldHook.apply(void 0, arguments);\n    }\n  };\n  return functionWithCondition(function () {\n    // Check if we are using the global cache or local cache\n    // We cache this again to ensure that the gate is constant between renders\n    if (globalCacheGateCache === null) {\n      globalCacheGateCache = fg('platform_editor_global_conditional_factory_cache');\n    }\n    return globalCacheGateCache;\n  }, _globalCacheHookFn, localCacheHookFn);\n}", "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nexport var LayerNode = /*#__PURE__*/function () {\n  function LayerNode(id, parent) {\n    _classCallCheck(this, LayerNode);\n    this.id = id;\n    this.childNodes = [];\n    this.parent = parent;\n  }\n  return _createClass(LayerNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      this.childNodes.push(node);\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(node) {\n      this.childNodes = this.childNodes.filter(function (child) {\n        return child.id !== node.id;\n      });\n    }\n  }, {\n    key: \"getLevel\",\n    value: function getLevel() {\n      if (!this.parent) {\n        return 1;\n      }\n      return this.parent.getLevel() + 1;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      if (this.childNodes.length === 0) {\n        return 1;\n      }\n      return Math.max.apply(Math, _toConsumableArray(this.childNodes.map(function (child) {\n        return child.getHeight();\n      }))) + 1;\n    }\n  }]);\n}();"],
  "mappings": "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",
  "names": ["import_react", "import_react", "React", "componentWithFG", "LayerNode", "LevelProvider", "React", "LevelProviderOld", "LayeringProvider", "LayeringOld", "LayeringNew"]
}

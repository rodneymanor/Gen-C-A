{
  "version": 3,
  "sources": ["../../@atlaskit/spinner/dist/esm/spinner.js", "../../@atlaskit/spinner/dist/esm/constants.js"],
  "sourcesContent": ["/* spinner.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./spinner.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { useContext, useEffect, useLayoutEffect as useRealLayoutEffect } from 'react';\nimport InteractionContext from '@atlaskit/interaction-context';\nimport { N0, N500 } from '@atlaskit/theme/colors';\nimport { presetSizes } from './constants';\n/**\n * Returns the appropriate circle stroke color.\n */\nfunction getStrokeColor(appearance) {\n  return appearance === 'inherit' ? \"var(--ds-icon-subtle, \".concat(N500, \")\") : \"var(--ds-icon-inverse, \".concat(N0, \")\");\n}\nvar rotate = null;\n\n/**\n * There are three parts to the load in animation:\n * 1. Accelerated spin\n * 2. Stretch the spinner line\n */\nvar loadIn = null;\nvar styles = {\n  rotateStyles: \"_j7hqsf8s _5sag12kz _tip812c5 _1pgl2qsq _8hrz1h6o\",\n  loadInStyles: \"_j7hq1ky6 _5sag9cwz _1pgl1ytf _1o51q7pw\",\n  wrapperStyles: \"_1e0c116y _s7n4nkob\",\n  circleStyles: \"_lswuglyw _7ljx1dhp _1snbbs82 _jcxd7g3v _1tjm1onz\"\n};\n\n/**\n * `useLayoutEffect` is being used in SSR safe form. On the server, this work doesnâ€™t need to run.\n * `useEffect` is used in-place, because `useEffect` is not run on the server and it matches types\n * which makes things simpler than doing an `isServer` check or a `null` check.\n *\n * @see https://hello.atlassian.net/wiki/spaces/DST/pages/2081696628/DSTDACI-010+-+Interaction+Tracing+hooks+in+DS+components\n */\nvar useLayoutEffect = typeof window === 'undefined' ? useEffect : useRealLayoutEffect;\n\n/**\n * __Spinner__\n *\n * A spinner is an animated spinning icon that lets users know content is being loaded.\n *\n * - [Examples](https://atlassian.design/components/spinner/examples)\n * - [Code](https://atlassian.design/components/spinner/code)\n * - [Usage](https://atlassian.design/components/spinner/usage)\n */\nvar Spinner = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function Spinner(_ref, ref) {\n  var _ref$appearance = _ref.appearance,\n    appearance = _ref$appearance === void 0 ? 'inherit' : _ref$appearance,\n    _ref$delay = _ref.delay,\n    delay = _ref$delay === void 0 ? 0 : _ref$delay,\n    interactionName = _ref.interactionName,\n    label = _ref.label,\n    _ref$size = _ref.size,\n    providedSize = _ref$size === void 0 ? 'medium' : _ref$size,\n    testId = _ref.testId;\n  var size = typeof providedSize === 'number' ? providedSize : presetSizes[providedSize];\n  var animationDelay = \"\".concat(delay, \"ms\");\n  var stroke = getStrokeColor(appearance);\n  var context = useContext(InteractionContext);\n  useLayoutEffect(function () {\n    if (context != null) {\n      return context.hold(interactionName);\n    }\n  }, [context, interactionName]);\n\n  /**\n   * The Spinner animation uses a combination of two\n   * css animations on two separate elements.\n   */\n  return /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": testId ? \"\".concat(testId, \"-wrapper\") : 'spinner-wrapper'\n    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766\n    ,\n    style: {\n      animationDelay: animationDelay,\n      width: size,\n      height: size\n    },\n    className: ax([styles.wrapperStyles, styles.rotateStyles])\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    height: size,\n    width: size,\n    viewBox: \"0 0 16 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-testid\": testId,\n    ref: ref,\n    \"aria-label\": label || undefined,\n    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766\n    style: {\n      animationDelay: animationDelay\n    },\n    role: label ? 'img' : 'none',\n    className: ax([styles.loadInStyles])\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8\",\n    cy: \"8\",\n    r: \"7\",\n    style: {\n      stroke: stroke\n    },\n    className: ax([styles.circleStyles])\n  })));\n}));\nexport default Spinner;", "export var presetSizes = {\n  xsmall: 12,\n  small: 16,\n  medium: 24,\n  large: 48,\n  xlarge: 96\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAEA;AACA,mBAAqF;AAFrF,OAAO;;;ACDA,IAAI,cAAc;AAAA,EACvB,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AACV;;;ADIA,SAAS,eAAe,YAAY;AAClC,SAAO,eAAe,YAAY,yBAAyB,OAAO,MAAM,GAAG,IAAI,0BAA0B,OAAO,IAAI,GAAG;AACzH;AASA,IAAI,SAAS;AAAA,EACX,cAAc;AAAA,EACd,cAAc;AAAA,EACd,eAAe;AAAA,EACf,cAAc;AAChB;AASA,IAAI,kBAAkB,OAAO,WAAW,cAAc,yBAAY,aAAAA;AAWlE,IAAI,UAAuB,aAAAC,QAAM,KAAmB,aAAAA,QAAM,WAAW,SAASC,SAAQ,MAAM,KAAK;AAC/F,MAAI,kBAAkB,KAAK,YACzB,aAAa,oBAAoB,SAAS,YAAY,iBACtD,aAAa,KAAK,OAClB,QAAQ,eAAe,SAAS,IAAI,YACpC,kBAAkB,KAAK,iBACvB,QAAQ,KAAK,OACb,YAAY,KAAK,MACjB,eAAe,cAAc,SAAS,WAAW,WACjD,SAAS,KAAK;AAChB,MAAI,OAAO,OAAO,iBAAiB,WAAW,eAAe,YAAY,YAAY;AACrF,MAAI,iBAAiB,GAAG,OAAO,OAAO,IAAI;AAC1C,MAAI,SAAS,eAAe,UAAU;AACtC,MAAI,cAAU,yBAAW,WAAkB;AAC3C,kBAAgB,WAAY;AAC1B,QAAI,WAAW,MAAM;AACnB,aAAO,QAAQ,KAAK,eAAe;AAAA,IACrC;AAAA,EACF,GAAG,CAAC,SAAS,eAAe,CAAC;AAM7B,SAAoB,aAAAD,QAAM,cAAc,QAAQ;AAAA,IAC9C,eAAe,SAAS,GAAG,OAAO,QAAQ,UAAU,IAAI;AAAA,IAGxD,OAAO;AAAA,MACL;AAAA,MACA,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,IACA,WAAW,GAAG,CAAC,OAAO,eAAe,OAAO,YAAY,CAAC;AAAA,EAC3D,GAAgB,aAAAA,QAAM,cAAc,OAAO;AAAA,IACzC,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,SAAS;AAAA,IACT,OAAO;AAAA,IACP,eAAe;AAAA,IACf;AAAA,IACA,cAAc,SAAS;AAAA;AAAA,IAEvB,OAAO;AAAA,MACL;AAAA,IACF;AAAA,IACA,MAAM,QAAQ,QAAQ;AAAA,IACtB,WAAW,GAAG,CAAC,OAAO,YAAY,CAAC;AAAA,EACrC,GAAgB,aAAAA,QAAM,cAAc,UAAU;AAAA,IAC5C,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,GAAG;AAAA,IACH,OAAO;AAAA,MACL;AAAA,IACF;AAAA,IACA,WAAW,GAAG,CAAC,OAAO,YAAY,CAAC;AAAA,EACrC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF,IAAO,kBAAQ;",
  "names": ["useRealLayoutEffect", "React", "Spinner"]
}

{
  "version": 3,
  "sources": ["../../@atlaskit/icon/dist/esm/components/icon.js", "../../@atlaskit/icon/dist/esm/entry-points/base.js"],
  "sourcesContent": ["/* icon.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport \"./icon.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { memo } from 'react';\n\n/**\n * We are hiding these props from consumers as they're used to\n * hack around icon sizing specifically for icon-file-type.\n */\n\nvar iconStyles = null;\nvar sizeStyles = {\n  small: \"_1bsb7vkz _4t3i7vkz _5fdi7vkz _zbji7vkz\",\n  medium: \"_1bsb1tcg _4t3i1tcg _5fdi1tcg _zbji1tcg\",\n  large: \"_1bsbzwfg _4t3izwfg _5fdizwfg _zbjizwfg\",\n  xlarge: \"_1bsbckbl _4t3ickbl _5fdickbl _zbjickbl\"\n};\n\n/**\n * For windows high contrast mode\n */\nvar baseHcmStyles = null;\nvar primaryEqualsSecondaryHcmStyles = null;\nvar secondaryTransparentHcmStyles = null;\n\n/**\n * __Icon__\n *\n * @deprecated Custom Icon is deprecated and will be removed from `atlaskit/icon` in an upcoming major release. Please use either an existing icon from @atlaskit/icon or @atlaskit/icon-lab, or contributing to @atlaskit/icon-lab directly. For third party logos, use an SVG element along with a label.\n *\n * An icon is used as a visual representation of common actions and commands to provide context.\n *\n * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)\n */\nexport var Icon = /*#__PURE__*/memo(function Icon(props) {\n  var _ref = props,\n    Glyph = _ref.glyph,\n    dangerouslySetGlyph = _ref.dangerouslySetGlyph,\n    _ref$primaryColor = _ref.primaryColor,\n    primaryColor = _ref$primaryColor === void 0 ? 'currentColor' : _ref$primaryColor,\n    secondaryColor = _ref.secondaryColor,\n    size = _ref.size,\n    testId = _ref.testId,\n    label = _ref.label,\n    width = _ref.width,\n    height = _ref.height,\n    UNSAFE_margin = _ref.UNSAFE_margin;\n  var glyphProps = dangerouslySetGlyph ? {\n    dangerouslySetInnerHTML: {\n      __html: dangerouslySetGlyph\n    }\n  } : {\n    children: Glyph ? /*#__PURE__*/React.createElement(Glyph, {\n      role: \"presentation\"\n    }) : null\n  };\n  var customDimensions = width && height ? {\n    width: width + 'px',\n    height: height + 'px'\n  } : null;\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    \"data-testid\": testId,\n    \"data-vc\": \"icon-\".concat(testId),\n    role: label ? 'img' : undefined,\n    \"aria-label\": label ? label : undefined,\n    \"aria-hidden\": label ? undefined : true,\n    style: _objectSpread(_objectSpread({}, customDimensions), {}, {\n      '--icon-primary-color': primaryColor,\n      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766\n      '--icon-secondary-color': secondaryColor,\n      // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766\n      margin: UNSAFE_margin\n    })\n  }, glyphProps, {\n    className: ax([\"_1e0c1o8l _1o9zidpf _vyfuvuon _vwz4kb7n _1szv15vq _1tly15vq _rzyw1osq _17jb1osq _1ksvoz0e _3se1x1jp _re2rglyw _1veoyfq0 _1kg81r31\", \"_jcxd1r8n _gq0g1onz _1trkwc43\", primaryColor === secondaryColor && \"_18hbwc43\", secondaryColor === 'transparent' && \"_4fyi1j28\", size && sizeStyles[size]])\n  }));\n});\nexport default Icon;", "export { default, Icon } from '../components/icon';"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAGA,OAAO;AAGP,SAAS,QAAQ,GAAG,GAAG;AAAE,MAAI,IAAI,OAAO,KAAK,CAAC;AAAG,MAAI,OAAO,uBAAuB;AAAE,QAAI,IAAI,OAAO,sBAAsB,CAAC;AAAG,UAAM,IAAI,EAAE,OAAO,SAAUA,IAAG;AAAE,aAAO,OAAO,yBAAyB,GAAGA,EAAC,EAAE;AAAA,IAAY,CAAC,IAAI,EAAE,KAAK,MAAM,GAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAG;AAC9P,SAAS,cAAc,GAAG;AAAE,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AAAE,QAAI,IAAI,QAAQ,UAAU,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC;AAAG,QAAI,IAAI,QAAQ,OAAO,CAAC,GAAG,IAAE,EAAE,QAAQ,SAAUA,IAAG;AAAE,sBAAgB,GAAGA,IAAG,EAAEA,EAAC,CAAC;AAAA,IAAG,CAAC,IAAI,OAAO,4BAA4B,OAAO,iBAAiB,GAAG,OAAO,0BAA0B,CAAC,CAAC,IAAI,QAAQ,OAAO,CAAC,CAAC,EAAE,QAAQ,SAAUA,IAAG;AAAE,aAAO,eAAe,GAAGA,IAAG,OAAO,yBAAyB,GAAGA,EAAC,CAAC;AAAA,IAAG,CAAC;AAAA,EAAG;AAAE,SAAO;AAAG;AAPtb,IAIA,OAIA,cAQI,YAwBO,MA2CJ;AAnFP;AAAA;AACA;AACA;AAEA,YAAuB;AACvB;AAGA,mBAAqB;AAQrB,IAAI,aAAa;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAmBO,IAAI,WAAoB,mBAAK,SAASC,MAAK,OAAO;AACvD,UAAI,OAAO,OACT,QAAQ,KAAK,OACb,sBAAsB,KAAK,qBAC3B,oBAAoB,KAAK,cACzB,eAAe,sBAAsB,SAAS,iBAAiB,mBAC/D,iBAAiB,KAAK,gBACtB,OAAO,KAAK,MACZ,SAAS,KAAK,QACd,QAAQ,KAAK,OACb,QAAQ,KAAK,OACb,SAAS,KAAK,QACd,gBAAgB,KAAK;AACvB,UAAI,aAAa,sBAAsB;AAAA,QACrC,yBAAyB;AAAA,UACvB,QAAQ;AAAA,QACV;AAAA,MACF,IAAI;AAAA,QACF,UAAU,QAA2B,oBAAc,OAAO;AAAA,UACxD,MAAM;AAAA,QACR,CAAC,IAAI;AAAA,MACP;AACA,UAAI,mBAAmB,SAAS,SAAS;AAAA,QACvC,OAAO,QAAQ;AAAA,QACf,QAAQ,SAAS;AAAA,MACnB,IAAI;AACJ,aAA0B,oBAAc,QAAQ,SAAS;AAAA,QACvD,eAAe;AAAA,QACf,WAAW,QAAQ,OAAO,MAAM;AAAA,QAChC,MAAM,QAAQ,QAAQ;AAAA,QACtB,cAAc,QAAQ,QAAQ;AAAA,QAC9B,eAAe,QAAQ,SAAY;AAAA,QACnC,OAAO,cAAc,cAAc,CAAC,GAAG,gBAAgB,GAAG,CAAC,GAAG;AAAA,UAC5D,wBAAwB;AAAA;AAAA,UAExB,0BAA0B;AAAA;AAAA,UAE1B,QAAQ;AAAA,QACV,CAAC;AAAA,MACH,GAAG,YAAY;AAAA,QACb,WAAW,GAAG,CAAC,qIAAqI,iCAAiC,iBAAiB,kBAAkB,aAAa,mBAAmB,iBAAiB,aAAa,QAAQ,WAAW,IAAI,CAAC,CAAC;AAAA,MACjT,CAAC,CAAC;AAAA,IACJ,CAAC;AACD,IAAO,eAAQ;AAAA;AAAA;;;ACnFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": ["r", "Icon"]
}

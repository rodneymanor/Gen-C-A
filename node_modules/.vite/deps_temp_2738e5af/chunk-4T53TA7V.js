import {
  fg,
  init_esm
} from "./chunk-GTO4PDQE.js";
import {
  ax,
  init_runtime
} from "./chunk-ZNWH4LFA.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __esm,
  __export,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/icon/dist/esm/components/icon-new.js
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/icon/dist/esm/components/icon-new.compiled.css";
var React, import_react, coreSizeMedium, coreSizeSmall, utilSizes, baseSizeMap, paddingMap, Icon, icon_new_default;
var init_icon_new = __esm({
  "node_modules/@atlaskit/icon/dist/esm/components/icon-new.js"() {
    React = __toESM(require_react());
    init_runtime();
    import_react = __toESM(require_react());
    init_esm();
    coreSizeMedium = {
      none: "_1bsbpxbi _4t3ipxbi",
      compact: "_1bsb1ejb _4t3i1ejb",
      spacious: "_1bsb1ejb _4t3i1ejb"
    };
    coreSizeSmall = {
      none: "_1bsbutpp _4t3iutpp",
      compact: "_1bsbpxbi _4t3ipxbi",
      spacious: "_1bsb1ejb _4t3i1ejb"
    };
    utilSizes = {
      none: "_1bsbutpp _4t3iutpp",
      compact: "_1bsbpxbi _4t3ipxbi",
      spacious: "_1bsb1ejb _4t3i1ejb"
    };
    baseSizeMap = {
      core: 16,
      utility: 12
    };
    paddingMap = {
      core: {
        medium: {
          none: 0,
          compact: 4,
          spacious: 4
        },
        small: {
          none: 0,
          compact: 2.66,
          spacious: 8
        }
      },
      utility: {
        medium: {
          none: 0,
          compact: 2,
          spacious: 6
        },
        small: {
          none: 0,
          compact: 2,
          spacious: 6
        }
      }
    };
    Icon = (0, import_react.memo)(function Icon2(props) {
      var _props$type;
      var _ref = props, _ref$color = _ref.color, color = _ref$color === void 0 ? "currentColor" : _ref$color, testId = _ref.testId, label = _ref.label, LEGACY_primaryColor = _ref.LEGACY_primaryColor, LEGACY_secondaryColor = _ref.LEGACY_secondaryColor, LEGACY_size = _ref.LEGACY_size, FallbackIcon = _ref.LEGACY_fallbackIcon, dangerouslySetGlyph = _ref.dangerouslySetGlyph, shouldScale = _ref.shouldScale, LEGACY_margin = _ref.LEGACY_margin, _ref$spacing = _ref.spacing, spacing = _ref$spacing === void 0 ? "none" : _ref$spacing, name = _ref.name;
      var dangerouslySetInnerHTML = dangerouslySetGlyph ? {
        __html: dangerouslySetGlyph
      } : void 0;
      if (FallbackIcon && !fg("platform-visual-refresh-icons")) {
        return React.createElement(FallbackIcon, {
          primaryColor: LEGACY_primaryColor !== null && LEGACY_primaryColor !== void 0 ? LEGACY_primaryColor : color,
          secondaryColor: LEGACY_secondaryColor,
          size: LEGACY_size,
          label,
          testId,
          UNSAFE_margin: LEGACY_margin
        });
      }
      var type = (_props$type = props.type) !== null && _props$type !== void 0 ? _props$type : "core";
      var size = "medium";
      if ("size" in props && props.size !== void 0) {
        if (typeof props.size === "string") {
          size = props.size === "small" || props.size === "medium" ? props.size : size;
        } else if (name) {
          var newSize = props.size(name);
          size = newSize === "small" || newSize === "medium" ? newSize : size;
        }
      }
      var baseSize = baseSizeMap[type];
      var viewBoxPadding = paddingMap[type][size][spacing];
      var viewBoxSize = baseSize + 2 * viewBoxPadding;
      return React.createElement("span", {
        "data-testid": testId,
        role: label ? "img" : void 0,
        "aria-label": label ? label : void 0,
        "aria-hidden": label ? void 0 : true,
        style: {
          color
        },
        className: ax(["_1e0c1o8l _vchhusvi _1o9zidpf _vwz4kb7n _y4ti1igz _bozg1mb9", "_12va1onz _jcxd1r8n", shouldScale && "_1bsb1kw7 _4t3i1kw7", (type === "utility" || size === "small") && "_vwz4utpp"])
      }, React.createElement("svg", {
        fill: "none",
        viewBox: "".concat(0 - viewBoxPadding, " ").concat(0 - viewBoxPadding, " ").concat(viewBoxSize, " ").concat(viewBoxSize),
        role: "presentation",
        dangerouslySetInnerHTML,
        className: ax(["_1reo15vq _18m915vq _syaz1r31 _lcxvglyw _s7n4yfq0 _vc881r31", shouldScale ? "_1bsb1kw7 _4t3i1kw7" : type === "utility" ? utilSizes[spacing] : size === "small" ? coreSizeSmall[spacing] : coreSizeMedium[spacing]])
      }));
    });
    icon_new_default = Icon;
  }
});

// node_modules/@atlaskit/icon/dist/esm/entry-points/base-new.js
var base_new_exports = {};
__export(base_new_exports, {
  Icon: () => Icon,
  default: () => icon_new_default
});
var init_base_new = __esm({
  "node_modules/@atlaskit/icon/dist/esm/entry-points/base-new.js"() {
    init_icon_new();
  }
});

export {
  base_new_exports,
  init_base_new
};
//# sourceMappingURL=chunk-4T53TA7V.js.map

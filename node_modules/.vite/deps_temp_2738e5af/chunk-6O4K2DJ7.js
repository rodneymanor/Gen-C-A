import {
  inverseColorMap
} from "./chunk-QW63HTYX.js";
import {
  base_new_exports,
  init_base_new
} from "./chunk-4T53TA7V.js";
import {
  useSurface
} from "./chunk-AHQOMMXQ.js";
import {
  _slicedToArray,
  init_slicedToArray
} from "./chunk-XN5DX7DZ.js";
import {
  ax,
  init_runtime
} from "./chunk-ZNWH4LFA.js";
import {
  require_react
} from "./chunk-LXGCQ6UQ.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-ROME4SDB.js";

// node_modules/@atlaskit/icon/core/status-success.js
var require_status_success = __commonJS({
  "node_modules/@atlaskit/icon/core/status-success.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var StatusSuccessIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      name: "StatusSuccessIcon",
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0M6.75 9.828 4.826 7.52l-1.152.96 2.5 3a.75.75 0 0 0 1.152 0l5-6-1.152-.96z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    StatusSuccessIcon.displayName = "StatusSuccessIcon";
    var _default = exports.default = StatusSuccessIcon;
  }
});

// node_modules/@atlaskit/heading/dist/esm/heading.partial.js
init_slicedToArray();
var React2 = __toESM(require_react());
init_runtime();
var import_react2 = __toESM(require_react());
import "/Users/rmanor/Documents/Development-Local/Gen C A/node_modules/@atlaskit/heading/dist/esm/heading.partial.compiled.css";

// node_modules/@atlaskit/heading/dist/esm/heading-context.js
var import_react = __toESM(require_react());
var HeadingLevelContext = (0, import_react.createContext)(0);
var useHeadingLevel = function useHeadingLevel2() {
  return (0, import_react.useContext)(HeadingLevelContext);
};
var useHeading = function useHeading2(fallback) {
  var hLevel = useHeadingLevel();
  return [hLevel, hLevel && (hLevel > 6 ? "div" : "h".concat(hLevel)) || fallback];
};

// node_modules/@atlaskit/heading/dist/esm/heading.partial.js
var sizeTagMap = {
  xxlarge: "h1",
  xlarge: "h1",
  large: "h2",
  medium: "h3",
  small: "h4",
  xsmall: "h5",
  xxsmall: "h6"
};
var styles = {
  reset: "_1mouidpf _1dyz4jg8 _1p1dglyw"
};
var headingColorStylesMap = {
  "color.text": "_syaz1fxt",
  "color.text.inverse": "_syaz15cr",
  "color.text.warning.inverse": "_syazal3n"
};
var headingSizeStylesMap = {
  xxlarge: "_11c84xcc",
  xlarge: "_11c81c04",
  large: "_11c8nf1z",
  medium: "_11c8lodh",
  small: "_11c8nbxd",
  xsmall: "_11c8140y",
  xxsmall: "_11c81vhk"
};
var useColor = function useColor2(colorProp) {
  var surface = useSurface();
  if (colorProp) {
    return colorProp;
  }
  if (inverseColorMap.hasOwnProperty(surface)) {
    return inverseColorMap[surface];
  }
  return "color.text";
};
var Heading = (0, import_react2.forwardRef)(function(props, ref) {
  var children = props.children, size = props.size, id = props.id, testId = props.testId, as = props.as, colorProp = props.color;
  if (typeof process !== "undefined" && true && as && typeof as !== "string") {
    throw new Error("`as` prop should be a string.");
  }
  var _useHeading = useHeading(sizeTagMap[size]), _useHeading2 = _slicedToArray(_useHeading, 2), hLevel = _useHeading2[0], inferredElement = _useHeading2[1];
  var Component = as || inferredElement;
  var needsAriaRole = Component === "div" && hLevel;
  var color = useColor(colorProp);
  return React2.createElement(Component, {
    id,
    ref,
    "data-testid": testId,
    role: needsAriaRole ? "heading" : void 0,
    "aria-level": needsAriaRole ? hLevel : void 0,
    className: ax([styles.reset, size && headingSizeStylesMap[size], headingColorStylesMap[color]])
  }, children);
});
var heading_partial_default = Heading;

export {
  heading_partial_default,
  require_status_success
};
//# sourceMappingURL=chunk-6O4K2DJ7.js.map

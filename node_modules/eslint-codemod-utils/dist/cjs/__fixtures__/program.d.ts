declare const _default: {
    type: string;
    start: number;
    end: number;
    loc: {
        start: {
            line: number;
            column: number;
        };
        end: {
            line: number;
            column: number;
        };
    };
    range: number[];
    comments: {
        type: string;
        value: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
    }[];
    sourceType: string;
    body: ({
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        specifiers: ({
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            local: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            imported?: undefined;
        } | {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            imported: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            local: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
        })[];
        source: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            value: string;
            raw: string;
        };
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declarations: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            id: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            init: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                source: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: string;
                    raw: string;
                };
            };
        }[];
        kind: string;
        specifiers?: undefined;
        source?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declarations: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            id: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            init: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                expression: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    object: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    computed: boolean;
                    property: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    optional: boolean;
                };
            };
        }[];
        kind: string;
        specifiers?: undefined;
        source?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        id: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            name: string;
        };
        generator: boolean;
        async: boolean;
        expression: boolean;
        params: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            properties: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                key: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                computed: boolean;
                method: boolean;
                shorthand: boolean;
                value: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                kind: string;
            }[];
        }[];
        body: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            body: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                argument: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    openingElement: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        };
                        attributes: never[];
                        selfClosing: boolean;
                    };
                    closingElement: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        };
                    };
                    children: ({
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        value: string;
                        raw: string;
                        openingElement?: undefined;
                        closingElement?: undefined;
                        children?: undefined;
                    } | {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        openingElement: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: string;
                            };
                            attributes: ({
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    name: string;
                                };
                                value: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    value: string;
                                    raw: string;
                                    expression?: undefined;
                                };
                                argument?: undefined;
                            } | {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    name: string;
                                };
                                value: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    expression: {
                                        type: string;
                                        start: number;
                                        end: number;
                                        loc: {
                                            start: {
                                                line: number;
                                                column: number;
                                            };
                                            end: {
                                                line: number;
                                                column: number;
                                            };
                                        };
                                        range: number[];
                                        value: number;
                                        raw: string;
                                    };
                                    value?: undefined;
                                    raw?: undefined;
                                };
                                argument?: undefined;
                            } | {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    name: string;
                                };
                                value: null;
                                argument?: undefined;
                            } | {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                argument: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    callee: {
                                        type: string;
                                        start: number;
                                        end: number;
                                        loc: {
                                            start: {
                                                line: number;
                                                column: number;
                                            };
                                            end: {
                                                line: number;
                                                column: number;
                                            };
                                        };
                                        range: number[];
                                        name: string;
                                    };
                                    arguments: never[];
                                    optional: boolean;
                                };
                                name?: undefined;
                                value?: undefined;
                            })[];
                            selfClosing: boolean;
                        };
                        closingElement: null;
                        children: never[];
                        value?: undefined;
                        raw?: undefined;
                    })[];
                };
            }[];
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declarations: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            id: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            init: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                expressions: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: number;
                    raw: string;
                }[];
            };
        }[];
        kind: string;
        specifiers?: undefined;
        source?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        expression: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            callee: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
                object?: undefined;
                computed?: undefined;
                property?: undefined;
                optional?: undefined;
            };
            arguments: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                expressions: ({
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                    test?: undefined;
                    consequent?: undefined;
                    alternate?: undefined;
                } | {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    test: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        left: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            value: number;
                            raw: string;
                        };
                        operator: string;
                        right: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            value: number;
                            raw: string;
                        };
                    };
                    consequent: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        expressions: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        }[];
                        quasis: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            value: {
                                raw: string;
                                cooked: string;
                            };
                            tail: boolean;
                        }[];
                    };
                    alternate: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        value: string;
                        raw: string;
                    };
                    name?: undefined;
                })[];
                quasis: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: {
                        raw: string;
                        cooked: string;
                    };
                    tail: boolean;
                }[];
            }[];
            optional?: undefined;
            elements?: undefined;
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        expression: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            callee: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
                object?: undefined;
                computed?: undefined;
                property?: undefined;
                optional?: undefined;
            };
            arguments: never[];
            optional: boolean;
            elements?: undefined;
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declarations: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            id: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            init: null;
        }[];
        kind: string;
        specifiers?: undefined;
        source?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declarations: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            id: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            init: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                id: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                superClass: null;
                body: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    body: never[];
                };
            };
        }[];
        kind: string;
        specifiers?: undefined;
        source?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        id: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            name: string;
        };
        superClass: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            name: string;
        };
        body: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            body: ({
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                static: boolean;
                key: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                computed: boolean;
                kind: string;
                value: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    id: null;
                    generator: boolean;
                    async: boolean;
                    expression: boolean;
                    params: never[];
                    body: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        body: ({
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            expression: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                callee: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                };
                                arguments: never[];
                                optional: boolean;
                                operator?: undefined;
                                left?: undefined;
                                right?: undefined;
                            };
                        } | {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            expression: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                operator: string;
                                left: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    object: {
                                        type: string;
                                        start: number;
                                        end: number;
                                        loc: {
                                            start: {
                                                line: number;
                                                column: number;
                                            };
                                            end: {
                                                line: number;
                                                column: number;
                                            };
                                        };
                                        range: number[];
                                    };
                                    computed: boolean;
                                    property: {
                                        type: string;
                                        start: number;
                                        end: number;
                                        loc: {
                                            start: {
                                                line: number;
                                                column: number;
                                            };
                                            end: {
                                                line: number;
                                                column: number;
                                            };
                                        };
                                        range: number[];
                                        name: string;
                                    };
                                    optional: boolean;
                                };
                                right: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    value: string;
                                    raw: string;
                                };
                                callee?: undefined;
                                arguments?: undefined;
                                optional?: undefined;
                            };
                        })[];
                    };
                };
            } | {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                static: boolean;
                key: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                computed: boolean;
                kind: string;
                value: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    id: null;
                    generator: boolean;
                    async: boolean;
                    expression: boolean;
                    params: never[];
                    body: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        body: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            argument: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                object: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                };
                                computed: boolean;
                                property: {
                                    type: string;
                                    start: number;
                                    end: number;
                                    loc: {
                                        start: {
                                            line: number;
                                            column: number;
                                        };
                                        end: {
                                            line: number;
                                            column: number;
                                        };
                                    };
                                    range: number[];
                                    name: string;
                                };
                                optional: boolean;
                            };
                        }[];
                    };
                };
            })[];
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        discriminant: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            name: string;
        };
        cases: ({
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            consequent: ({
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                expression: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: boolean;
                    raw: string;
                };
            } | {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                expression: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: string;
                    raw: string;
                };
            })[];
            test: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                value: string;
                raw: string;
            };
        } | {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            consequent: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                expression: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: string;
                    raw: string;
                };
            }[];
            test: null;
        })[];
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declarations: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            id: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            init: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                left: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    left: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        value: number;
                        raw: string;
                    };
                    operator: string;
                    right: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        value: number;
                        raw: string;
                    };
                };
                operator: string;
                right: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: number;
                    raw: string;
                };
            };
        }[];
        kind: string;
        specifiers?: undefined;
        source?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        body: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            declarations: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                id: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                init: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: number;
                    raw: string;
                };
            }[];
            kind: string;
        }[];
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        expression: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            elements: never[];
            callee?: undefined;
            arguments?: undefined;
            optional?: undefined;
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        test: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            left: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                value: number;
                raw: string;
                name?: undefined;
            };
            operator: string;
            right: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                value: number;
                raw: string;
            };
        };
        consequent: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            body: never[];
        };
        alternate: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            test: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                left: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: number;
                    raw: string;
                };
                operator: string;
                right: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: number;
                    raw: string;
                };
            };
            consequent: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                body: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    expression: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        callee: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            object: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: string;
                            };
                            computed: boolean;
                            property: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: string;
                            };
                            optional: boolean;
                        };
                        arguments: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            value: string;
                            raw: string;
                        }[];
                        optional: boolean;
                    };
                }[];
            };
            alternate: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                body: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    expression: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        callee: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            object: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: string;
                            };
                            computed: boolean;
                            property: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: string;
                            };
                            optional: boolean;
                        };
                        arguments: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            value: string;
                            raw: string;
                        }[];
                        optional: boolean;
                    };
                }[];
            };
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declarations: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            id: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            init: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                properties: ({
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    method: boolean;
                    key: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    computed: boolean;
                    shorthand: boolean;
                    value: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        value: number;
                        raw: string;
                        id?: undefined;
                        generator?: undefined;
                        async?: undefined;
                        expression?: undefined;
                        params?: undefined;
                        body?: undefined;
                    };
                    kind: string;
                } | {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    method: boolean;
                    key: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    computed: boolean;
                    kind: string;
                    value: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        id: null;
                        generator: boolean;
                        async: boolean;
                        expression: boolean;
                        params: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        }[];
                        body: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            body: never[];
                        };
                        value?: undefined;
                        raw?: undefined;
                    };
                    shorthand: boolean;
                } | {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    method: boolean;
                    key: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    computed: boolean;
                    shorthand: boolean;
                    value: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        id: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        };
                        generator: boolean;
                        async: boolean;
                        expression: boolean;
                        params: never[];
                        body: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            body: never[];
                        };
                        value?: undefined;
                        raw?: undefined;
                    };
                    kind: string;
                })[];
            };
        }[];
        kind: string;
        specifiers?: undefined;
        source?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        init: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            declarations: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                id: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                init: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: number;
                    raw: string;
                };
            }[];
            kind: string;
        };
        test: null;
        update: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            operator: string;
            prefix: boolean;
            argument: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
        };
        body: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            body: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                label: null;
            }[];
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        block: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            body: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                argument: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    callee: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    arguments: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        value: string;
                        raw: string;
                    }[];
                };
            }[];
        };
        handler: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            param: null;
            body: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                body: never[];
            };
        };
        finalizer: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            body: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                expression: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    callee: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        object: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        };
                        computed: boolean;
                        property: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        };
                        optional: boolean;
                    };
                    arguments: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        value: string;
                        raw: string;
                    }[];
                    optional: boolean;
                };
            }[];
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        test: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            left: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
                value?: undefined;
                raw?: undefined;
            };
            operator: string;
            right: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                value: number;
                raw: string;
            };
        };
        body: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            body: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                label: null;
            }[];
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declarations: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            id: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            init: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                openingElement: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    attributes: ({
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        };
                        value: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            expression: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                value: boolean;
                                raw: string;
                                name?: undefined;
                            };
                        };
                    } | {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            name: string;
                        };
                        value: {
                            type: string;
                            start: number;
                            end: number;
                            loc: {
                                start: {
                                    line: number;
                                    column: number;
                                };
                                end: {
                                    line: number;
                                    column: number;
                                };
                            };
                            range: number[];
                            expression: {
                                type: string;
                                start: number;
                                end: number;
                                loc: {
                                    start: {
                                        line: number;
                                        column: number;
                                    };
                                    end: {
                                        line: number;
                                        column: number;
                                    };
                                };
                                range: number[];
                                name: string;
                                value?: undefined;
                                raw?: undefined;
                            };
                        };
                    })[];
                    selfClosing: boolean;
                };
                closingElement: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                };
                children: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: string;
                    raw: string;
                }[];
            };
        }[];
        kind: string;
        specifiers?: undefined;
        source?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        expression: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            callee: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                object: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                computed: boolean;
                property: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                optional: boolean;
                name?: undefined;
            };
            arguments: ({
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                openingElement: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    attributes: never[];
                    selfClosing: boolean;
                };
                closingElement: null;
                children: never[];
                callee?: undefined;
                arguments?: undefined;
                optional?: undefined;
            } | {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                callee: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    object: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    computed: boolean;
                    property: {
                        type: string;
                        start: number;
                        end: number;
                        loc: {
                            start: {
                                line: number;
                                column: number;
                            };
                            end: {
                                line: number;
                                column: number;
                            };
                        };
                        range: number[];
                        name: string;
                    };
                    optional: boolean;
                };
                arguments: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: string;
                    raw: string;
                }[];
                optional: boolean;
                openingElement?: undefined;
                closingElement?: undefined;
                children?: undefined;
            })[];
            optional: boolean;
            elements?: undefined;
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        specifiers: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            local: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
            exported: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                name: string;
            };
        }[];
        source: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            value: string;
            raw: string;
        };
        declaration: null;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        declaration: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            name: string;
            declarations?: undefined;
            kind?: undefined;
        };
        specifiers?: undefined;
        source?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        specifiers: never[];
        source: null;
        declaration: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            declarations: {
                type: string;
                start: number;
                end: number;
                loc: {
                    start: {
                        line: number;
                        column: number;
                    };
                    end: {
                        line: number;
                        column: number;
                    };
                };
                range: number[];
                id: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    name: string;
                };
                init: {
                    type: string;
                    start: number;
                    end: number;
                    loc: {
                        start: {
                            line: number;
                            column: number;
                        };
                        end: {
                            line: number;
                            column: number;
                        };
                    };
                    range: number[];
                    value: number;
                    raw: string;
                };
            }[];
            kind: string;
            name?: undefined;
        };
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        exported?: undefined;
    } | {
        type: string;
        start: number;
        end: number;
        loc: {
            start: {
                line: number;
                column: number;
            };
            end: {
                line: number;
                column: number;
            };
        };
        range: number[];
        source: {
            type: string;
            start: number;
            end: number;
            loc: {
                start: {
                    line: number;
                    column: number;
                };
                end: {
                    line: number;
                    column: number;
                };
            };
            range: number[];
            value: string;
            raw: string;
        };
        exported: null;
        specifiers?: undefined;
        declarations?: undefined;
        kind?: undefined;
        id?: undefined;
        generator?: undefined;
        async?: undefined;
        expression?: undefined;
        params?: undefined;
        body?: undefined;
        superClass?: undefined;
        discriminant?: undefined;
        cases?: undefined;
        test?: undefined;
        consequent?: undefined;
        alternate?: undefined;
        init?: undefined;
        update?: undefined;
        block?: undefined;
        handler?: undefined;
        finalizer?: undefined;
        declaration?: undefined;
    })[];
};
export default _default;

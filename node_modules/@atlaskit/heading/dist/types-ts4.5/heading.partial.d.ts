/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { type ReactNode } from 'react';
type HeadingColor = 'color.text' | 'color.text.inverse' | 'color.text.warning.inverse';
export type HeadingProps = {
    /**
     * Heading size. This value is detached from the specific heading level applied to allow for more flexibility.
     * Use instead of the deprecated `level` prop.
     *
     */
    size: HeadingSize;
    /**
     * Allows the component to be rendered as the specified DOM element, overriding a default element set by `level` prop.
     */
    as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'div' | 'span';
    /**
     * Token representing text color with a built-in fallback value.
     * Will apply inverse text color automatically if placed within a Box with bold background color.
     * Defaults to `color.text`.
     */
    color?: HeadingColor;
    /**
     * The text of the heading.
     */
    children: ReactNode;
    /**
     * Unique identifier for the heading DOM element.
     */
    id?: string;
    /**
     * A `testId` prop is provided for specified elements, which is a unique
     * string that appears as a data attribute `data-testid` in the rendered code,
     * serving as a hook for automated tests.
     */
    testId?: string;
};
/**
 * THIS SECTION WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::c47bed69b7a147a63fdb8c394e98514a>>
 * @codegenId typography
 * @codegenCommand yarn workspace @atlaskit/heading codegen
 */
declare const headingSizeStylesMap: {
    readonly xxlarge: import("@compiled/react").CompiledStyles<{
        font: "var(--ds-font-heading-xxlarge)";
    }>;
    readonly xlarge: import("@compiled/react").CompiledStyles<{
        font: "var(--ds-font-heading-xlarge)";
    }>;
    readonly large: import("@compiled/react").CompiledStyles<{
        font: "var(--ds-font-heading-large)";
    }>;
    readonly medium: import("@compiled/react").CompiledStyles<{
        font: "var(--ds-font-heading-medium)";
    }>;
    readonly small: import("@compiled/react").CompiledStyles<{
        font: "var(--ds-font-heading-small)";
    }>;
    readonly xsmall: import("@compiled/react").CompiledStyles<{
        font: "var(--ds-font-heading-xsmall)";
    }>;
    readonly xxsmall: import("@compiled/react").CompiledStyles<{
        font: "var(--ds-font-heading-xxsmall)";
    }>;
};
type HeadingSize = keyof typeof headingSizeStylesMap;
/**
 * __Heading__
 *
 * Heading is a typography component used to display text in defined sizes and styles.
 *
 * @example
 *
 * ```jsx
 * <Heading size="xxlarge">Page title</Heading>
 * ```
 */
declare const Heading: import("react").ForwardRefExoticComponent<HeadingProps & import("react").RefAttributes<HTMLHeadingElement>>;
export default Heading;

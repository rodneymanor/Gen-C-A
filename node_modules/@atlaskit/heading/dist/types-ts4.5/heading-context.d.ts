import React, { type ReactNode } from 'react';
type HeadingLevel = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
type HeadingElement = `h${1 | 2 | 3 | 4 | 5 | 6}` | 'div';
/**
 * Infers the correct heading markup based on the current heading level context.
 */
export declare const useHeading: (fallback: HeadingElement) => readonly [
    HeadingLevel,
    HeadingElement
];
interface HeadingLevelContextProps {
    /**
     * Optional - only apply this value if the intent is to reset the heading context outside the normal content flow, for example inside a `section`.
     */
    value?: HeadingLevel;
    /**
     * Semantic hierarchy of content below the heading context.
     */
    children: ReactNode;
}
/**
 * __Heading level provider__
 *
 * The Heading level provider injects the heading level to all `Heading` components below it in the component tree.
 *
 * @example
 * ```tsx
 * // Will correctly infer the heading level
 * <HeadingContext value={1}>
 *  <Heading>H1</Heading>
 *  <HeadingContext>
 *    <Heading>H2</Heading>
 *  </HeadingContext>
 * </HeadingContext>
 * ```
 */
declare const HeadingLevelContextProvider: ({ children, value }: HeadingLevelContextProps) => React.JSX.Element;
export default HeadingLevelContextProvider;

/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { type CSSProperties, type ReactNode } from 'react';
export type ThemeAppearance = 'default' | 'inprogress' | 'moved' | 'new' | 'removed' | 'success';
export interface LozengeProps {
    /**
     * The appearance type.
     */
    appearance?: ThemeAppearance;
    /**
     * Elements to be rendered inside the lozenge. This should ideally be just a word or two.
     */
    children?: ReactNode;
    /**
     * Determines whether to apply the bold style or not.
     */
    isBold?: boolean;
    /**
     * max-width of lozenge container. Default to 200px.
     */
    maxWidth?: number | string;
    /**
     * Style customization to apply to the badge. Only `backgroundColor` and `color` are supported.
     */
    style?: Pick<CSSProperties, 'backgroundColor' | 'color'>;
    /**
     * A `testId` prop is provided for specified elements, which is a unique
     * string that appears as a data attribute `data-testid` in the rendered code,
     * serving as a hook for automated tests
     */
    testId?: string;
}
/**
 * __Lozenge__
 *
 * A lozenge is a visual indicator used to highlight an item's status for quick recognition.
 *
 * - [Examples](https://atlassian.design/components/lozenge/examples)
 * - [Code](https://atlassian.design/components/lozenge/code)
 * - [Usage](https://atlassian.design/components/lozenge/usage)
 */
declare const Lozenge: import("react").MemoExoticComponent<({ children, testId, isBold, appearance, maxWidth, style, }: LozengeProps) => JSX.Element>;
export default Lozenge;

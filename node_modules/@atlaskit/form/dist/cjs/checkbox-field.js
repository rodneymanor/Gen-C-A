"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _field = _interopRequireDefault(require("./field"));
var _excluded = ["children", "defaultIsChecked", "isDisabled", "isRequired", "label", "name", "value"],
  _excluded2 = ["value", "onChange"],
  _excluded3 = ["fieldProps"],
  _excluded4 = ["value", "onChange"],
  _excluded5 = ["fieldProps"];
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * __Checkbox field__
 *
 * A checkbox field is a form field that lets users select an item. Users can check or uncheck the checkbox.
 *
 * - [Examples] https://atlaskit.atlassian.com/packages/design-system/form/docs/fields#checkboxfield-reference
 * - [Code] https://atlaskit.atlassian.com/packages/design-system/form/docs/fields#checkboxfield-reference
 * - [Usage] https://atlaskit.atlassian.com/packages/design-system/form/docs/fields#checkboxfield-reference
 */
var CheckboxField = function CheckboxField(_ref) {
  var children = _ref.children,
    _ref$defaultIsChecked = _ref.defaultIsChecked,
    defaultIsChecked = _ref$defaultIsChecked === void 0 ? false : _ref$defaultIsChecked,
    isDisabled = _ref.isDisabled,
    isRequired = _ref.isRequired,
    label = _ref.label,
    name = _ref.name,
    value = _ref.value,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  // Maintains a memoised list of the default values
  var defaultValue = (0, _react.useCallback)(function () {
    var currentValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    return defaultIsChecked && value !== undefined ? [].concat((0, _toConsumableArray2.default)(currentValue), [value]) : currentValue;
  }, [value, defaultIsChecked]);
  return value !== undefined ? /*#__PURE__*/_react.default.createElement(_field.default
  // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  , (0, _extends2.default)({}, (0, _platformFeatureFlags.fg)('platform_design-system-team_checkbox-field-spread') ? {} : _objectSpread({}, rest), {
    defaultValue: defaultValue,
    isDisabled: isDisabled,
    isRequired: isRequired,
    label: label,
    name: name,
    transform: function transform(event, currentValue) {
      return !Array.isArray(event) && event.currentTarget.checked && currentValue ? [].concat((0, _toConsumableArray2.default)(currentValue), [value]) : currentValue.filter(function (v) {
        return v !== value;
      });
    }
  }), function (_ref2) {
    var _ref2$fieldProps = _ref2.fieldProps,
      fieldValue = _ref2$fieldProps.value,
      _onChange = _ref2$fieldProps.onChange,
      otherFieldProps = (0, _objectWithoutProperties2.default)(_ref2$fieldProps, _excluded2),
      others = (0, _objectWithoutProperties2.default)(_ref2, _excluded3);
    return children(_objectSpread({
      fieldProps: _objectSpread(_objectSpread({}, otherFieldProps), {}, {
        // Setting to any because it's typed weirdly at the field level
        onChange: function onChange(v) {
          return _onChange(v);
        },
        isChecked: !!fieldValue.find(function (v) {
          return v === value;
        }),
        value: value
      })
    }, others));
  }) : /*#__PURE__*/_react.default.createElement(_field.default
  // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  , (0, _extends2.default)({}, (0, _platformFeatureFlags.fg)('platform_design-system-team_checkbox-field-spread') ? {} : _objectSpread({}, rest), {
    defaultValue: defaultIsChecked,
    isDisabled: isDisabled,
    isRequired: isRequired,
    label: label,
    name: name,
    transform: function transform(event) {
      return typeof event === 'boolean' ? event : event.currentTarget.checked;
    }
  }), function (_ref3) {
    var _ref3$fieldProps = _ref3.fieldProps,
      fieldValue = _ref3$fieldProps.value,
      _onChange2 = _ref3$fieldProps.onChange,
      otherFieldProps = (0, _objectWithoutProperties2.default)(_ref3$fieldProps, _excluded4),
      others = (0, _objectWithoutProperties2.default)(_ref3, _excluded5);
    return children(_objectSpread({
      fieldProps: _objectSpread(_objectSpread({}, otherFieldProps), {}, {
        // Setting to any because it's typed weirdly at the field level
        onChange: function onChange(v) {
          return _onChange2(v);
        },
        isChecked: fieldValue,
        value: value
      })
    }, others));
  });
};
var _default = exports.default = CheckboxField;
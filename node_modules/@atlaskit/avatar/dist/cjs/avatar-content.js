/* avatar-content.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AvatarContent = void 0;
require("./avatar-content.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
var _context = require("./context");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var boxShadowCssVar = '--avatar-box-shadow';
var bgColorCssVar = '--avatar-bg-color';
var styles = {
  root: "_19itglyw _12ji1r31 _1qu2glyw _12y31o36 _1reo15vq _18m915vq _v564ieh6 _1e0c1txw _kqswpfqs _4cvr1fhb _1bah1h6o _2lx21bp4 _80om1kw7 _6rthv77o _1pfhv77o _12l2v77o _ahbqv77o _85i5ze3t _1q51ze3t _y4tize3t _bozgze3t _t9ec1aqe _9v7aze3t _qc5o1p41 _z0ai1osq _18postnw _1hfk1j28 _aetrf705 _1peqidpf _11fnglyw _1ejjglyw _mizu194a _1ah3v77o _ra3xnqa1 _128mdkaa _4dave4h9",
  circle: "_2rko1qll _14mj1qll",
  positionRelative: "_kqswh2mm",
  disabled: "_80om13gf _1hfkvuon _1peqs237"
};
var unboundStyles = {
  root: "_vchh1ntv _bfhkcxp3 _16qs1nhn",
  interactive: "_80omtlke _4tpu1g4v _ez1ykb7n _gcm1182g _eeh8kb7n _jlxit94y"
};
var widthHeightMap = {
  xsmall: "_1bsb7vkz _4t3i7vkz",
  small: "_1bsb1tcg _4t3i1tcg",
  medium: "_1bsbzwfg _4t3izwfg",
  large: "_1bsb1ylp _4t3i1ylp",
  xlarge: "_1bsb16xz _4t3i16xz",
  xxlarge: "_1bsb1qr7 _4t3i1qr7"
};
var borderRadiusMap = {
  xsmall: "_2rkolb4i _14mjlb4i",
  small: "_2rkolb4i _14mjlb4i",
  medium: "_2rkofajl _14mjfajl",
  large: "_2rkofajl _14mjfajl",
  xlarge: "_2rko1qi0 _14mj1qi0",
  xxlarge: "_2rkopb1k _14mjpb1k"
};
/**
 * __Avatar content__
 *
 * Avatar content renders the avatar content. It can be composed with the Avatar component
 * to create a custom avatar.
 *
 * - [Examples](https://atlassian.design/components/avatar/examples)
 * - [Code](https://atlassian.design/components/avatar/code)
 * - [Usage](https://atlassian.design/components/avatar/usage)
 */
var AvatarContent = exports.AvatarContent = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var children = _ref.children;
  (0, _context.useEnsureIsInsideAvatar)();
  var _useAvatarContent = (0, _context.useAvatarContent)(),
    Container = _useAvatarContent.as,
    appearance = _useAvatarContent.appearance,
    avatarImage = _useAvatarContent.avatarImage,
    _useAvatarContent$bor = _useAvatarContent.borderColor,
    borderColor = _useAvatarContent$bor === void 0 ? (0, _platformFeatureFlags.fg)('platform-component-visual-refresh') ? "var(--ds-surface, #FFFFFF)" : "var(--ds-surface-overlay, #FFFFFF)" : _useAvatarContent$bor,
    href = _useAvatarContent.href,
    isDisabled = _useAvatarContent.isDisabled,
    label = _useAvatarContent.label,
    onClick = _useAvatarContent.onClick,
    contextRef = _useAvatarContent.ref,
    tabIndex = _useAvatarContent.tabIndex,
    target = _useAvatarContent.target,
    testId = _useAvatarContent.testId,
    size = _useAvatarContent.size,
    stackIndex = _useAvatarContent.stackIndex;
  var isInteractive = Boolean(onClick || href || isDisabled);
  return /*#__PURE__*/React.createElement(Container, (0, _extends2.default)({
    style: (0, _defineProperty2.default)((0, _defineProperty2.default)({}, bgColorCssVar, borderColor), boxShadowCssVar, "0 0 0 2px ".concat(borderColor)),
    ref: ref || contextRef,
    "aria-label": isInteractive ? label : undefined,
    onClick: onClick,
    tabIndex: tabIndex,
    "data-testid": testId,
    disabled: isDisabled,
    type: Container === 'button' ? 'button' : undefined
  }, href && {
    href: href,
    target: target,
    rel: target === '_blank' ? 'noopener noreferrer' : undefined
  }, {
    className: (0, _runtime.ax)([unboundStyles.root, styles.root, borderRadiusMap[size], appearance === 'circle' && styles.circle, widthHeightMap[size], stackIndex !== undefined && styles.positionRelative, isInteractive && !isDisabled && unboundStyles.interactive, isDisabled && styles.disabled])
  }), children || avatarImage);
});
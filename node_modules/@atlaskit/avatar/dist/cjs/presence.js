/* presence.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PresenceWrapper = void 0;
require("./presence.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _colors = require("@atlaskit/theme/colors");
var _iconWrapper = _interopRequireDefault(require("./internal/icon-wrapper"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var BusyIndicator = /*#__PURE__*/React.createElement(_react.Fragment, null, /*#__PURE__*/React.createElement("circle", {
  fill: "var(--ds-icon-danger, ".concat(_colors.R300, ")"),
  cx: "4",
  cy: "4",
  r: "4"
}), /*#__PURE__*/React.createElement("path", {
  fill: "var(--ds-surface-overlay, ".concat(_colors.N0, ")"),
  d: "M3.3,1.9l2.8,2.8c0.2,0.2,0.2,0.5,0,0.7L5.4,6.1c-0.2,0.2-0.5,0.2-0.7,0L1.9,3.3c-0.2-0.2-0.2-0.5,0-0.7l0.7-0.7C2.8,1.7,3.1,1.7,3.3,1.9z"
}));
var FocusIndicator = /*#__PURE__*/React.createElement(_react.Fragment, null, /*#__PURE__*/React.createElement("path", {
  fill: "var(--ds-icon-discovery, ".concat(_colors.P300, ")"),
  d: "M4,8 C1.790861,8 0,6.209139 0,4 C0,1.790861 1.790861,0 4,0 C6.209139,0 8,1.790861 8,4 C8,6.209139 6.209139,8 4,8 Z M4,6.66666667 C5.47275933,6.66666667 6.66666667,5.47275933 6.66666667,4 C6.66666667,2.52724067 5.47275933,1.33333333 4,1.33333333 C2.52724067,1.33333333 1.33333333,2.52724067 1.33333333,4 C1.33333333,5.47275933 2.52724067,6.66666667 4,6.66666667 Z M4,5.33333333 C3.26362033,5.33333333 2.66666667,4.73637967 2.66666667,4 C2.66666667,3.26362033 3.26362033,2.66666667 4,2.66666667 C4.73637967,2.66666667 5.33333333,3.26362033 5.33333333,4 C5.33333333,4.73637967 4.73637967,5.33333333 4,5.33333333 Z"
}));
var OfflineIndicator = /*#__PURE__*/React.createElement(_react.Fragment, null, /*#__PURE__*/React.createElement("path", {
  fill: "var(--ds-text-subtlest, ".concat(_colors.N200, ")"),
  d: "M4,8 C6.209139,8 8,6.209139 8,4 C8,1.790861 6.209139,0 4,0 C1.790861,0 0,1.790861 0,4 C0,6.209139 1.790861,8 4,8 Z M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z"
}), /*#__PURE__*/React.createElement("path", {
  fill: "var(--ds-surface-overlay, ".concat(_colors.N40, ")"),
  d: "M4,6 C5.1045695,6 6,5.1045695 6,4 C6,2.8954305 5.1045695,2 4,2 C2.8954305,2 2,2.8954305 2,4 C2,5.1045695 2.8954305,6 4,6 Z"
}));
var OnlineIndicator = /*#__PURE__*/React.createElement("circle", {
  fill: "var(--ds-icon-success, ".concat(_colors.G300, ")"),
  cx: "4",
  cy: "4",
  r: "4"
});
function getPresence(presence) {
  switch (presence) {
    case 'busy':
      return BusyIndicator;
    case 'focus':
      return FocusIndicator;
    case 'offline':
      return OfflineIndicator;
    case 'online':
      return OnlineIndicator;
  }
}

/**
 * __Avatar presence__
 *
 * A presence shows an avatarâ€™s availability.
 *
 * - [Examples](https://atlassian.design/components/avatar/avatar-presence/examples)
 * - [Code](https://atlassian.design/components/avatar/avatar-presence/code)
 * - [Usage](https://atlassian.design/components/avatar/avatar-presence/usage)
 */
var AvatarPresence = function AvatarPresence(_ref) {
  var borderColor = _ref.borderColor,
    children = _ref.children,
    presence = _ref.presence;
  return /*#__PURE__*/React.createElement(_iconWrapper.default, {
    bgColor: borderColor
  }, presence ? /*#__PURE__*/React.createElement("svg", {
    height: "100%",
    version: "1.1",
    viewBox: "0 0 8 8",
    width: "100%",
    xmlns: "http://www.w3.org/2000/svg"
  }, getPresence(presence)) : children);
};
var _default = exports.default = AvatarPresence;
var styles = {
  root: "_kqswstnw _lcxvglyw"
};
var iconSizeMap = {
  small: "_4t3i1crf _1bsb1crf",
  medium: "_4t3idlk8 _1bsbdlk8",
  large: "_4t3io7ao _1bsbo7ao",
  xlarge: "_4t3if6fq _1bsbf6fq"
};
var iconOffsetMap = {
  square: "_94n5myb0 _1xi2myb0",
  small: "_94n5idpf _1xi2idpf",
  medium: "_94n5idpf _1xi2idpf",
  large: "_94n5t94y _1xi2t94y",
  xlarge: "_94n51v6z _1xi21v6z"
};

/**
 * __Presence wrapper__
 *
 * A presence wrapper is used internally to position presence ontop of the avatar.
 */
var PresenceWrapper = exports.PresenceWrapper = function PresenceWrapper(_ref2) {
  var size = _ref2.size,
    appearance = _ref2.appearance,
    children = _ref2.children,
    borderColor = _ref2.borderColor,
    presence = _ref2.presence,
    testId = _ref2.testId;
  return /*#__PURE__*/React.createElement("span", {
    "aria-hidden": "true",
    "data-testid": testId && "".concat(testId, "--presence"),
    className: (0, _runtime.ax)([styles.root, iconSizeMap[size], iconOffsetMap[size], appearance === 'square' && iconOffsetMap['square']])
  }, /*#__PURE__*/React.createElement(AvatarPresence, {
    borderColor: borderColor,
    presence: !children ? presence : undefined
  }, children));
};
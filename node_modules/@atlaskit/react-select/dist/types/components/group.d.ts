/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { type ComponentType, type ReactNode } from 'react';
import { type XCSSProp } from '@compiled/react';
import type { XCSSAllProperties, XCSSAllPseudos } from '@atlaskit/css';
import { type SelectProps } from '../select';
import { type CommonProps, type CommonPropsAndClassName, type CX, type GetStyles, type GroupBase, type Options } from '../types';
interface ForwardedHeadingProps<Option, Group extends GroupBase<Option>> {
    id: string;
    data: Group;
}
export interface GroupProps<Option = unknown, IsMulti extends boolean = boolean, Group extends GroupBase<Option> = GroupBase<Option>> extends CommonPropsAndClassName<Option, IsMulti, Group> {
    /**
     * The children to be rendered.
     */
    children: ReactNode;
    /**
     * Component to wrap the label, receives headingProps.
     */
    Heading: ComponentType<GroupHeadingProps<Option, IsMulti, Group>>;
    /**
     * Props to pass to Heading.
     */
    headingProps: ForwardedHeadingProps<Option, Group>;
    /**
     * Props to be passed to the group element.
     */
    innerProps: JSX.IntrinsicElements['div'];
    /**
     * Label to be displayed in the heading component.
     */
    label: ReactNode;
    /**
     * The data of the group.
     */
    data: Group;
    options: Options<Option>;
}
export declare const groupCSS: () => {};
declare const Group: <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: GroupProps<Option, IsMulti, Group>) => JSX.Element;
interface GroupHeadingPropsDefinedProps<Option, IsMulti extends boolean, Group extends GroupBase<Option>> extends ForwardedHeadingProps<Option, Group> {
    className?: string | undefined;
    selectProps: SelectProps<Option, IsMulti, Group>;
    getStyles: GetStyles<Option, IsMulti, Group>;
    getClassNames: CommonProps<Option, IsMulti, Group>['getClassNames'];
    cx: CX;
    xcss?: XCSSProp<XCSSAllProperties, XCSSAllPseudos> | undefined;
}
export type GroupHeadingProps<Option = unknown, IsMulti extends boolean = boolean, Group extends GroupBase<Option> = GroupBase<Option>> = GroupHeadingPropsDefinedProps<Option, IsMulti, Group> & JSX.IntrinsicElements['div'];
export declare const groupHeadingCSS: () => {};
export declare const GroupHeading: <Option, IsMulti extends boolean, Group extends GroupBase<Option>>(props: GroupHeadingProps<Option, IsMulti, Group>) => JSX.Element;
export default Group;

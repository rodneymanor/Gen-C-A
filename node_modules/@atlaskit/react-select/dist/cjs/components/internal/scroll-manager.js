"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ScrollManager;
var _react = _interopRequireWildcard(require("react"));
var _useScrollCapture = _interopRequireDefault(require("./use-scroll-capture"));
var _useScrollLock = _interopRequireDefault(require("./use-scroll-lock"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var blurSelectInput = function blurSelectInput(event) {
  var element = event.target;
  return element.ownerDocument.activeElement && element.ownerDocument.activeElement.blur();
};
function ScrollManager(_ref) {
  var children = _ref.children,
    lockEnabled = _ref.lockEnabled,
    _ref$captureEnabled = _ref.captureEnabled,
    captureEnabled = _ref$captureEnabled === void 0 ? true : _ref$captureEnabled,
    onBottomArrive = _ref.onBottomArrive,
    onBottomLeave = _ref.onBottomLeave,
    onTopArrive = _ref.onTopArrive,
    onTopLeave = _ref.onTopLeave;
  var setScrollCaptureTarget = (0, _useScrollCapture.default)({
    isEnabled: captureEnabled,
    onBottomArrive: onBottomArrive,
    onBottomLeave: onBottomLeave,
    onTopArrive: onTopArrive,
    onTopLeave: onTopLeave
  });
  var setScrollLockTarget = (0, _useScrollLock.default)({
    isEnabled: lockEnabled
  });
  var targetRef = function targetRef(element) {
    setScrollCaptureTarget(element);
    setScrollLockTarget(element);
  };
  return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, lockEnabled &&
  /*#__PURE__*/
  // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions, @atlassian/a11y/interactive-element-not-keyboard-focusable
  _react.default.createElement("div", {
    onClick: blurSelectInput,
    style: {
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
      position: 'fixed',
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
      insetBlockEnd: 0,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
      insetBlockStart: 0,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
      insetInlineEnd: 0,
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
      insetInlineStart: 0
    }
  }), children(targetRef));
}
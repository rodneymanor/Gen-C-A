/* placeholder.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./placeholder.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { cx } from '@compiled/react';
import { getStyleProps } from '../utils';
export var placeholderCSS = function placeholderCSS() {
  return {};
};
var placeholderStyles = {
  root: "_nd5l1sux _19pkidpf _2hwxv77o _otyridpf _18u0v77o _syaz131l",
  disabled: "_syaz1lh4"
};
var Placeholder = function Placeholder(props) {
  var children = props.children,
    innerProps = props.innerProps,
    isDisabled = props.isDisabled,
    xcss = props.xcss;
  var _getStyleProps = getStyleProps(props, 'placeholder', {
      placeholder: true
    }),
    css = _getStyleProps.css,
    className = _getStyleProps.className;
  return /*#__PURE__*/React.createElement("div", _extends({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
    style: css
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop, @atlaskit/ui-styling-standard/local-cx-xcss, @compiled/local-cx-xcss
    ,
    className: ax([placeholderStyles.root, isDisabled && placeholderStyles.disabled, cx(className, xcss, '-placeholder')])
  }, innerProps), children);
};

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default Placeholder;
import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef } from 'react';
import Select from './select';
import useAsync from './use-async';
import useStateManager from './use-state-manager';
var AsyncSelect = /*#__PURE__*/forwardRef(function (props, ref) {
  // when isAsync is true, options are not provided and async props are used, we will enable async
  var isAsyncEnabledInBaseSelect = props.isAsync && !props.options && (!!props.loadOptions || !!props.defaultOptions);
  var stateManagedProps = useAsync(props);
  // when isAsync is falsy or isAsyncEnabledInBaseSelect is true, we use async props, otherwise we use base props
  var selectAsyncProps = !props.isAsync || isAsyncEnabledInBaseSelect ? stateManagedProps : props;
  var selectProps = useStateManager(selectAsyncProps);
  return /*#__PURE__*/React.createElement(Select, _extends({
    ref: ref
  }, selectProps));
});
export { useAsync };

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default AsyncSelect;
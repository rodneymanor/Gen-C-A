import type { CSSProperties } from 'react';
import type { Rule } from 'eslint';
import { type ObjectExpression } from 'eslint-codemod-utils';
export declare const SPREAD_SYNTAX: unique symbol;
type Token = {
    tokenName: string;
    fallbackValue: string | undefined;
};
export type CSSPropStyleObject = {
    [key in keyof CSSProperties]: string | number | Token;
} & {
    unsupported: (keyof CSSProperties | typeof SPREAD_SYNTAX)[];
};
/**
 * Note: Not recursive. Only handles top level key/value pairs
 */
export declare const convertASTObjectExpressionToJSObject: (styles: ObjectExpression & Partial<Rule.NodeParentExtension>) => CSSPropStyleObject;
export {};

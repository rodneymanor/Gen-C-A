import type { Rule } from 'eslint';
import { type Property } from 'eslint-codemod-utils';
import { isLegacyElevation } from '../utils/is-elevation';
import type { RuleConfig } from './types';
type Suggestion = {
    shouldReturnSuggestion: boolean;
} & Rule.SuggestionReportDescriptor;
export declare const lintTemplateIdentifierForColor: (node: Rule.Node, context: Rule.RuleContext, config: RuleConfig) => void;
export declare const lintObjectForColor: (propertyNode: Property, context: Rule.RuleContext, config: RuleConfig) => void;
export declare const lintJSXLiteralForColor: (node: Rule.Node, context: Rule.RuleContext, config: RuleConfig) => void;
export declare const lintJSXMemberForColor: (node: Rule.Node, context: Rule.RuleContext, config: RuleConfig) => void;
export declare const lintJSXIdentifierForColor: (node: Rule.Node, context: Rule.RuleContext, config: RuleConfig) => void;
export declare const getElevationTokenExample: (elevation: Exclude<ReturnType<typeof isLegacyElevation>, false>) => string;
export declare const getTokenSuggestion: (node: Rule.Node, reference: string, config: RuleConfig) => Suggestion[];
export {};

/* eslint-disable @repo/internal/react/require-jsdoc */

import { isNodeOfType } from 'eslint-codemod-utils';
import { getScope } from '@atlaskit/eslint-utils/context-compat';
import { getJsxElementByName } from '../../../utils/get-jsx-element-by-name';
import { getStyledComponentCall } from '../../../utils/get-styled-component-call';
import { isSupportedForLint } from '../supported';
export var StyledComponent = {
  lint: function lint(node, _ref) {
    var _getJsxElementByName;
    var context = _ref.context;
    if (!isNodeOfType(node, 'CallExpression') || !isNodeOfType(node.callee, 'MemberExpression') || !isNodeOfType(node.callee.object, 'Identifier') || !isNodeOfType(node.callee.property, 'Identifier')) {
      return;
    }
    var styles = getStyledComponentCall(node);
    var elementName = node.callee.property.name;
    if (!styles || !isNodeOfType(styles.id, 'Identifier')) {
      return;
    }
    var jsxElement = (_getJsxElementByName = getJsxElementByName(styles.id.name, getScope(context, node))) === null || _getJsxElementByName === void 0 ? void 0 : _getJsxElementByName.parent;
    if (!jsxElement) {
      // If there's no JSX element, we can't determine if it's being used as an heading or not
      return;
    }
    if (jsxElement && !isSupportedForLint(jsxElement, elementName)) {
      return;
    }
    context.report({
      node: styles,
      messageId: 'noHtmlHeading',
      data: {
        name: node.callee.property.name
      }
    });
  }
};
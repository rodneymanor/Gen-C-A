"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isBlockedAddEventListener = isBlockedAddEventListener;
var _eslintCodemodUtils = require("eslint-codemod-utils");
var _blocked = require("../shared/blocked");
function isBlockedAddEventListener(node) {
  var callee = node.callee;
  if (!(0, _eslintCodemodUtils.isNodeOfType)(callee, 'MemberExpression')) {
    return false;
  }
  var property = callee.property;
  if (!(0, _eslintCodemodUtils.isNodeOfType)(property, 'Identifier')) {
    return false;
  }
  if (property.name !== 'addEventListener') {
    return false;
  }

  // check the first argument
  var first = node.arguments[0];

  // only checking literals for this eslint rule
  if (!(0, _eslintCodemodUtils.isNodeOfType)(first, 'Literal')) {
    return false;
  }
  var value = first.value;
  return typeof value === 'string' && _blocked.blockedEventNameLookup.has(value);
}
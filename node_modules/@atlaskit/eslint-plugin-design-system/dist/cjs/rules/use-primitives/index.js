"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _createRule = require("../utils/create-rule");
var _config = require("./config");
var _transformers = require("./transformers");
var boxDocsUrl = 'https://atlassian.design/components/primitives/box';
var rule = (0, _createRule.createLintRule)({
  meta: {
    name: 'use-primitives',
    type: 'suggestion',
    fixable: 'code',
    hasSuggestions: true,
    docs: {
      description: 'Encourage the usage of primitives components.',
      recommended: false,
      severity: 'warn'
    },
    schema: [{
      type: 'object',
      properties: {
        patterns: {
          type: 'array',
          maxLength: _config.VALID_PATTERNS.length,
          items: {
            type: 'string',
            enum: _config.VALID_PATTERNS
          }
        }
      },
      additionalProperties: false
    }],
    messages: {
      preferPrimitivesBox: "This element can be replaced with a \"Box\" primitive. See ".concat(boxDocsUrl, " for additional guidance.")
    }
  },
  create: function create(context) {
    // TODO: JFP-2823 - this type cast was added due to Jira's ESLint v9 migration
    var config = (0, _config.getConfig)(context.options[0]);
    return {
      // transforms styled.<html>(...) usages
      CallExpression: function CallExpression(node) {
        _transformers.CompiledStyled.lint(node, {
          context: context,
          config: config
        });
      },
      // transforms <div css={...}> usages
      JSXElement: function JSXElement(node) {
        _transformers.EmotionCSS.lint(node, {
          context: context,
          config: config
        });
      }
    };
  }
});
var _default = exports.default = rule;
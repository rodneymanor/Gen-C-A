"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rule = exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _eslintCodemodUtils = require("eslint-codemod-utils");
var _createRule = require("../utils/create-rule");
var schema = {
  type: 'array',
  items: [{
    type: 'object',
    properties: {
      autofix: {
        type: 'boolean'
      }
    },
    additionalProperties: false
  }]
};
var defaultConfig = {
  autofix: false
};
function readConfig(context) {
  var _ref = context.options,
    _ref2 = (0, _slicedToArray2.default)(_ref, 1),
    config = _ref2[0];
  return Object.assign({}, defaultConfig, config);
}
var rule = exports.rule = (0, _createRule.createLintRule)({
  meta: {
    name: 'no-emotion-primitives',
    type: 'problem',
    fixable: 'code',
    docs: {
      description: 'Ensures usage of Compiled Primitives import instead of Emotion entrypoint.',
      severity: 'warn',
      recommended: false
    },
    messages: {
      'no-emotion-primitives': 'Use @atlaskit/primitives/compiled instead of @atlaskit/primitives. Refer to go/akcss for more information.'
    },
    schema: schema
  },
  create: function create(context) {
    var config = readConfig(context);
    return {
      ImportDeclaration: function ImportDeclaration(node) {
        var importSource = node.source.value;
        if (importSource !== '@atlaskit/primitives') {
          return;
        }
        context.report({
          node: node.source,
          messageId: 'no-emotion-primitives',
          fix: function fix(fixer) {
            if (!config.autofix) {
              return null;
            }
            var newSource = (0, _eslintCodemodUtils.literal)('@atlaskit/primitives/compiled');
            return fixer.replaceText(node.source, newSource.raw || "'@atlaskit/primitives/compiled'");
          }
        });
      }
    };
  }
});
var _default = exports.default = rule;
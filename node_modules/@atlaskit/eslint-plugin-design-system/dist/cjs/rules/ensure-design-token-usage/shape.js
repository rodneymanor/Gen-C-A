"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.borderWidthValueToToken = void 0;
exports.isBorderRadius = isBorderRadius;
exports.isBorderSizeProperty = isBorderSizeProperty;
exports.isRadiusProperty = isRadiusProperty;
exports.isShapeProperty = isShapeProperty;
exports.radiusValueToToken = void 0;
var _eslintCodemodUtils = require("eslint-codemod-utils");
var _tokensRaw = require("@atlaskit/tokens/tokens-raw");
var shapeProperties = ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius', 'borderRadius'];
var borderSizeProperties = ['borderWidth', 'outlineWidth', 'borderRightWidth', 'borderLeftWidth', 'borderTopWidth', 'borderBottomWidth', 'borderInlineWidth', 'borderBlockWidth'];
var radiusValueToToken = exports.radiusValueToToken = Object.fromEntries(_tokensRaw.shape.filter(function (t) {
  return t.name.startsWith('border.radius');
})
// we prefer using the default (border.radius) over its aliases
.filter(function (t) {
  return !t.name.startsWith('border.radius.100');
}).map(function (t) {
  return [t.value, t.cleanName];
}).concat([['3px', 'border.radius']]) // add in an extra entry to resolve 3px to border.radius (normally 4px)
.concat([['50%', 'border.radius.circle']]) // add in an extra entry to resolve 50% to border.radius.circle (normally 2002rem)
);
var borderWidthValueToToken = exports.borderWidthValueToToken = Object.fromEntries(_tokensRaw.shape.filter(function (t) {
  return t.name.startsWith('border.width');
}).map(function (t) {
  return [t.value, t.cleanName];
}).concat([['2px', 'border.width']]));
function isRadiusProperty(propertyName) {
  return shapeProperties.includes(propertyName);
}
function isBorderSizeProperty(propertyName) {
  return borderSizeProperties.includes(propertyName);
}
function isShapeProperty(propertyName) {
  return isRadiusProperty(propertyName) || isBorderSizeProperty(propertyName);
}
function isBorderRadius(node) {
  return (0, _eslintCodemodUtils.isNodeOfType)(node, 'CallExpression') && (0, _eslintCodemodUtils.isNodeOfType)(node.callee, 'Identifier') && (node.callee.name === 'borderRadius' || node.callee.name === 'getBorderRadius');
}
import type { Rule } from 'eslint';
import { type JSXElement } from 'eslint-codemod-utils';
import { type MetaData } from './common';
type CheckResult = {
    success: boolean;
    refs: {
        siblings: JSXElement['children'];
    };
    autoFixable?: boolean;
};
export declare const ParagraphElements: {
    lint(node: Rule.Node, { context, config }: MetaData): void;
    _check(node: JSXElement & {
        parent: Rule.Node;
    }, { context, config }: MetaData): CheckResult;
    _fixSingle(node: JSXElement & {
        parent: Rule.Node;
    }, { context, config }: MetaData): Rule.ReportFixer;
    _fixMultiple(node: JSXElement & {
        parent: Rule.Node;
    }, { context, config, refs }: MetaData & {
        refs: CheckResult["refs"];
    }): Rule.ReportFixer;
};
export {};

/**
 * Logical property	to physical property map
 * @example
 * ```
 * border-block-end	border-bottom
 * border-block-end-color	border-bottom-color
 * border-block-end-style	border-bottom-style
 * border-block-end-width	border-bottom-width
 * border-block-start	border-top
 * border-block-start-color	border-top-color
 * border-block-start-style	border-top-style
 * border-block-start-width	border-top-width
 * border-inline-end	border-right
 * border-inline-end-color	border-right-color
 * border-inline-end-style	border-right-style
 * border-inline-end-width	border-right-width
 * border-inline-start	border-left
 * border-inline-start-color	border-left-color
 * border-inline-start-style	border-left-style
 * border-inline-start-width	border-left-width
 * border-start-start-radius	border-top-left-radius
 * border-end-start-radius	border-bottom-left-radius
 * border-start-end-radius	border-top-right-radius
 * border-end-end-radius	border-bottom-right-radius
 * margin-block-end	margin-bottom
 * margin-block-start	margin-top
 * margin-inline-end	margin-right
 * margin-inline-start	margin-left
 * padding-block-end	padding-bottom
 * padding-block-start	padding-top
 * padding-inline-end	padding-right
 * padding-inline-start	padding-left
 * inset-inline-start	left
 * inset-inline-end	right
 * inset-block-start	top
 * inset-block-end	bottom
 * ```
 */
export declare const logicalPhysicalMap: {
    readonly borderBlockEnd: "borderBottom";
    readonly borderBlockEndColor: "borderBottomColor";
    readonly borderBlockEndStyle: "borderBottomStyle";
    readonly borderBlockEndWidth: "borderBottomWidth";
    readonly borderBlockStart: "borderTop";
    readonly borderBlockStartColor: "borderTopColor";
    readonly borderBlockStartStyle: "borderTopStyle";
    readonly borderBlockStartWidth: "borderTopWidth";
    readonly borderInlineEnd: "borderRight";
    readonly borderInlineEndColor: "borderRightColor";
    readonly borderInlineEndStyle: "borderRightStyle";
    readonly borderInlineEndWidth: "borderRightWidth";
    readonly borderInlineStart: "borderLeft";
    readonly borderInlineStartColor: "borderLeftColor";
    readonly borderInlineStartStyle: "borderLeftStyle";
    readonly borderInlineStartWidth: "borderLeftWidth";
    readonly borderStartStartRadius: "borderTopLeftRadius";
    readonly borderEndStartRadius: "borderBottomLeftRadius";
    readonly borderStartEndRadius: "borderTopRightRadius";
    readonly borderEndEndRadius: "borderBottomRightRadius";
    readonly marginBlockEnd: "marginBottom";
    readonly marginBlockStart: "marginTop";
    readonly marginInlineEnd: "marginRight";
    readonly marginInlineStart: "marginLeft";
    readonly paddingBlockEnd: "paddingBottom";
    readonly paddingBlockStart: "paddingTop";
    readonly paddingInlineEnd: "paddingRight";
    readonly paddingInlineStart: "paddingLeft";
    readonly insetInlineStart: "left";
    readonly insetInlineEnd: "right";
    readonly insetBlockStart: "top";
    readonly insetBlockEnd: "bottom";
};
export declare const physicalLogicalMap: {
    readonly borderBottom: "borderBlockEnd";
    readonly borderBottomColor: "borderBlockEndColor";
    readonly borderBottomStyle: "borderBlockEndStyle";
    readonly borderBottomWidth: "borderBlockEndWidth";
    readonly borderTop: "borderBlockStart";
    readonly borderTopColor: "borderBlockStartColor";
    readonly borderTopStyle: "borderBlockStartStyle";
    readonly borderTopWidth: "borderBlockStartWidth";
    readonly borderRight: "borderInlineEnd";
    readonly borderRightColor: "borderInlineEndColor";
    readonly borderRightStyle: "borderInlineEndStyle";
    readonly borderRightWidth: "borderInlineEndWidth";
    readonly borderLeft: "borderInlineStart";
    readonly borderLeftColor: "borderInlineStartColor";
    readonly borderLeftStyle: "borderInlineStartStyle";
    readonly borderLeftWidth: "borderInlineStartWidth";
    readonly borderTopLeftRadius: "borderStartStartRadius";
    readonly borderBottomLeftRadius: "borderEndStartRadius";
    readonly borderTopRightRadius: "borderStartEndRadius";
    readonly borderBottomRightRadius: "borderEndEndRadius";
    readonly marginBottom: "marginBlockEnd";
    readonly marginTop: "marginBlockStart";
    readonly marginRight: "marginInlineEnd";
    readonly marginLeft: "marginInlineStart";
    readonly paddingBottom: "paddingBlockEnd";
    readonly paddingTop: "paddingBlockStart";
    readonly paddingRight: "paddingInlineEnd";
    readonly paddingLeft: "paddingInlineStart";
    readonly left: "insetInlineStart";
    readonly right: "insetInlineEnd";
    readonly top: "insetBlockStart";
    readonly bottom: "insetBlockEnd";
};

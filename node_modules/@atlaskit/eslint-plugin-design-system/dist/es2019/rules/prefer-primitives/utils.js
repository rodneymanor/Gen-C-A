import { isNodeOfType } from 'eslint-codemod-utils';
export const validPrimitiveElements = new Set(['div', 'span', 'article', 'aside', 'dialog', 'footer', 'header', 'li', 'main', 'nav', 'ol', 'section', 'ul', 'button']);
const getChildrenByType = (node, types) => {
  return node.children.filter(child => {
    return types.find(type => isNodeOfType(child, type));
  });
};
const isValidPrimitiveElement = node => {
  return validPrimitiveElements.has(node.openingElement.name.name);
};
export const shouldSuggest = node => {
  if (!node) {
    return false;
  }
  if (!isValidPrimitiveElement(node)) {
    return false;
  }

  /**
   * Ignore text, check for things like:
   * ```
   * <div>
   *   <h2>heading</h2>
   *   subheading <= rejected because of standalone piece of text
   * </div>
   * ```
   */
  const nonWhiteSpaceTextChildren = getChildrenByType(node, ['JSXText']).filter(child => child.value.trim() !== '');
  if (nonWhiteSpaceTextChildren.length > 0) {
    return false;
  }
  return true;
};
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import React from 'react';
import Spinner from '@atlaskit/spinner';
import { LARGE, LOADING_CONTENTS_OPACITY } from '../internal/constants';
import { Container, ContentsContainer, SpinnerContainer } from '../styled/loading-container';
export default class LoadingContainer extends React.Component {
  render() {
    const {
      children,
      isLoading,
      spinnerSize,
      contentsOpacity,
      testId,
      loadingLabel
    } = this.props;
    return /*#__PURE__*/React.createElement(Container, {
      testId: testId
    }, !isLoading ? children : /*#__PURE__*/React.createElement(ContentsContainer, {
      contentsOpacity: contentsOpacity,
      testId: testId
    }, children), isLoading && /*#__PURE__*/React.createElement(SpinnerContainer, {
      testId: testId
    }, /*#__PURE__*/React.createElement(Spinner, {
      size: spinnerSize,
      testId: testId && `${testId}--loadingSpinner`,
      label: loadingLabel
    })));
  }
}
_defineProperty(LoadingContainer, "defaultProps", {
  isLoading: true,
  spinnerSize: LARGE,
  contentsOpacity: LOADING_CONTENTS_OPACITY,
  loadingLabel: 'Loading table'
});
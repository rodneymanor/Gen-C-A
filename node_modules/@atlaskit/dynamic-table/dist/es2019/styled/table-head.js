/* table-head.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./table-head.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
/* eslint-disable @repo/internal/react/require-jsdoc */

import { forwardRef } from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import { B100, N300, N30A, N40 } from '@atlaskit/theme/colors';
import { ASC, DESC } from '../internal/constants';
import { getTruncationStyleVars } from './constants';
const CSS_VAR_TEXT_COLOR = '--local-dynamic-table-text-color';
const rankingStyles = null;
const headStyles = null;
const overflowTruncateStyles = null;
const truncationWidthStyles = null;
const fixedSizeTruncateStyles = null;
const cellStyles = null;
export const Head = ({
  isRanking,
  testId,
  ...props
}) => {
  return /*#__PURE__*/React.createElement("thead", _extends({
    "data-testid": testId
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, props, {
    className: ax(["_179rglyw", isRanking && "_1e0c1ule"])
  }));
};
const headCellBaseStyles = null;
const headCellBaseStylesOld = null;
const onClickStyles = null;
const baseStyles = null;
const ascendingStyles = null;
const descendingStyles = null;
export const HeadCell = /*#__PURE__*/forwardRef(({
  width,
  children,
  isSortable,
  sortOrder,
  isFixedSize,
  shouldTruncate,
  onClick,
  style,
  testId,
  ...rest
}, ref) => {
  const mergedStyles = {
    ...style,
    ...(width && getTruncationStyleVars({
      width
    })),
    [CSS_VAR_TEXT_COLOR]: `var(--ds-text-subtlest, ${N300})`
  };
  const isASC = sortOrder === ASC;
  const isDESC = sortOrder === DESC;
  const getFormattedSortOrder = () => {
    if (isASC) {
      return 'ascending';
    } else if (isDESC) {
      return 'descending';
    }
  };

  // If there is no content in the cell, it should be rendered as an empty `td`, not a `th`.
  // https://dequeuniversity.com/rules/axe/4.7/empty-table-header
  const Component = children ? 'th' : 'td';
  const isVisuallyRefreshed = fg('platform-component-visual-refresh');
  return /*#__PURE__*/React.createElement(Component, _extends({
    "aria-sort": getFormattedSortOrder()
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: mergedStyles,
    onClick: !isVisuallyRefreshed ? onClick : undefined,
    ref: ref,
    "data-testid": testId
  }, rest, {
    className: ax(["_izbqglyw _h7alglyw _85i51b66 _1q511b66 _y4tiu2gc _bozgu2gc _y3gn1e5h _1s37ze3t _uupyze3t", isVisuallyRefreshed ? "_11c8dcr7 _179r1on0 _mqm2glyw _kqswh2mm _syaz34id _k48pmoej _y3gn1e5h _s7n4nkob _1ygbvd8c" : "_11c8dcr7 _179r1on0 _mqm2glyw _t51zglyw _191wglyw _vchhusvi _kqswh2mm _syaz34id _k48pmoej _y3gn1e5h _s7n4jp4b _1ygbvd8c", !isVisuallyRefreshed && onClick && "_irr317ks _d0altlke", "_1bsb8a2a", isFixedSize && shouldTruncate && "_1bto1l2s _o5721q9c", isFixedSize && "_1reo15vq _18m915vq", !isVisuallyRefreshed && isSortable && "_173zglyw _pw6dglyw _1xgk1j28 _1wfn1j28 _y9yonqa1 _997wnqa1 _sklb1l7b _1j091l7b _19w61ule _1w611ule _1hvvidpf _n56nidpf _wyc4idpf _1d4oidpf _no7mstnw _qh32stnw _4b5mb3bt _hn3bb3bt _14gsx0bf _cigmx0bf _c77kvia6 _qzvtu2gc _f473via6 _1fpyidpf _a04fh2mm _xv14glyw _58ej1kw7 _1ay31kw7 _mdbq1kw7 _10pp1kw7 _1yw3ze3t _n2fdze3t _8607ze3t _szhwze3t _1g2wwc43 _ze9fwc43 _1lcgnqa1 _at5qnqa1 _o4d71l7b _npl51l7b _1rp11onz _1iornqa1 _oi051l7b _1ehx1onz _19t8nqa1 _1bog1l7b", !isVisuallyRefreshed && isASC && "_c77k1thn _142s94yt", !isVisuallyRefreshed && isDESC && "_f4731thn _17x894yt"])
  }), children);
});
/* table-cell.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./table-cell.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { getTruncationStyleVars } from './constants';
const fixedSizeTruncateStyles = null;
const overflowTruncateStyles = null;
const truncationWidthStyles = null;
const cellStyles = null;

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export const TableBodyCell = ({
  width,
  isFixedSize,
  shouldTruncate,
  innerRef,
  ...props
}) => /*#__PURE__*/React.createElement("td", _extends({
  // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
  style: getTruncationStyleVars({
    width
  }),
  // HOC withDimensions complains about the types but it is working fine
  // @ts-ignore
  ref: innerRef
  // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
  ,
  className: ax(["_1bsb8a2a", isFixedSize && shouldTruncate && "_1bto1l2s _o5721q9c", isFixedSize && "_1reo15vq _18m915vq", "_19itglyw _85i51b66 _1q511b66 _y4tiu2gc _bozgu2gc _y3gn1e5h _1s37ze3t _uupyze3t", props.className])
  // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
}, props));
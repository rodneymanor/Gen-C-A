import React from 'react';
import { type HeadType, type RowType, type SortOrderType } from '../types';
export interface TableProps {
    head?: HeadType;
    page?: number;
    rows?: Array<RowType>;
    rowsPerPage?: number;
    sortKey?: string;
    sortOrder?: SortOrderType;
    onPageRowsUpdate?: (pageRows: Array<RowType>) => void;
}
export interface WithSortedPageRowsProps {
    pageRows: Array<RowType>;
    isTotalPagesControlledExternally?: boolean;
}
export default function withSortedPageRows<WrappedComponentProps extends WithSortedPageRowsProps & TableProps, RefType = HTMLTableSectionElement>(WrappedComponent: React.ComponentType<WrappedComponentProps>): React.ForwardRefExoticComponent<React.PropsWithoutRef<Omit<WrappedComponentProps & TableProps, "pageRows"> & {
    forwardedRef?: React.Ref<RefType>;
}> & React.RefAttributes<RefType>>;

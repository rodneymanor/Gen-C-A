/* loading-container.tsx generated by @compiled/babel-plugin v0.36.1 */
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import "./loading-container.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/* eslint-disable @repo/internal/react/require-jsdoc */

export var CSS_VAR_CONTENTS_OPACITY = '--contents-opacity';
var containerStyles = null;
export var Container = function Container(_ref) {
  var children = _ref.children,
    testId = _ref.testId;
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": testId && "".concat(testId, "--container"),
    className: ax(["_kqswh2mm"])
  }, children);
};
var contentsContainerStyles = null;
export var ContentsContainer = function ContentsContainer(_ref2) {
  var children = _ref2.children,
    contentsOpacity = _ref2.contentsOpacity,
    testId = _ref2.testId;
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": testId && "".concat(testId, "--contents--container"),
    className: ax(["_tzy47hfw _lcxvglyw"]),
    style: _objectSpread(_objectSpread({}, _defineProperty({}, CSS_VAR_CONTENTS_OPACITY, contentsOpacity)), {}, {
      "--_cnddr8": ix("var(".concat(CSS_VAR_CONTENTS_OPACITY, ")"))
    })
  }, children);
};
var spinnerContainerStyles = null;
export var SpinnerContainer = function SpinnerContainer(_ref3) {
  var children = _ref3.children,
    testId = _ref3.testId;
  return /*#__PURE__*/React.createElement("div", {
    "data-testid": testId && "".concat(testId, "--spinner--container"),
    className: ax(["_1r04idpf _1e0c1txw _kqswstnw _4cvr1h6o _1bah1h6o"])
  }, children);
};
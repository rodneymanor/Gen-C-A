import React from 'react';
type OptionsInGroup = {
    [key: string]: boolean | undefined;
};
type SelectionStoreContextProps = {
    setItemState: (group: string, id: string, value: boolean | undefined) => void;
    getItemState: (group: string, id: string) => boolean | undefined;
    setGroupState: (group: string, value: OptionsInGroup) => void;
    getGroupState: (group: string) => OptionsInGroup;
};
/**
 *
 * SelectionStoreContext maintains the state of the selected items
 * and getter setters.
 *
 */
export declare const SelectionStoreContext: React.Context<SelectionStoreContextProps>;
type SelectionStoreProps = {
    children: React.ReactNode;
};
/**
 * Selection store will persist data as long as it remains mounted.
 * It handles the uncontrolled story for dropdown menu when the menu
 * items can be mounted/unmounted depending if the menu is open or closed.
 */
declare const SelectionStore: (props: SelectionStoreProps) => React.JSX.Element;
export default SelectionStore;

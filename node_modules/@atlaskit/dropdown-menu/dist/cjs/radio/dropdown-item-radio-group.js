"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.RadioGroupContext = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireWildcard(require("react"));
var _noop = _interopRequireDefault(require("@atlaskit/ds-lib/noop"));
var _useId = require("@atlaskit/ds-lib/use-id");
var _menu = require("@atlaskit/menu");
var _groupTitle = _interopRequireDefault(require("../internal/components/group-title"));
var _selectionStore = require("../internal/context/selection-store");
var _resetOptionsInGroup = _interopRequireDefault(require("../internal/utils/reset-options-in-group"));
var _excluded = ["children", "hasSeparator", "id", "isList", "isScrollable", "testId", "title"];
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * __Radio group context__
 * Context provider that wraps each DropdownItemRadioGroup
 */
var RadioGroupContext = exports.RadioGroupContext = /*#__PURE__*/(0, _react.createContext)({
  id: '',
  radioGroupState: {},
  selectRadioItem: _noop.default
});

/**
 * __Dropdown item radio group__
 *  Store which manages the selection state for each DropdownItemRadio
 *  across mount and unmounts.
 *
 */
var DropdownItemRadioGroup = function DropdownItemRadioGroup(_ref) {
  var children = _ref.children,
    hasSeparator = _ref.hasSeparator,
    id = _ref.id,
    isList = _ref.isList,
    isScrollable = _ref.isScrollable,
    testId = _ref.testId,
    title = _ref.title,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _useContext = (0, _react.useContext)(_selectionStore.SelectionStoreContext),
    setGroupState = _useContext.setGroupState,
    getGroupState = _useContext.getGroupState;
  var uid = (0, _useId.useId)();
  var titleId = "dropdown-menu-item-radio-group-title-".concat(uid);

  /**
   *  - initially `radioGroupState` is from selection store, so it's safe to update without re-rendering
   *  - we flush a render by updating this local radio group state
   */
  var _useState = (0, _react.useState)(function () {
      return getGroupState(id);
    }),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    radioGroupState = _useState2[0],
    setRadioGroupState = _useState2[1];
  var selectRadioItem = function selectRadioItem(childId, value) {
    var newValue = _objectSpread(_objectSpread({}, (0, _resetOptionsInGroup.default)(getGroupState(id))), {}, (0, _defineProperty2.default)({}, childId, value));
    setRadioGroupState(newValue);
    setGroupState(id, newValue);
  };
  return /*#__PURE__*/_react.default.createElement(RadioGroupContext.Provider, {
    value: {
      id: id,
      radioGroupState: radioGroupState,
      selectRadioItem: selectRadioItem
    }
  }, /*#__PURE__*/_react.default.createElement(_menu.Section, (0, _extends2.default)({
    hasSeparator: hasSeparator,
    id: id,
    isList: isList,
    isScrollable: isScrollable,
    testId: testId,
    titleId: title ? titleId : undefined
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, rest), title && /*#__PURE__*/_react.default.createElement(_groupTitle.default, {
    id: titleId,
    title: title
  }), children));
};
var _default = exports.default = DropdownItemRadioGroup;
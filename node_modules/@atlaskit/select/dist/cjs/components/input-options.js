/* input-options.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RadioOption = exports.CheckboxOption = void 0;
require("./input-options.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _checkbox = _interopRequireDefault(require("@atlaskit/icon/glyph/checkbox"));
var _radio = _interopRequireDefault(require("@atlaskit/icon/glyph/radio"));
var _svg = _interopRequireDefault(require("@atlaskit/icon/svg"));
var _platformFeatureFlags = require("@atlaskit/platform-feature-flags");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var optionStyles = {
  default: "_1e0c1txw _4cvr1h6o _1bsb1osq _uiztglyw _18ql1j7p _vchhusvi _85i51b66 _1q511b66 _bozgpxbi _y4tiutpp _bfhk1j28 _16qs1kw7 _syaz1kw7 _1di61dty",
  focused: "_bfhk166n _16qsn8hf _112e1vrj",
  disabled: "_syaz15gi"
};

// state of the parent option

// the primary color represents the outer or background element
var getPrimaryColor = function getPrimaryColor(_ref) {
  var isActive = _ref.isActive,
    isDisabled = _ref.isDisabled,
    isFocused = _ref.isFocused,
    isSelected = _ref.isSelected;
  if (isDisabled) {
    return "var(--ds-background-disabled, #091E4208)";
  } else if (isSelected && isActive) {
    return "var(--ds-background-selected-bold-pressed, #09326C)";
  } else if (isActive) {
    return "var(--ds-background-selected-pressed, #85B8FF)";
  } else if (isFocused && isSelected) {
    return "var(--ds-background-selected-bold-hovered, #0055CC)";
  } else if (isFocused) {
    return "var(--ds-surface, #FFFFFF)";
  } else if (isSelected) {
    return "var(--ds-background-selected-bold, #0C66E4)";
  }
  return "var(--ds-background-neutral, #091E420F)";
};

// the secondary color represents the radio dot or checkmark
var getSecondaryColor = function getSecondaryColor(_ref2) {
  var isDisabled = _ref2.isDisabled,
    isSelected = _ref2.isSelected;
  if (isDisabled && isSelected) {
    return "var(--ds-text-disabled, #091E424F)";
  } else if (!isSelected) {
    return 'transparent';
  }
  return "var(--ds-surface, #FFFFFF)";
};
var iconStyles = {
  inherit: "_1u9j1r31 _1gqp1r31",
  default: "_1u9j1elr _1gqp1elr"
};
var baseIconStyles = null;
var baseOptionStyles = null;
var ControlOption = function ControlOption(props) {
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    isActive = _useState2[0],
    setIsActive = _useState2[1];
  var onMouseDown = (0, _react.useCallback)(function () {
    return setIsActive(true);
  }, []);
  var onMouseUp = (0, _react.useCallback)(function () {
    return setIsActive(false);
  }, []);
  var Icon = props.Icon,
    children = props.children,
    innerProps = props.innerProps,
    innerRef = props.innerRef,
    cx = props.cx,
    className = props.className,
    isDisabled = props.isDisabled,
    isSelected = props.isSelected,
    isFocused = props.isFocused;
  var classNames = (0, _react.useMemo)(function () {
    return cx({
      option: true,
      'option--is-disabled': isDisabled,
      'option--is-focused': isFocused,
      'option--is-selected': isSelected
    }, className);
  }, [cx, isDisabled, isFocused, isSelected, className]);
  return /*#__PURE__*/React.createElement("div", (0, _extends2.default)({
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop
    className: (0, _runtime.ax)([optionStyles.default, isFocused && optionStyles.focused, isDisabled && optionStyles.disabled, classNames]),
    ref: innerRef,
    onMouseDown: onMouseDown,
    onMouseUp: onMouseUp,
    onMouseLeave: onMouseUp
  }, innerProps), /*#__PURE__*/React.createElement("div", {
    className: (0, _runtime.ax)(["_1e0c1txw _4cvr1h6o _1o9zidpf _y4ti1b66 _16cu892t _1xci892t _59qxe4h9 _8y3xe4h9", isSelected || isActive || isDisabled ? iconStyles.inherit : iconStyles.default])
  }, !!Icon ? /*#__PURE__*/React.createElement(Icon, {
    label: "",
    primaryColor: getPrimaryColor({
      isDisabled: isDisabled,
      isSelected: isSelected,
      isFocused: isFocused,
      isActive: isActive
    }),
    secondaryColor: getSecondaryColor({
      isDisabled: isDisabled,
      isSelected: isSelected
    }),
    isFacadeDisabled: true
  }) : null), /*#__PURE__*/React.createElement("div", {
    className: (0, _runtime.ax)(["_16jlkb7n _1reo15vq _1bto1l2s _o5721q9c"])
  }, children));
};
var NewCheckboxIcon = function NewCheckboxIcon(props) {
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props, @atlaskit/design-system/no-custom-icons
    React.createElement(_svg.default, props, /*#__PURE__*/React.createElement("g", {
      fillRule: "evenodd"
    }, /*#__PURE__*/React.createElement("rect", {
      x: "5.5",
      y: "5.5",
      width: "13",
      height: "13",
      rx: "1.5",
      fill: "currentColor"
    }), /*#__PURE__*/React.createElement("path", {
      fillRule: "evenodd",
      clipRule: "evenodd",
      d: "M16.3262 9.48011L15.1738 8.51984L10.75 13.8284L8.82616 11.5198L7.67383 12.4801L10.1738 15.4801C10.3163 15.6511 10.5274 15.75 10.75 15.75C10.9726 15.75 11.1837 15.6511 11.3262 15.4801L16.3262 9.48011Z",
      fill: "inherit"
    })))
  );
};
var NewRadioIcon = function NewRadioIcon(props) {
  return (
    /*#__PURE__*/
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props, @atlaskit/design-system/no-custom-icons
    React.createElement(_svg.default, props, /*#__PURE__*/React.createElement("g", {
      fillRule: "evenodd"
    }, /*#__PURE__*/React.createElement("circle", {
      cx: "12",
      cy: "12",
      r: "6.75",
      fill: "currentColor",
      strokeWidth: "1.5"
    }), /*#__PURE__*/React.createElement("circle", {
      cx: "12",
      cy: "12",
      r: "3",
      fill: "inherit"
    })))
  );
};

/**
 * __Checkbox option__
 */
var CheckboxOption = exports.CheckboxOption = function CheckboxOption(props) {
  return /*#__PURE__*/React.createElement(ControlOption, (0, _extends2.default)({
    Icon:
    // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
    (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons') ? NewCheckboxIcon :
    // eslint-disable-next-line @atlaskit/design-system/no-legacy-icons
    _checkbox.default
    // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
  }, props));
};

/**
 * __Radio option__
 */
var RadioOption = exports.RadioOption = function RadioOption(props) {
  return (
    /*#__PURE__*/
    // TODO https://product-fabric.atlassian.net/browse/DSP-20769
    React.createElement(ControlOption, (0, _extends2.default)({
      Icon:
      // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
      (0, _platformFeatureFlags.fg)('platform-visual-refresh-icons') ? NewRadioIcon :
      // eslint-disable-next-line @atlaskit/design-system/no-legacy-icons
      _radio.default
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props))
  );
};